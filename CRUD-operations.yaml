openapi: 3.1.0
info:
  version: '8'
  title: Whoz CRUD API
  summary: Build applications interacting with Whoz
  description: |
    The CRUD API allows for interaction with all your data managed in Whoz.

    The Whoz application itself relies on this CRUD API, which supports all use cases to manage data in Whoz. However, this API is pretty granular and has the following potential limitations (depending on your use case):
      - all ids used to target and link entities are Whoz internal ids. However most list operations allow for filtering with your external ids.
      - all updates are full updates (if you do not provide all the fields, potentially existing other fields in Whoz will be erased).
      - all updates are unitary
    You may want to have a look to the Bulk API if you find your use case suffers from these principles.

    <!-- theme: danger -->
    > Whoz is committed to expose all your data with read and write capabilities. However the current documentation may not cover every and all aspects. Specifically, you may find that the Whoz application at https://www.whoz.com/home emits undocumented API calls, or uses undocumented fields from documented API calls. These are not supported for external use and are subject to breaking changes without notice.
    >
    > If you find an uncovered use case or feature, please reach out to your CSM so that we may document and support them or provide you with alternative means of fulfilling your requirements.
  contact:
    name: API Support
    email: api@whoz.com
    url: 'https://developer.whoz.com'
  license:
    url: 'https://www.whoz.com'
    name: Whoz proprietary
servers:
  - url: 'https://www.whoz.com/api'
    description: production
paths:
  /accreditation:
    get:
      tags:
        - Talent
      summary: Accreditation - list
      description: 'List the accreditations of a [Talent](/models/talent/Talent.yaml).'
      operationId: accreditationList
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - name: talentId
          in: query
          description: Internal id of the Talent whose accreditations to read
          required: true
          schema:
            type: string
            examples:
              - 62091bacddb33316f05d4d9a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accreditation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Talent
      summary: Accreditation - create
      description: 'Create a accreditation on the [Profile](/models/talent/Profile.yaml) it references.'
      operationId: accreditationCreate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    federationId:
                      writeOnly: true
                    profileId:
                      writeOnly: true
                    talentId:
                      writeOnly: true
                  required:
                    - federationId
                    - profileId
                    - talentId
                - $ref: '#/components/schemas/Accreditation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accreditation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/accreditation/{entityId}':
    get:
      tags:
        - Talent
      summary: Accreditation - read
      description: Read a accreditation by its internal id.
      operationId: accreditationRead
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accreditation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Talent
      summary: Accreditation - update
      description: 'This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.'
      operationId: accreditationUpdate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accreditation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accreditation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Talent
      summary: Accreditation - delete
      description: Delete a accreditation for a Profile (hard delete)
      operationId: accreditationDelete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: 'No Content, the accreditation has been deleted.'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /certification:
    get:
      tags:
        - Talent
      summary: Certification - list
      description: 'List the certifications of a [Talent](/models/talent/Talent.yaml).'
      operationId: certificationList
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - name: talentId
          in: query
          description: Internal id of the Talent whose certifications to read
          required: true
          schema:
            type: string
            examples:
              - 62091bacddb33316f05d4d9a
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Talent
      summary: Certification - create
      description: 'Create a certification on the [Profile](/models/talent/Profile.yaml) it references.'
      operationId: certificationCreate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certification'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/certification/{entityId}':
    get:
      tags:
        - Talent
      summary: Certification - read
      description: Read a certification by its internal id.
      operationId: certificationRead
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Talent
      summary: Certification - update
      description: 'This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.'
      operationId: certificationUpdate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certification'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Talent
      summary: Certification - delete
      description: Delete a certification for a Profile (hard delete)
      operationId: certificationDelete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: 'No Content, the certification has been deleted.'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /profile:
    get:
      tags:
        - Talent
      summary: Profile - list
      description: 'List the [Profiles](/models/talent/Profile.yaml) of a [Talent](/models/talent/Talent.yaml).'
      operationId: profileList
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - name: talentId
          in: query
          description: Internal id of the Talent whose Profiles to list
          required: true
          schema:
            type: string
            examples:
              - 620e27c121f493566a5017f6
        - name: mainAndSecondary
          in: query
          description: Whether to return all Profiles or only the main one.
          required: false
          schema:
            type: string
            default: 'false'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Talent
      summary: Profile - create
      description: 'Create a [Profile](/models/talent/Profile.yaml) (version) for a [Talent](/models/talent/Talent.yaml)'
      operationId: profileCreate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/profile/{entityId}':
    get:
      tags:
        - Talent
      summary: Profile - read
      description: 'Read a [Profile](/models/talent/Profile.yaml).'
      operationId: profileRead
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Talent
      summary: Profile - update
      description: |-
        Update a [Profile](/models/talent/Profile.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: profileUpdate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Talent
      summary: Profile - delete
      description: |-
        Delete a [Profile](/models/talent/Profile.yaml) (version).
        This is a soft removal.
      operationId: profileDelete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/profile/{entityId}/set-as-main':
    post:
      tags:
        - Talent
      summary: Profile - set profile version as main version
      description: Set this Profile version as the main version for the related Talent. The profile must not be REMOVED.
      operationId: profileSetAsMain
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /resume:
    post:
      tags:
        - Talent
      summary: Profile - upload resume
      description: |
        The uploaded file will be attached to the [Profile](/models/talent/Profile.yaml).
      operationId: profileUploadResume
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type-Multipart'
        - name: analyze
          in: query
          description: 'When true, triggers an analyze on the uploaded resume. Be aware that this analysis erase and replace profile content with the analyzed one from resume.'
          schema:
            type: boolean
            examples:
              - 'true'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileId:
                  type: string
                  description: Internal id of the Profile to which the CV should be attached
                  examples:
                    - 630c824fb584966fe4c39b6e
                resumeFile:
                  type: string
                  description: The resume file to upload
                  contentMediaType: application/octet-stream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /talent:
    post:
      tags:
        - Talent
      summary: Talent - create
      description: |
        This operation takes as much or as little data provided to create a Talent and its main Profile and link them together.

        You can either provide the Talent's data in an application/json payload or their resume in a multipart/form-data with the word or pdf document.
      operationId: talentCreate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: 'The uploaded file will be parsed and analyzed to fill as much of the [Talent](/models/talent/Talent.yaml)''s [Profile](/models/talent/Profile.yaml) as possible.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Talent'
          multipart/form-data:
            schema:
              type: object
              properties:
                forRecruitment:
                  type: boolean
                  default: false
                managerId:
                  $ref: '#/components/schemas/managerId'
                resumeFile:
                  type: string
                  description: The resume file to upload
                  contentMediaType: application/octet-stream
                scope:
                  $ref: '#/components/schemas/scope'
                workspaceId:
                  type: string
                  description: Internal id of the workspace in which to create the Talent
                  examples:
                    - 603cb26702c5254bf093010f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/talent/{entityId}':
    put:
      tags:
        - Talent
      summary: Talent - update
      description: |-
        Update a [Talent](/models/talent/Talent.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: talentUpdate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Talent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    get:
      tags:
        - Talent
      summary: Talent - read
      description: 'Returns the corresponding [Talent](/models/talent/Talent.yaml)'
      operationId: talentRead
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Talent
      summary: Talent - delete
      description: |-
        This is a soft removal, this sets the `removed: true` flag on the [Talent](/models/talent/Talent.yaml).

        After this flag has been set, the corresponding Talent won't be returned by the list operation and it won't be taken into account for KPIs anymore.

        You can restore a deleted Talent by calling the [restore](/reference/Whoz.yaml/paths/~1talent~1{entityId}~1restore) operation.
      operationId: talentDelete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/talent/{entityId}/connect':
    post:
      tags:
        - Talent
      summary: Talent - connect
      description: |-
        Connect a Talent to a User, thus granting the corresponding person access to their Profile and potentially more Workspace resources depending on their granted roles and activated modules.

        To obtain the userId corresponding to the User you want to connect to this Talent you may use the [user read operation](/reference/Whoz.yaml/paths/~1user~1{userIdOrName}).
      operationId: talentConnect
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: Internal identifier of the target User.
                  examples:
                    - 603cb26702c5254bf093010f
              required:
                - userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/talent/{entityId}/create-profile-with-resume':
    post:
      tags:
        - Talent
      summary: Talent - create Profile with resume
      description: This create a new profile for this Talent by parsing and analyzing the given CV file
      operationId: talentCreateProfileWithResume
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type-Multipart'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                versionName:
                  type: string
                  description: Name of the profile version that will be created
                fileName:
                  type: string
                  description: Name of the CV file to upload
                contentLanguage:
                  type: string
                  description: Content language of the CV file to upload
                resumeFile:
                  type: string
                  description: The binary CV file to upload
                  contentMediaType: application/octet-stream
              required:
                - versionName
                - fileName
                - contentLanguage
                - resumeFile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/talent/{entityId}/notify-connection':
    post:
      tags:
        - Talent
      summary: Talent - notify connection
      description: Sends an email to invite the Talent to join the Talent's current Workspace.
      operationId: talentNotify
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                customMessage:
                  type: string
                  description: Custom message to send inside the email
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/talent/{entityId}/restore':
    post:
      tags:
        - Talent
      summary: Talent - restore
      description: 'This removes the `removed: true` flag on the [Talent](/models/talent/Talent.yaml).'
      operationId: talentRestore
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Talent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /talent/list/by-entity-ids:
    post:
      tags:
        - Talent
      summary: Talent - List by entity ids
      description: |
        Returns the chunked list of Talents matching the given entityIds.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: talentListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /talent/list/by-external-ids:
    post:
      tags:
        - Talent
      summary: Talent - List by external ids
      description: |
        Returns the chunked list of Talents matching the given external ids.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: talentListByExternalIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByExternalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /talent/list/by-workspace-id:
    post:
      tags:
        - Talent
      summary: Talent - List by workspace id
      description: |
        Returns a chunked list of Talents for a given workspace.
        Includes all Talents that have had the workspace in their operational situation at any point, including future configurations.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: talentListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ListInputByWorkspaceId'
                - type: object
                  properties:
                    worklogsModifiedSince:
                      type: string
                      description: Match only talents whose worklogs have been updated after the given instant
                      format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightweightTalentListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: false
  /activity:
    post:
      tags:
        - Platform
      summary: Activity - create
      description: Create an Activity
      operationId: activityCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/activity/{entityId}':
    put:
      tags:
        - Platform
      summary: Activity - update
      description: Update an Activity.
      operationId: activityUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    get:
      tags:
        - Platform
      summary: Activity - read
      description: Read an Activity
      operationId: activityRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Platform
      summary: Activity - delete
      description: |-
        This is a soft removal, this sets the `removed: true` flag on the [Activity](/models/platform/Activity.yaml).

        You can restore a deleted Activity by calling the [restore](/reference/Whoz.yaml/paths/~1activity~1{entityId}~1restore) operation.
      operationId: activityDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/activity/{entityId}/complete':
    post:
      tags:
        - Platform
      summary: Activity - complete
      description: Mark an activity as complete
      operationId: activityComplete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/activity/{entityId}/restore':
    post:
      tags:
        - Platform
      summary: Activity - restore
      description: 'This removes the `removed: true` flag on the [Activity](/models/platform/Activity.yaml).'
      operationId: activityRestore
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/activity/{entityId}/uncomplete':
    post:
      tags:
        - Platform
      summary: Activity - uncomplete
      description: Mark an activity as not complete
      operationId: activityUncomplete
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /activity/list/by-entity-ids:
    post:
      tags:
        - Platform
      summary: Activity - List by entity ids
      description: List activities by ids
      operationId: activityListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds_2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  /activity/list/by-federation-id:
    post:
      tags:
        - Platform
      summary: Activity - List by federation id
      description: |
        List activities matching the federation id. Data are lightened: only IDs and some fields are returned.
      operationId: activityListByFederationId
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityListInputByFederationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  /activity/list/by-linked-entity-ids:
    post:
      tags:
        - Platform
      summary: Activity - List by linked entity ids
      description: List activities by linked entity ids
      operationId: activityListByLinkedEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityListInputByLinkedEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  /activity/list/by-workspace-id:
    post:
      tags:
        - Platform
      summary: Activity - list by workspace id
      description: 'List the [Activities](/models/platform/Activity.yaml) matching the criteria in the given [Workspace](/models/platform/Workspace.yaml).'
      operationId: activityListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /activity/list/for-talent-id:
    post:
      tags:
        - Platform
      summary: Activity - list for talent id
      description: 'List the [Activities](/models/platform/Activity.yaml) that directly concern the [Talent](/models/talent/Talent.yaml).'
      operationId: activityListByOwnerId
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputForTalentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /federation:
    get:
      tags:
        - Platform
      summary: Federation - list
      description: |
        List the [Federations](/models/platform/Federation.yaml) matching the criteria.

        Reserved to Whoz SUPERADMIN.
      operationId: federationList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Federation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
    post:
      tags:
        - Platform
      summary: Federation - create
      description: |-
        Create a [Federation](/models/platform/Federation.yaml).

        Reserved to Whoz SUPERADMIN.
      operationId: federationCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Federation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Federation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  '/federation/{entityId}':
    get:
      tags:
        - Platform
      summary: Federation - read
      description: 'Read a [Federation](/models/platform/Federation.yaml).'
      operationId: federationRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Federation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Platform
      summary: Federation - update
      description: |-
        Update a [Federation](/models/platform/Federation.yaml).

        The User must have at least the ADMIN [FederationRole](/models/platform/FederationRole.yaml) on the [Federation](/models/platform/Federation.yaml).
      operationId: federationUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Federation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Federation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Platform
      summary: Federation - delete
      description: |-
        Soft delete a [Federation](/models/platform/Federation.yaml).

        Reserved to Whoz SUPERADMIN.
      operationId: federationDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Federation'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  '/federation/{entityId}/restore':
    post:
      tags:
        - Platform
      summary: Federation - restore
      description: |-
        Restore a soft deleted [Federation](/models/platform/Federation.yaml).

        Reserved to Whoz SUPERADMIN.
      operationId: federationRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Federation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /functionality-configuration:
    get:
      tags:
        - Platform
      summary: Functionality configuration - retrieve
      description: 'Provides the [FunctionalityEffectiveConfiguration](../models/platform/FunctionalityEffectiveConfiguration.yaml) for a federation, a workspace or a user, depending on the value indicated in the level parameter.'
      operationId: functionalityConfigurationRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - name: level
          in: query
          description: 'Describes the level at which the functionality configuration is managed: may be federation, workspace or user.'
          schema:
            type: string
            enum:
              - federation
              - workspace
              - user
        - $ref: '#/components/parameters/optionalFederationId'
        - $ref: '#/components/parameters/optionalWorkspaceId'
        - name: userId
          in: query
          description: Identifier of the user
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionalityEffectiveConfiguration'
        '204':
          description: No functionality configuration for this entity
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Platform
      summary: Functionality configuration - create
      description: 'Creates a new [FunctionalityConfiguration](../models/platform/FunctionalityConfiguration.yaml) for a federation, a workspace or a user, depending on the value indicated in the level parameter. It returns the effective configuration for the same entity.'
      operationId: functionalityConfigurationCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionalityConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionalityEffectiveConfiguration'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/functionality-configuration/{entityId}':
    put:
      tags:
        - Platform
      summary: Functionality configuration - update
      description: 'Updates a [FunctionalityConfiguration](../models/platform/FunctionalityConfiguration.yaml).'
      operationId: functionalityConfigurationUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionalityConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionalityEffectiveConfiguration'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /org-structure-dimension:
    get:
      tags:
        - Platform
      summary: OrgStructureDimension - list
      description: |
        List the [OrgStructureDimensions](/models/platform/OrgStructureDimension.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).
      operationId: orgStructureDimensionList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
        - $ref: '#/components/parameters/withRemoved'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgStructureDimension'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Platform
      summary: OrgStructureDimension - create
      description: 'Create an [OrgStructureDimension](/models/platform/OrgStructureDimension.yaml).'
      operationId: orgStructureDimensionCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgStructureDimension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureDimension'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/org-structure-dimension/{entityId}':
    get:
      tags:
        - Platform
      summary: OrgStructureDimension - read
      description: 'Read an [OrgStructureDimension](/models/platform/OrgStructureDimension.yaml).'
      operationId: orgStructureDimensionRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureDimension'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Platform
      summary: OrgStructureDimension - update
      description: 'Update an [OrgStructureDimension](/models/platform/OrgStructureDimension.yaml).'
      operationId: orgStructureDimensionUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgStructureDimension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureDimension'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Platform
      summary: OrgStructureDimension - delete
      description: 'Soft delete an [OrgStructureDimension](/models/platform/OrgStructureDimension.yaml).'
      operationId: orgStructureDimensionDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureDimension'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/org-structure-dimension/{entityId}/restore':
    post:
      tags:
        - Platform
      summary: OrgStructureDimension - restore
      description: 'Restore a soft deleted [OrgStructureDimension](/models/platform/OrgStructureDimension.yaml).'
      operationId: orgStructureDimensionRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureDimension'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /org-structure-item:
    get:
      tags:
        - Platform
      summary: OrgStructureItem - list
      description: |
        List the [OrgStructureItems](/models/platform/OrgStructureItem.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).
      operationId: orgStructureItemList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
        - $ref: '#/components/parameters/withRemoved'
        - $ref: '#/components/parameters/orgStructureDimensionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgStructureItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Platform
      summary: OrgStructureItem - create
      description: 'Create an [OrgStructureItem](/models/platform/OrgStructureItem.yaml).'
      operationId: orgStructureItemCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgStructureItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/org-structure-item/{entityId}':
    get:
      tags:
        - Platform
      summary: OrgStructureItem - read
      description: 'Read an [OrgStructureItem](/models/platform/OrgStructureItem.yaml).'
      operationId: orgStructureItemRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureItem'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Platform
      summary: OrgStructureItem - update
      description: 'Update an [OrgStructureItem](/models/platform/OrgStructureItem.yaml).'
      operationId: orgStructureItemUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgStructureItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Platform
      summary: OrgStructureItem - delete
      description: 'Soft delete an [OrgStructureItem](/models/platform/OrgStructureItem.yaml).'
      operationId: orgStructureItemDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureItem'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/org-structure-item/{entityId}/restore':
    post:
      tags:
        - Platform
      summary: OrgStructureItem - restore
      description: 'Restore a soft deleted [OrgStructureItem](/models/platform/OrgStructureItem.yaml).'
      operationId: orgStructureItemRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgStructureItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /user:
    post:
      tags:
        - Platform
      summary: User - create
      description: |-
        This API is moved to internal for now, we expose the unitary underlying services until the external need for composition is fully described.

        Create a User in Whoz.
        The username must not be used by another User, at least a FederationRole must be provided and the calling User must have at least ADMIN FederationRole or an ADMIN WorkspaceRole on a Workspace of every referenced Workspace and/or Federation.
      operationId: userCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  '/user/{userIdOrName}':
    get:
      tags:
        - Platform
      summary: User - read
      description: |-
        Read a user by its unique id or by its username.
        This always return a user so that the caller cannot screen the content of the Whoz database.
      operationId: userRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - name: userIdOrName
          in: path
          description: Unique id or username of the User to read
          required: true
          schema:
            type: string
            examples:
              - john.doe@whoz.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/user/{entityId}/change-username':
    post:
      tags:
        - Platform
      summary: User - change username
      description: Change the username of the User.
      operationId: userChangeUsername
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  title: New identifier of the user (main email address)
                  description: New username to use. This username (currently an email address) must not be used by another Whoz User as their username.
                  examples:
                    - john.doe@whoz.com
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/user/{entityId}/set-workspace-role':
    post:
      tags:
        - Platform
      summary: User - set role on Workspace
      description: Grant the given `role` to the User on the given Workspace. A `role` with the value `NONE` revokes access to the Workspace.
      operationId: userSetWorkspaceRole
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                  description: Internal id of the Workspace where the User will be granted the role
                  examples:
                    - 621803e65cbe888c895ee222
                role:
                  $ref: '#/components/schemas/UserWorkspaceRole'
              required:
                - workspaceId
                - role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/user/{entityId}/set-federation-role':
    post:
      tags:
        - Platform
      summary: User - set role on Federation
      description: Grant the given `role` to the User on the given Workspace. A `role` with the value `NONE` revokes access to the Workspace.
      operationId: userSetFederationRole
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                federationId:
                  type: string
                  description: Internal id of the Federation where the User will be granted the role
                  examples:
                    - 621803e65cbe888c895ee222
                role:
                  $ref: '#/components/schemas/UserFederationRole'
              required:
                - federationId
                - role
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /user/current:
    get:
      tags:
        - Platform
      summary: User - current
      description: Read the User associated to the provided authorization token
      operationId: userCurrent
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /workspace:
    get:
      tags:
        - Platform
      summary: Workspace - list
      description: |
        List the [Workspaces](/models/platform/Workspace.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).

        This service is intended for [Federation](/models/platform/Federation.yaml) administration, the User must have at least the ADMIN [FederationRole](/models/platform/FederationRole.yaml)
      operationId: workspaceList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Platform
      summary: Workspace - create
      description: |-
        Create a [Workspace](/models/platform/Workspace.yaml).

        The User must have at least the ADMIN role on the targeted [Federation](/models/platform/Federation.yaml)
      operationId: workspaceCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/workspace/{entityId}':
    get:
      tags:
        - Platform
      summary: Workspace - read
      description: |-
        Read a [Workspace](/models/platform/Workspace.yaml).

        The User must have at least the RESTRICTED [WorkspaceRole](/models/platform/UserWorkspaceRole.yaml) on the [Workspace](/models/platform/Workspace.yaml) or the ADMIN [FederationRole](/models/platform/UserFederationRole.yaml) on the [Federation](/models/platform/Federation.yaml)
      operationId: workspaceRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Platform
      summary: Workspace - update
      description: |-
        Update a [Workspace](/models/platform/Workspace.yaml).

        The User must have at least the ADMIN [FederationRole](/models/platform/FederationRole.yaml) on the corresponding [Federation](/models/platform/Federation.yaml).
      operationId: workspaceUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/workspace/{entityId}/restore':
    post:
      tags:
        - Platform
      summary: Workspace - restore
      description: |-
        Restore a soft deleted [Workspace](/models/platform/Workspace.yaml).

        The User must have at least the ADMIN [FederationRole](/models/platform/FederationRole.yaml) on the corresponding [Federation](/models/platform/Federation.yaml).
      operationId: workspaceRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /account/list/by-entity-ids:
    post:
      tags:
        - Business
      summary: Account - list by entity ids
      description: 'List the [Accounts](/models/business/Account.yaml) matching with the given entity ids array.'
      operationId: accountListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /account/list/by-external-ids:
    post:
      tags:
        - Business
      summary: Account - list by external ids
      description: 'List the [Accounts](/models/business/Account.yaml) matching with the given external ids array.'
      operationId: accountListByExternalIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByExternalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /account/list/by-workspace-id:
    post:
      tags:
        - Business
      summary: Account - list by workspace id
      description: 'List the [Accounts](/models/business/Account.yaml) matching with the given workspace id.'
      operationId: accountListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /account:
    post:
      tags:
        - Business
      summary: Account - create
      description: 'Create an [Account](/models/business/Account.yaml).'
      operationId: accountCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/account/{entityId}':
    get:
      tags:
        - Business
      summary: Account - read
      description: 'Read an [Account](/models/business/Account.yaml).'
      operationId: accountRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Business
      summary: Account - update
      description: |-
        Update an [Account](/models/business/Account.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: accountUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Business
      summary: Account - delete
      description: Soft delete an Account
      operationId: accountDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /contact:
    get:
      tags:
        - Business
      summary: Contact - list
      description: 'List the [Contacts](/models/business/Contact.yaml) matching the criteria in the given [Workspace](/models/platform/Workspace.yaml).'
      operationId: contactList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/workspaceId'
        - $ref: '#/components/parameters/externalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Business
      summary: Contact - create
      description: 'Create an [Contact](/models/business/Contact.yaml).'
      operationId: contactCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/contact/{entityId}':
    get:
      tags:
        - Business
      summary: Contact - read
      description: 'Read an [Contact](/models/business/Contact.yaml).'
      operationId: contactRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Business
      summary: Contact - update
      description: 'Update an [Contact](/models/business/Contact.yaml).'
      operationId: contactUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Business
      summary: Contact - delete
      description: Soft delete a Contact
      operationId: contactDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/contact/{entityId}/restore':
    post:
      tags:
        - Business
      summary: Contact - restore
      description: Restore a soft deleted Contact
      operationId: contactRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /dossier:
    post:
      tags:
        - Business
      summary: Dossier - create
      description: 'Create a [Dossier](/models/business/Dossier.yaml).'
      operationId: dossierCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/dossier/{entityId}':
    get:
      tags:
        - Business
      summary: Dossier - read
      description: 'Read a [Dossier](/models/business/Dossier.yaml).'
      operationId: dossierRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Business
      summary: Dossier - update
      description: |-
        Update a [Dossier](/models/business/Dossier.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: dossierUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Business
      summary: Dossier - delete
      description: 'A Dossier can only be deleted if it is not linked to other objects (Task, Contact…)'
      operationId: delete-Dossier-entityId
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/dossier/{entityId}/restore':
    post:
      tags:
        - Business
      summary: Dossier - restore
      description: Restore a soft deleted dossier
      operationId: dossierRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/dossier/{entityId}/win':
    post:
      tags:
        - Business
      summary: Dossier - win
      description: 'Mark an opportunity as "won" (effectively making it a deal) and create a project with the same name, Account and owner if there''s no project id in the request or already defined in the Dossier'
      operationId: dossierWin
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  $ref: '#/components/schemas/projectId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/dossier/{entityId}/lose':
    post:
      tags:
        - Business
      summary: Dossier - lose
      description: Mark an opportunity as "lost". All linked Tasks at the REQUEST status (resource requests) are automatically cancelled.
      operationId: dossierLose
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                closeDate:
                  $ref: '#/components/schemas/closeDate'
                lostReason:
                  $ref: '#/components/schemas/lostReason'
                lostReasonCategory:
                  $ref: '#/components/schemas/lostReasonCategory'
              required:
                - closeDate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/dossier/{entityId}/reopen':
    post:
      tags:
        - Business
      summary: Dossier - reopen
      description: Reset a dossier (closed opportunity or deal) as "open"
      operationId: dossierReopen
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                closeDate:
                  $ref: '#/components/schemas/closeDate'
                lostReason:
                  $ref: '#/components/schemas/lostReason'
                lostReasonCategory:
                  $ref: '#/components/schemas/lostReasonCategory'
              required:
                - closeDate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /dossier/list/by-entity-ids:
    post:
      tags:
        - Business
      summary: Dossier - List by entity ids
      description: |
        Returns the list of dossiers matching the given entityIds.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: dossierListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /dossier/list/by-external-ids:
    post:
      tags:
        - Business
      summary: Dossier - List by external ids
      description: |
        Returns the chunked list of Dossiers matching the given external ids.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: dossierListByExternalIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByExternalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /dossier/list/by-project-ids:
    post:
      tags:
        - Business
      summary: Dossier - List by project ids
      description: |
        Returns the chunked list of dossiers belonging to the given projects.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: dossierListByProjectIds
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByProjectIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /dossier/split:
    post:
      tags:
        - Business
      summary: Dossier - Split
      description: |
        Split an opportunity or deal (dossier) into 2 opportunities or deals.
        The original deal/opportunity is updated to end before the split date, a new deal/opportunity is created starting from the split date.
        All of the linked talent requests/assignments (tasks) will also be split if they are active at the split date.
        If the talent requests/assignments (tasks) have ended at the split date, they are kept into the original opportunity or deal.
        If the talent request/assignment starts after the split date, they are moved to the new deal/opportunity (dossier).
      operationId: dossierSplit
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                dossierId:
                  type: string
                  description: 'Internal ID of the dossier to split, that will become the origin dossier.'
                splitDate:
                  type: string
                  description: 'The date from which the new dossier will take effect, and the old dossier will be ended.'
                targetExternalId:
                  type: string
                  description: 'The external ID of the dossier to be created. If not set, the new dossier will not have any external id.'
                taskExternalIds:
                  type: object
                  description: 'A key-value map of task external ids, where keys are current external ids and values the expected target external ids in created tasks.'
              required:
                - dossierId
                - splitDate
              x-examples:
                Example 1:
                  dossierId: 6564718e8d75431a5578f6b4
                  splitDate: '2023-12-01'
                  targetWorkspaceId: 627a745acce6285ca90d802c
                  targetExternalId: EXTNEW
                  taskExternalIds:
                    EXT1: EXTNEW1
                    EXT2: EXTNEW2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: false
  /dossier/move:
    post:
      tags:
        - Business
      summary: Dossier - Move
      description: |-
        Move an opportunity or deal (dossier) into another workspace.
        The linked talent requests/assignments (tasks) will also be moved to the target workspace.
      operationId: dossierSplit
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                dossierId:
                  type: string
                  description: Internal ID of the dossier to move
                targetWorkspaceId:
                  type: string
                  description: The workspace that the new dossier will be moved to.
              required:
                - dossierId
                - targetWorkspaceId
              x-examples:
                Example 1:
                  dossierId: 6564718e8d75431a5578f6b4
                  splitDate: '2023-12-01'
                  targetWorkspaceId: 627a745acce6285ca90d802c
                  targetExternalId: EXTNEW
                  taskExternalIds:
                    EXT1: EXTNEW1
                    EXT2: EXTNEW2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: false
  /dossier/list/by-workspace-id:
    post:
      tags:
        - Business
      summary: Dossier - List by workspace id
      description: |
        Returns the chunked list of dossiers belonging to the given workspace.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: dossierListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DossierListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /project:
    post:
      tags:
        - Business
      summary: Project - create
      description: 'Create a [Project](/models/business/Project.yaml).'
      operationId: ProjectCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/project/{entityId}':
    get:
      tags:
        - Business
      summary: Project - read
      description: 'Read a [Project](/models/business/Project.yaml).'
      operationId: projectRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Business
      summary: Project - update
      description: |-
        Update a [Project](/models/business/Project.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: projectUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Business
      summary: Project - delete
      description: Delete (hard) a Project. A Project can only be deleted if it is not linked to any Dossier.
      operationId: projectDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: No Content
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /project/list/by-entity-ids:
    post:
      tags:
        - Business
      summary: Project - List by entity ids
      description: |
        Returns the chunked list of Projects matching the given entityIds.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: projectListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /project/list/by-workspace-id:
    post:
      tags:
        - Business
      summary: Project - List by workspace id
      description: |
        Returns the chunked list of projects belonging to the given workspace.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: projectListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task:
    post:
      tags:
        - Allocation
      summary: Task - create
      description: |-
        Create a [Task](/models/allocation/Task.yaml).

        The endDate and budgetedWorkload are required for tasks that are the type `MISSION`.
      operationId: taskCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task_input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}':
    get:
      tags:
        - Allocation
      summary: Task - read
      description: 'Read a [Task](/models/allocation/Task.yaml).'
      operationId: taskRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Allocation
      summary: Task - update
      description: |-
        Update a [Task](/models/allocation/Task.yaml).

        The endDate and budgetedWorkload are required for tasks that are the type `MISSION`.
      operationId: taskUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task_input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Allocation
      summary: Task - delete
      description: |-
        Soft delete a Task.

        A task can only be deleted if it is in REQUEST status
      operationId: taskDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/restore':
    post:
      tags:
        - Allocation
      summary: Task - restore
      description: Restore a soft deleted Task
      operationId: taskRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-assignee-or-candidate:
    post:
      tags:
        - Allocation
      summary: Task - List by assignee or candidates
      description: |
        Returns the list of Tasks on which given talents are assigned or candidates.
        Either assigneeIds or candidateIds must be provided.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByAssigneeOrCandidate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByAssigneeOrCandidate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-entity-ids:
    post:
      tags:
        - Allocation
      summary: Task - List by entity ids
      description: |
        Returns the chunked list of Tasks matching the given entityIds.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-project-ids:
    post:
      tags:
        - Allocation
      summary: Task - List by project ids
      description: |
        Returns the chunked list of tasks belonging to the given projects, thanks to their dossier.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByProjectIds
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByProjectIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-dossier-ids:
    post:
      tags:
        - Allocation
      summary: Task - List by dossier ids
      description: |
        Returns the chunked list of tasks belonging to the given dossiers.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByDossierIds
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListInputByDossierIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-external-ids:
    post:
      tags:
        - Allocation
      summary: Task - List by external ids
      description: |
        Returns the chunked list of Tasks matching the given external ids.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByExternalIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByExternalIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/list/by-workspace-id:
    post:
      tags:
        - Allocation
      summary: Task - List by workspace id
      description: |
        Returns the chunked list of Tasks matching the given workspaceId.

        Please see the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: taskListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/add-workflow-step':
    post:
      tags:
        - Allocation
      summary: Task - add workflow step
      description: Add a workflow step history on a task
      operationId: taskAddWorkflowStep
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStepDate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/cancel':
    post:
      tags:
        - Allocation
      summary: Task - cancel
      description: |-
        Cancel a Task.

        This can only be done for REQUEST Tasks, which will become CANCELLED
      operationId: taskCancel
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCancelInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/uncancel':
    post:
      tags:
        - Allocation
      summary: Task - uncancel
      description: |-
        "Uncancel" a Task.

        This can only be done for CANCELLED tasks, which will become REQUEST
      operationId: taskUncancel
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/set-candidate':
    post:
      tags:
        - Allocation
      summary: Task - set candidate
      description: Add or update a pre-selected candidate on a task
      operationId: taskSetCandidate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCandidate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/unset-candidate':
    post:
      tags:
        - Allocation
      summary: Task - unset candidate
      description: Remove a pre-selected candidate on a task
      operationId: taskUnsetCandidate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCandidate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/set-lead':
    post:
      tags:
        - Allocation
      summary: Task - set lead
      description: Set a talent as lead on a task
      operationId: taskSetLead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskLeadInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/unset-lead':
    post:
      tags:
        - Allocation
      summary: Task - unset lead
      description: Remove current lead on a task
      operationId: taskUnsetLead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/start':
    post:
      tags:
        - Allocation
      summary: Task - start
      description: |-
        Start a Task.

        This can only be done for REQUEST tasks, which will become IN_PROGRESS.
        The endDate is required for tasks that are the type `MISSION`.
      operationId: taskStart
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: ' Talent to assign and updated task data'
        content:
          application/json:
            schema:
              type: object
              properties:
                endDate:
                  $ref: '#/components/schemas/endDate'
                startDate:
                  $ref: '#/components/schemas/startDate'
                taskWorkloadByAssigneeId:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Workload'
                  examples:
                    - 6304aa71e3c98138d104149b:
                        value: 5
                        timescale: DAY
                timesheetPrefill:
                  type: boolean
                  description: Whether to prefill the workload plan with the budgeted workload within the boundaries of the task
                  default: true
                keepOriginRequest:
                  type: boolean
                  description: Whether to keep the corresponding task when the assigned workload does not match the origin task workload.
                  default: true
              required:
                - taskWorkloadByAssigneeId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/stop':
    post:
      tags:
        - Allocation
      summary: Task - stop
      description: |-
        Stop a Task.

        This can only be done for IN_PROGRESS tasks, which will become DONE
      operationId: taskStop
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        description: Effective endDate for the task
        content:
          application/json:
            schema:
              type: object
              properties:
                endDate:
                  $ref: '#/components/schemas/endDate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/task/{entityId}/resume':
    post:
      tags:
        - Allocation
      summary: Task - resume
      description: |-
        Resume a Task.

        This can only be done for DONE tasks, which will become IN_PROGRESS
      operationId: taskResume
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/publish-to-job-board:
    post:
      tags:
        - Allocation
      summary: Task - publish to job board
      description: |-
        Publish Tasks to the job board.

        You can only publish REQUEST tasks. All published Tasks must belong to the same workspace.
      operationId: taskPublishToJobboard
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  description: Internal identifiers of the Tasks to publish.
                  examples:
                    - - 6355a1e2688b223959d44a6d
                  items:
                    type: string
                federationId:
                  type: string
                  description: Internal Identifier of the federation into which the Tasks are managed.
                  examples:
                    - 63c5707bd50157ccb75202da
              required:
                - entityIds
                - federationId
      responses:
        '200':
          description: Updated Tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/share-to-workspaces:
    post:
      tags:
        - Allocation
      summary: Task - share to workspaces
      description: |-
        Share Tasks to a list of workspaces.

        This can only be done for REQUEST tasks and all shared Tasks have to belong to the same workspace.
      operationId: taskShareToWorkspaces
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  description: Internal identifiers of the Tasks to share.
                  examples:
                    - - 6355a1e2688b223959d44a6d
                  items:
                    type: string
                federationId:
                  type: string
                  description: Internal Identifier of the federation into which the Tasks are managed.
                  examples:
                    - 63c5707bd50157ccb75202da
                workspaceIds:
                  type: array
                  description: Internal identifiers of the Workspaces to which the Tasks should be shared.
                  minItems: 1
                  maxItems: 30
                  examples:
                    - - 63c5703f0fedf01ad51d1927
                  items:
                    type: string
              required:
                - entityIds
                - federationId
                - workspaceIds
      responses:
        '200':
          description: Updated Tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/split:
    post:
      tags:
        - Allocation
      summary: Task - split
      description: Split an assignement on given date. End date of existing task and start date of created assignement are adjusted according to given date. The unit cost of the created assignement is the one of assignee on split date.
      operationId: taskSplit
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSplitInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSplitOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /task/unpublish-from-job-board:
    post:
      tags:
        - Allocation
      summary: Task - unpublish from job board
      description: |-
        Unpublish Tasks from the job board.

        You can only unpublish tasks that are already published to the job board. All unpublished Tasks must belong to the same workspace.
      operationId: taskUnublishFromJobboard
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  description: Internal identifiers of the Tasks to unpublish.
                  examples:
                    - - 6355a1e2688b223959d44a6d
                  items:
                    type: string
                federationId:
                  type: string
                  description: Internal Identifier of the federation into which the Tasks are managed.
                  examples:
                    - 63c5707bd50157ccb75202da
              required:
                - entityIds
                - federationId
      responses:
        '200':
          description: Updated Tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /worklog:
    post:
      tags:
        - Allocation
      summary: Worklog - save
      description: |-
        Register Worklogs.
        Given the nature and cardinality of Worklogs, there is no unitary access to a given Worklog
      operationId: worklogSave
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        description: Worklogs to create or update
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Worklog'
      responses:
        '200':
          description: Updated Worklogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worklog'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    get:
      tags:
        - Allocation
      summary: Worklog - list
      description: |-
        Read Worklogs matching the given criteria.
        Given the nature and cardinality of Worklogs, there is no unitary access to a given Worklog
      operationId: worklogRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - name: talentId
          in: query
          description: Internal id of the Talent for whom the work is logged
          required: true
          schema:
            type: string
            examples:
              - 12a8959b3fb943432f3eefe6
        - name: month
          in: query
          description: 'Month for which to retrieve the Worklogs, in the yyyy-MM format'
          required: true
          schema:
            type: string
            examples:
              - 2022-08
        - name: workspaceId
          in: query
          description: 'Internal id of the Workspace into which the Worklogs are projected. Only the potential User corresponding to the Talent can read its Worklogs in all workspaces, all other have to choose a projected Workspace where they must have sufficient access permissions. In this case, Worklogs corresponding to Tasks produced in other Workspaces are aggregated into "UNAVAILABLE" virtual Worklogs.'
          schema:
            type: string
            examples:
              - 634e6d900343b20040b6b368
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worklog'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /worklog/schedule:
    post:
      tags:
        - Allocation
      summary: Worklog - schedule
      description: 'Register Worklogs for a given Talent between 2 dates, given a weekly schedule'
      operationId: worklogSchedule
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - name: force
          in: query
          description: Force logging of work even on closed Tasks
          schema:
            type: string
            default: 'false'
            examples:
              - 'true'
      requestBody:
        description: Schedule to create or update Worklogs from
        content:
          application/json:
            schema:
              type: object
              properties:
                customType:
                  type: integer
                  description: |-
                    A reference to a customType defined in federation.
                    Note that only default custom types are available for now.
                    See [WorklogCustomType](/models/platform/WorklogCustomType.yaml)
                  minimum: 3
                  maximum: 8
                  examples:
                    - 6
                dayLoads:
                  type: array
                  title: Describes the template week
                  items:
                    type: object
                    title: Workload for a given day in the template week
                    properties:
                      dayOfWeek:
                        type: string
                        enum:
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                          - SUNDAY
                        title: Day of the template week
                        examples:
                          - MONDAY
                      workload:
                        $ref: '#/components/schemas/workload'
                    required:
                      - dayOfWeek
                      - workload
                endDate:
                  type: string
                  title: Date (included) until which the template week is to be repeated
                  format: date
                  examples:
                    - '2021-03-12'
                overload:
                  type: boolean
                  title: 'Indicates whether overload is allowed (if false, the default) only free spots will be filled'
                  examples:
                    - false
                talentId:
                  $ref: '#/components/schemas/talentId'
                startDate:
                  type: string
                  title: Date (included) from which the template week is to be repeated
                  format: date
                  examples:
                    - '2021-01-01'
                taskId:
                  $ref: '#/components/schemas/taskId'
                type:
                  $ref: '#/components/schemas/type'
                workspaceId:
                  type: string
                  title: Internal id of the target workspace
                  description: Used to assess access permissions
              required:
                - endDate
                - startDate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  chargedDays:
                    type: number
                    title: number of added days (decimal)
                  clearedDays:
                    type: number
                    title: number of removed days (decimal)
                  overloadedDays:
                    type: number
                    title: number of overloaded days (decimal)
                  worklogs:
                    type: array
                    title: Modified timesheets
                    items:
                      $ref: '#/components/schemas/Worklog'
                    x-deprecated: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /worklog/clear:
    post:
      tags:
        - Allocation
      summary: Worklog - clear
      description: Clear worklogs in a period
      operationId: worklogClear
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                endDate:
                  type: string
                  title: Date (included) until which to clear worklogs
                  format: date
                  examples:
                    - '2021-06-22'
                talentId:
                  $ref: '#/components/schemas/talentId'
                startDate:
                  type: string
                  title: Date (included) from which to clear worklogs
                  format: date
                  examples:
                    - '2021-05-15'
                workspaceId:
                  type: string
                  title: Internal id of the target Workspace
                  description: Used to assess access permissions and keep public holidays defined in this Workspace
              required:
                - endDate
                - startDate
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /posting-indicator:
    get:
      tags:
        - Referential
      summary: PostingIndicator - list
      description: 'List the [PostingIndicators](/models/referential/PostingIndicator.yaml) matching the criteria in the given [Federation](/models/referential/Federation.yaml).'
      operationId: postingIndicatorList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostingIndicator'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: PostingIndicator - create
      description: 'Create a [PostingIndicator](/models/referential/PostingIndicator.yaml).'
      operationId: postingIndicatorCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostingIndicator'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingIndicator'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/posting-indicator/{entityId}':
    get:
      tags:
        - Referential
      summary: PostingIndicator - read
      description: 'Read a [PostingIndicator](/models/referential/PostingIndicator.yaml).'
      operationId: postingIndicatorRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingIndicator'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: PostingIndicator - update
      description: 'Update a [PostingIndicator](/models/referential/PostingIndicator.yaml).'
      operationId: postingIndicatorUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostingIndicator'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingIndicator'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Referential
      summary: PostingIndicator - delete
      description: Soft delete a PostingIndicator
      operationId: postingIndicatorDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingIndicator'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/posting-indicator/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: PostingIndicator - restore
      description: Restore a soft deleted PostingIndicator
      operationId: postingIndicatorRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostingIndicator'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /qualification:
    get:
      tags:
        - Referential
      summary: Qualification - list
      description: 'List the [Qualifications](/models/referential/Qualification.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).'
      operationId: qualificationList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Qualification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: Qualification - create
      description: 'Create a [Qualification](/models/referential/Qualification.yaml).'
      operationId: qualificationCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qualification'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/qualification/{entityId}':
    get:
      tags:
        - Referential
      summary: Qualification - read
      description: 'Read a [Qualification](/models/referential/Qualification.yaml).'
      operationId: qualificationRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: Qualification - update
      description: 'Update an [Qualification](/models/referential/Qualification.yaml).'
      operationId: qualificationUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qualification'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Referential
      summary: Qualification - delete
      description: Soft delete a Qualification
      operationId: qualificationDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/qualification/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: Qualification - restore
      description: Restore a soft deleted Qualification
      operationId: qualificationRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /qualification-category:
    get:
      tags:
        - Referential
      summary: QualificationCategory - list
      description: 'List the [QualificationCategories](/models/referential/QualificationCategory.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).'
      operationId: qualificationCategoryList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualificationCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: QualificationCategory - create
      description: 'Create a [QualificationCategory](/models/referential/QualificationCategory.yaml).'
      operationId: qualificationCategoryCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationCategory'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/qualification-category/{entityId}':
    get:
      tags:
        - Referential
      summary: QualificationCategory - read
      description: 'Read a [QualificationCategory](/models/referential/QualificationCategory.yaml).'
      operationId: qualificationCategoryRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationCategory'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: QualificationCategory - update
      description: 'Update a [QualificationCategory](/models/referential/QualificationCategory.yaml).'
      operationId: qualificationcategoryUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QualificationCategory'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Referential
      summary: QualificationCategory - delete
      description: Soft delete a QualificationCategory
      operationId: qualificationCategoryDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationCategory'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/qualification-category/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: QualificationCategory - restore
      description: Restore a soft deleted QualificationCategory
      operationId: qualificationCategoryRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationCategory'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /rate-card:
    get:
      tags:
        - Referential
      summary: RateCard - list
      description: 'List the [RateCards](/models/referential/RateCard.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).'
      operationId: rateCardList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RateCard'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: RateCard - create
      description: 'Create a [RateCard](/models/referential/RateCard.yaml).'
      operationId: rateCardCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateCard'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCard'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/rate-card/{entityId}':
    get:
      tags:
        - Referential
      summary: RateCard - read
      description: 'Read a [RateCard](/models/referential/RateCard.yaml).'
      operationId: rateCardRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCard'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: RateCard - update
      description: 'Update a [RateCard](/models/referential/RateCard.yaml).'
      operationId: rateCardUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateCard'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCard'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Referential
      summary: RateCard - delete
      description: Soft delete a RateCard
      operationId: rateCardDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCard'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/rate-card/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: RateCard - restore
      description: Restore a soft deleted RateCard
      operationId: rateCardRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateCard'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /skill:
    get:
      tags:
        - Referential
      summary: Skill - list
      description: 'List the [Skills](/models/referential/Skill.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).'
      operationId: skillList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/optionalFederationId'
        - $ref: '#/components/parameters/optionalWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: Skill - create
      description: 'Create a [Skill](/models/referential/Skill.yaml).'
      operationId: skillCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  '/skill/{entityId}':
    get:
      tags:
        - Referential
      summary: Skill - read
      description: 'Read a [Skill](/models/referential/Skill.yaml).'
      operationId: skillRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: Skill - update
      description: 'Update a [Skill](/models/referential/Skill.yaml).'
      operationId: skillUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
    delete:
      tags:
        - Referential
      summary: Skill - delete
      description: Soft delete a Skill
      operationId: skillDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
      x-internal: true
  '/skill/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: Skill - restore
      description: Restore a soft deleted Skill
      operationId: skillRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /learning-object:
    get:
      tags:
        - Referential
      summary: Learning object - list
      description: |-
        List the [Learning Object](/models/referential/LearningObject.yaml) matching the criteria in the given [Federation](/models/platform/Federation.yaml).


        When the workspaceId parameter is provided, the result set contains all global learning objects and local learning objects linked to the corresponding [Workspace](/models/platform/Workspace.yaml).
      operationId: learningObjectList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/externalIds'
        - $ref: '#/components/parameters/federationId'
        - $ref: '#/components/parameters/optionalWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Learning_object'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Referential
      summary: Learning object - create
      description: 'Create a [Learning object](/models/referential/LearningObject.yaml).'
      operationId: learningObjectCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Learning_object'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learning_object'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/learning-object/{entityId}':
    get:
      tags:
        - Referential
      summary: Learning object - read
      description: 'Read a [Learning object](/models/referential/LearningObject.yaml).'
      operationId: learningObjectRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learning_object'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Referential
      summary: Learning object - update
      description: 'Update a [Learning object](/models/referential/LearningObject.yaml).'
      operationId: learningObjectUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Learning_object'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learning_object'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Referential
      summary: Learning object - delete
      description: Soft delete a Learning object
      operationId: learningObjectDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learning_object'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/learning-object/{entityId}/restore':
    post:
      tags:
        - Referential
      summary: Learning object - restore
      description: Restore a soft deleted Learning object
      operationId: learningObjectRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Learning_object'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /billing-item:
    get:
      tags:
        - Tracking
      summary: Billing Item - list
      description: 'List the [Billing Items](/models/tracking/BillingItem.yaml) matching the criteria in the given [Dossier](/models/business/Dossier.yaml) or [Workspace](/models/platform/Workspace.yaml).'
      operationId: billingItemList
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
        - name: dossierId
          in: query
          description: Id of the dossier the listed billing items belong to.
          required: true
          schema:
            type: string
        - name: modifiedSince
          in: query
          description: Match only entities updated after the given instant.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    post:
      tags:
        - Tracking
      summary: Billing Item - create
      description: 'Create a [Billing Item](/models/tracking/BillingItem.yaml).'
      operationId: billingItemCreate
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/billing-item/{entityId}':
    get:
      tags:
        - Tracking
      summary: Billing Item - read
      description: 'Read a [Billing Item](/models/tracking/BillingItem.yaml).'
      operationId: billingItemRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Tracking
      summary: Billing Item - update
      description: 'Update a [Billing Item](/models/tracking/BillingItem.yaml).'
      operationId: billingItemUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Tracking
      summary: Billing Item - delete
      description: 'Soft delete a [Billing Item](/models/tracking/BillingItem.yaml).'
      operationId: billingItemDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/biling-item/{entityId}/mark-transmitted':
    post:
      tags:
        - Tracking
      summary: Billing Item - mark transmitted
      description: 'Mark a [Billing Item](/models/tracking/BillingItem.yaml) transmitted. Mark a Billing Item as transmitted. This action updates the status to TRANSMITTED.'
      operationId: billingItemUnvalidate
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
        - name: entityId
          in: path
          description: Internal id of the target entity
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/billing-item/{entityId}/restore':
    post:
      tags:
        - Tracking
      summary: Billing Item - restore
      description: 'Restore a soft deleted [Billing Item](/models/tracking/BillingItem.yaml).'
      operationId: billingItemRestore
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/biling-item/{entityId}/unvalidate':
    post:
      tags:
        - Tracking
      summary: Billing Item - unvalidate
      description: 'Mark a validated [Billing Item](/models/tracking/BillingItem.yaml) as no longer validated. This action updates the status to DRAFT. Ensure that you only attempt to unvalidate Billing Items that are currently in the VALIDATED status.'
      operationId: billingItemUnvalidate
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
        - name: entityId
          in: path
          description: Internal id of the target entity
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/biling-item/{entityId}/validate':
    post:
      tags:
        - Tracking
      summary: Billing Item - validate
      description: |-
        Validate a [Billing Item](/models/tracking/BillingItem.yaml). This will update the status to VALIDATED. For Billing items of type TURNOVER_RECOGNITION, they must be in the TO_VALIDATE status to be validated.
        Turnover recognition items automatically get the TO_VALIDATE status when the corresponding timesheet is VALIDATED.
      operationId: billingItemValidate
      parameters:
        - name: Content-Type
          in: header
          description: Content type of the payload
          required: true
          schema:
            type: string
            default: application/json
            examples:
              - application/json
        - name: Accept-Version
          in: header
          description: Version of the Whoz API to use
          required: true
          schema:
            type: string
            enum:
              - V1
              - V2
              - V3
              - V4
              - V5
              - V6
              - V7
              - V8
              - V9
              - V10
              - latest
            default: V1
            examples:
              - V10
        - name: entityId
          in: path
          description: Internal id of the target entity
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /timesheet:
    get:
      tags:
        - Tracking
      summary: Timesheet - list
      description: |
        List the Timesheet of a Talent for a given month.
      operationId: timesheetList
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - name: talentId
          in: query
          description: Internal id of the Talent whose Timesheet to read
          required: true
          schema:
            type: string
            examples:
              - 621159a55f6ca49a79f9a1f1
        - name: month
          in: query
          description: Month of the Timesheet
          required: true
          schema:
            type: string
            examples:
              - 2022-02
        - name: workspaceId
          in: query
          description: 'If the requesting User is the Talent, then the workspaceId parameter is optional and the included Worklogs (deprecated) come from all workspaces this Talent has logged work into. Otherwise workspaceId is mandatory and the requesting User must have sufficient permissions in the said workspace. Worklogs from other Workspaces will be aggregated and displayed as `UNAVAILABLE`.'
          schema:
            type: string
            examples:
              - 6211599c7449b32543e2a3bf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timesheet'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/timesheet/{entityId}':
    get:
      tags:
        - Tracking
      summary: Timesheet - read
      description: Read a Timesheet
      operationId: timesheetRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timesheet'
        '401':
          description: Unauthorized
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /business-credential:
    post:
      tags:
        - Business
      summary: Business credential - create
      description: 'Create a [Business credential](/models/business/credential/BusinessCredential.yaml).'
      operationId: BusinessCredentialCreate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business_credential_input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business_credential'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  '/business-credential/{entityId}':
    get:
      tags:
        - Business
      summary: Business credential - read
      description: 'Read a [Business credential](/models/business/credential/BusinessCredential.yaml).'
      operationId: businesssCredentialRead
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business_credential'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    put:
      tags:
        - Business
      summary: Business credential - update
      description: |-
        Update a [Business credential](/models/business/credential/BusinessCredential.yaml).

        This is a full update, the writable fields that are not provided in the request payload will be erased in Whoz.
      operationId: businessCredentialUpdate
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business_credential_update_input'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business_credential'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/Unprocessable'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
    delete:
      tags:
        - Business
      summary: Business credential - delete
      description: Delete a Business credential.
      operationId: businessCredentialDelete
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: No Content
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /business-credential/list/by-entity-ids:
    post:
      tags:
        - Business
      summary: Business credential - List by entity ids
      description: |
        Returns the chunked list of Business credentials matching the given entityIds.

        See the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: businessCredentialListByEntityIds
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByEntityIds'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCredentialListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
  /business-credential/list/by-workspace-id:
    post:
      tags:
        - Business
      summary: Business credential - List by workspace id
      description: |
        Returns the chunked list of Business credentials belonging to the given workspace.

        See the [list principles](../docs/principles/Lists.md) for details about list management in Whoz.
      operationId: businessCredentialListByWorkspaceId
      parameters:
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputByWorkspaceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCredentialListOutput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - BearerToken: []
      servers:
        - url: 'https://www.whoz.com/api'
          description: production
tags:
  - name: Allocation
    description: Handles assignments and worklogs
  - name: Business
    description: Handles opportunities and accounts
  - name: Platform
    description: Handles users and workspaces
  - name: Referential
    description: Handles all global referentials
  - name: Talent
    description: Handle talents and profiles
  - name: Tracking
    description: Handle timesheets and billing items
components:
  parameters:
    externalIds:
      name: externalIds
      in: query
      description: 'List of external ids to look up separated by a comma ","'
      required: false
      schema:
        type: string
        examples:
          - 'ABC00123,CDE98099'
    federationId:
      name: federationId
      in: query
      description: Internal id of the Federation to search
      required: true
      schema:
        type: string
        examples:
          - 6217a4280672d075d484a6e0
    modifiedSince:
      name: modifiedSince
      in: query
      description: ISO date after which the matching entities must have been modified
      required: false
      schema:
        type: string
        format: date-time
    optionalFederationId:
      name: federationId
      in: query
      description: Internal id of the Federation to search
      required: false
      schema:
        type: string
        examples:
          - 6217a4280672d075d484a6e0
    optionalWorkspaceId:
      name: workspaceId
      in: query
      description: Internal id of the workspace to search
      required: false
      schema:
        type: string
        examples:
          - 620e8568cd82a62b6088f07a
    orgStructureDimensionId:
      name: orgStructureDimensionId
      in: query
      description: Filter orgStructureItem by their orgStructureDimensionId
      required: false
      schema:
        type: string
        examples:
          - 624aad9a31545e2d4f2c6243
    withRemoved:
      name: withRemoved
      in: query
      description: Whether to include removed entities or not
      required: false
      schema:
        type: boolean
        examples:
          - true
    workspaceId:
      name: workspaceId
      in: query
      description: Internal id of the workspace to search
      required: true
      schema:
        type: string
        examples:
          - 620e8568cd82a62b6088f07a
    entityId:
      name: entityId
      in: path
      description: Internal id of the target entity
      required: true
      schema:
        type: string
        examples:
          - 62082577b43c3375e75d4ed3
    Accept-Version:
      name: Accept-Version
      in: header
      description: Version of the Whoz API to use
      required: true
      schema:
        type: string
        enum:
          - V1
          - V2
          - V3
          - V4
          - V5
          - V6
          - V7
          - V8
          - V9
          - V10
          - latest
        default: V1
        examples:
          - V10
    Content-Type:
      name: Content-Type
      in: header
      description: Content type of the payload
      required: true
      schema:
        type: string
        default: application/json
        examples:
          - application/json
    Content-Type-Multipart:
      name: Content-Type
      in: header
      description: 'Content type of the payload, must be multipart/form-data'
      required: true
      schema:
        type: string
        default: multipart/form-data
        examples:
          - multipart/form-data
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://www.whoz.com/auth/realms/whoz/protocol/openid-connect/auth'
          scopes: {}
        clientCredentials:
          refreshUrl: ''
          scopes: {}
          tokenUrl: 'https://www.whoz.com/auth/realms/whoz/protocol/openid-connect/token'
    BearerToken:
      type: http
      scheme: bearer
    OIDC:
      type: openIdConnect
      openIdConnectUrl: 'https://www.whoz.com/auth/realms/whoz/.well-known/openid-configuration'
  responses:
    Forbidden:
      description: 'The operation was forbidden, you are not allowed to perform it (insufficient permissions, wrong target entity…)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          examples:
            Access denied:
              value:
                errors:
                  - status: FORBIDDEN
                    code: SECURITY_ERROR
                    title: Access is denied
                    detail: Access is denied
    Unauthorized:
      description: 'The request was not authorized, the Bearer token is probably missing, invalid or expired.'
      headers:
        www-authenticate:
          schema:
            type: string
          description: Indication about why the request was not authorized
    Unprocessable:
      description: |-
        The request was correctly authorized, but the provided payload was not passing all integrity constraints.

        Please check the response payload for details about what was incorrect.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  schemas:
    Accreditation:
      type: object
      title: Accreditation
      description: |-
        **Functional Name**: Accreditation

        **Description**: An accreditation is the official recognition of compliance with certain standards, enabling you to work in certain environments or countries. For example, health and safety accreditations, visas, etc.

        In contrast to educations and positions, accreditations are not embedded in the profile itself. They are handled with their own set of endpoints.

        **Main Touchpoints**:
        * [Profile](./76340de6e7b1a-profile): An accreditation is for a specific profile, which in turn is related to a talent.
        * [Qualification](./ab1e4feecfe51-qualification): One or more qualifications can be related to an accreditation.

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): An accreditation is defined for a federation as it belongs to a profile/talent.
      allOf:
        - type: object
          properties:
            aptitudeReferences:
              type: array
              description: '`UNCLASSIFIED` aptitudes that were accredited by this Accreditation'
              items:
                $ref: '#/components/schemas/AptitudeReference'
              x-whoz-permission: UNCLASSIFIED
            deliveringEntity:
              type: string
              description: '`UNCLASSIFIED` Entity that delivered this Accreditation'
              examples:
                - AWS
              x-whoz-permission: UNCLASSIFIED
            description:
              type: string
              description: '`UNCLASSIFIED` Description of the Accreditation. This field accepts markdown.'
              examples:
                - |
                  The AWS Accredited Solutions Architect - Associate examination is intended for individuals who perform a solutions architect role and have one or more years of hands-on experience designing available, cost-efficient, fault-tolerant, and scalable distributed systems on AWS.
              x-whoz-permission: UNCLASSIFIED
            expirationDate:
              type: string
              description: '`UNCLASSIFIED` Date at which the Accreditation expires'
              format: date
              examples:
                - '2023-05-01'
              x-whoz-permission: UNCLASSIFIED
            externalId:
              type: string
              description: '`UNCLASSIFIED` Identifier of this Accreditation in the customer''s external system'
              examples:
                - BGH67-78
              x-whoz-permission: UNCLASSIFIED
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the federation this Accreditation belongsTo'
              readOnly: true
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: UNCLASSIFIED
            obtentionDate:
              type: string
              description: '`UNCLASSIFIED` Date at which the Accreditation was obtained'
              format: date
              examples:
                - '2023-05-01'
              x-whoz-permission: UNCLASSIFIED
            profileId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the profile this Accreditation is attached to'
              readOnly: true
              examples:
                - 5f917a1e8e035876c748ae76
              x-whoz-permission: UNCLASSIFIED
            qualificationIds:
              type: array
              description: '`UNCLASSIFIED` Internal ids of the Qualifications related to this Accreditation'
              examples:
                - - 8177533c-ca28-11ec-9d64-0242ac120002
                  - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
              items:
                type: string
              x-whoz-permission: UNCLASSIFIED
            talentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent detaining this Accreditation'
              readOnly: true
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: UNCLASSIFIED
            title:
              type: string
              description: '`UNCLASSIFIED` Title of the Accreditation'
              examples:
                - AWS Accredited Solutions Architect – Associate
              x-whoz-permission: UNCLASSIFIED
          required:
            - title
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Talent
    AptitudeReference:
      type: object
      title: AptitudeReference
      description: A reference to an aptitude of the Profile
      properties:
        aptitudeId:
          type: string
          description: Internal id of the aptitude this references to
          examples:
            - 60093e43e677a32d0096356e
        conceptId:
          type: string
          description: 'UUID of the referenced Concept in the ontology (aka skill). When used in input if there is no aptitudeId, Whoz application will determine which aptitude has this concept. If none, a new aptitude will be added to the Profile.'
          examples:
            - 583eda17-51fe-497f-9e73-b5dbdef66e04
        name:
          type: string
          description: 'Name of the referenced Aptitude. When used in input if there is nor aptitudeId nor conceptId, Whoz application will determine which aptitude has this name. If none, a new aptitude will be added to the Profile.'
          examples:
            - architectural design
        type:
          type: string
          enum:
            - ACTIVITY_AREA
            - BEHAVIORAL
            - BUSINESS_SOFTWARE
            - CROSS_FUNCTIONAL
            - DATABASE
            - FRAMEWORK
            - FUNCTIONAL
            - FUNDING
            - LANGUAGE
            - METHOD
            - MISSION
            - NORMS_AND_STANDARDS
            - OPERATING_SYSTEM
            - PLATFORM
            - PRODUCT
            - PROGRAMMING_LANGUAGE
            - PROTOCOL
            - TECHNICAL
            - TECHNOLOGY
            - TOOL
            - UNCLASSIFIED
          description: Type of the referenced Aptitude
          readOnly: true
          examples:
            - FUNCTIONAL
      x-tags:
        - Talent
    Domain:
      type: object
      title: Domain
      description: Base representation of a Domain entity handled in Whoz
      properties:
        createdBy:
          type: string
          description: '`PRIVATE` Internal id of the User that created this domain object'
          readOnly: true
          examples:
            - 5f8578c7eef5f93dd0fd8f6e
          x-whoz-permission: PRIVATE
        createdDate:
          type: string
          description: '`PRIVATE` ISO date at which this domain object was created'
          format: date-time
          readOnly: true
          x-whoz-permission: PRIVATE
        externalId:
          type: string
          description: '`PRIVATE` External identifier of this domain object'
          examples:
            - ABC00123
          x-whoz-permission: PRIVATE
        id:
          type: string
          description: '`UNCLASSIFIED` Internal id of the domain object, stability in time not guaranteed'
          readOnly: true
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
        lastModifiedBy:
          type: string
          description: '`PRIVATE` Internal id of the last User that modified this domain object'
          readOnly: true
          examples:
            - 5f92a3ae72e1a80d87bfbb76
          x-whoz-permission: PRIVATE
        lastModifiedDate:
          type: string
          description: '`PRIVATE` ISO date at which this domain object was modified last'
          format: date-time
          readOnly: true
          x-whoz-permission: PRIVATE
      x-tags:
        - Common
    Certification:
      type: object
      title: Certification
      description: |
        **Functional Name**: Certification

        **Description**: A certification is proof in the form of a document (certificate), provided by an independent body, showing that a talent can perform certain tasks to a required standard. In contrast to educations and positions, certifications are not embedded in the profile itself. They are handled with their own set of endpoints.

        **Main Touchpoints**: 
        * [Qualification](./ab1e4feecfe51-qualification): A certification is related to one or more qualifications.
        * [Profile](./76340de6e7b1a-profile): A certification is for a specific profile, which in turn is related to a talent.
        * [Talent](./4b21183f6dc28-talent): A certification is for a given talent.

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A certification is defined for a federation as it belongs to a profile/talent.
      allOf:
        - type: object
          properties:
            aptitudeReferences:
              type: array
              description: '`PRIVATE` aptitudes that were certified by this Certification'
              items:
                $ref: '#/components/schemas/AptitudeReference'
              x-whoz-permission: PRIVATE
            deliveringEntity:
              type: string
              description: '`PRIVATE` Entity that delivered this Certification'
              examples:
                - AWS
              x-whoz-permission: PRIVATE
            description:
              type: string
              description: '`PRIVATE` Description of the certification. This field accepts markdown.'
              examples:
                - |
                  The AWS Certified Solutions Architect - Associate examination is intended for individuals who perform a solutions architect role and have one or more years of hands-on experience designing available, cost-efficient, fault-tolerant, and scalable distributed systems on AWS.
              x-whoz-permission: PRIVATE
            expirationDate:
              type: string
              description: '`PRIVATE` Date at which the Certification expires'
              format: date
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the federation this Certification belongsTo'
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: UNCLASSIFIED
            obtentionDate:
              type: string
              description: '`PRIVATE` Date at which the Certification was obtained'
              format: date
              x-whoz-permission: PRIVATE
            profileId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the profile this Certification is attached to'
              examples:
                - 5f917a1e8e035876c748ae76
              x-whoz-permission: UNCLASSIFIED
            qualificationIds:
              type: array
              description: '`PRIVATE` Internal ids of the Qualifications related to this Certification'
              examples:
                - - 8177533c-ca28-11ec-9d64-0242ac120002
                  - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
              items:
                type: string
              x-whoz-permission: PRIVATE
            talentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent detaining this Certification'
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: UNCLASSIFIED
            title:
              type: string
              description: '`PRIVATE` Title of the Certification'
              examples:
                - AWS Certified Solutions Architect – Associate
              x-whoz-permission: PRIVATE
          required:
            - federationId
            - profileId
            - talentId
            - title
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Talent
    Profile:
      type: object
      title: Profile
      description: |
        **Functional Name**: Profile version

        **Description**: A profile details a talent's education, experience, and professional skills. The provided information enables Whoz to search and match talents to tasks.

        **Main Touchpoints**
        * [Qualification](./ab1e4feecfe51-qualification): Different elements on a profile, such as education can be linked to qualifications. A qualification can also be directly linked to the profile.
        * [Skill](./2cc451ed12f92-skill) - Aptitudes on a profile reference skills.
        * [Projet](./b387fc665661b-project) - Experiences on a profile reference the project that the experience was related to.

        **Organization Level**
        * [Talent](./4b21183f6dc28-talent): A talent can have one or more profiles.
      allOf:
        - type: object
          properties:
            aptitudes:
              type: array
              description: '`PRIVATE` Aptitudes possessed by this Profile'
              items:
                $ref: '#/components/schemas/Aptitude'
              x-whoz-permission: PRIVATE
            careerActionPlan:
              type: string
              description: '`CONFIDENTIAL` Description of the actions to be taken by the Talent to achieve their career goals'
              x-whoz-permission: CONFIDENTIAL
            completionRate:
              type: number
              description: '`PRIVATE` Indicates the level of completion of this profile, taking into account important sections such as aptitudes, positions, etc.'
              readOnly: true
              examples:
                - 0.87
              x-whoz-permission: PRIVATE
            contentLanguage:
              type: string
              description: '`PRIVATE` Language into which this Profile is expressed, as an ISO 639-1 tag.'
              default: en
              x-whoz-permission: PRIVATE
            educations:
              type: array
              description: '`PRIVATE` List of educations (degrees, trainings…) this Profile had'
              items:
                $ref: '#/components/schemas/Education'
              x-whoz-permission: PRIVATE
            headline:
              type: object
              title: Headline
              description: Main data about this Profile
              properties:
                bio:
                  type: string
                  description: '`PRIVATE` (short) biography up to now'
                  examples:
                    - After a master's degree in computer science…
                  x-whoz-permission: PRIVATE
                company:
                  type: string
                  description: '`PRIVATE` Current company name of the Profile'
                  examples:
                    - Whoz
                  x-whoz-permission: PRIVATE
                internationalMobility:
                  type: boolean
                  description: '`CONFIDENTIAL` Whether the Talent would like to work abroad'
                  default: false
                  x-whoz-permission: CONFIDENTIAL
                jobTitle:
                  type: string
                  description: '`PRIVATE` Current position description'
                  examples:
                    - Lead developer
                  x-whoz-permission: PRIVATE
                mobilityDate:
                  type: string
                  description: '`SECRET` The date of the wished mobility'
                  format: date
                  x-whoz-permission: SECRET
                mobilityDestinations:
                  type: array
                  description: '`SECRET` Geolocalized addresses of wished mobility'
                  items:
                    $ref: '#/components/schemas/Address'
                  x-whoz-permission: SECRET
                nationalMobility:
                  type: boolean
                  description: '`CONFIDENTIAL` Whether the Talent would like to work somewhere else in the same country'
                  default: false
                  x-whoz-permission: CONFIDENTIAL
                seekingOpportunities:
                  type: boolean
                  description: '`CONFIDENTIAL` Indicates whether the talent is looking for job/missions offers'
                  default: false
                  x-whoz-permission: CONFIDENTIAL
                seekingOpportunitiesLastModifiedDate:
                  type: string
                  description: '`CONFIDENTIAL` Date of the last change in `seekingOpportunities` value'
                  format: date-time
                  x-whoz-permission: CONFIDENTIAL
            hobbies:
              type: string
              description: '`PRIVATE` Description of non professional interests and hobbies'
              examples:
                - 'Traveling, Reading'
              x-whoz-permission: PRIVATE
            links:
              type: array
              description: '`PRIVATE` URL pointing to resources describing this Profile'
              items:
                type: string
                examples:
                  - 'https://linkedin.com/in/jdoe'
              x-whoz-permission: PRIVATE
            main:
              type: boolean
              description: '`PRIVATE` Indicate whether this version is the main one for the related Talent. Use the set-as-main endpoint to change main version'
              readOnly: true
              x-whoz-permission: PRIVATE
            positions:
              type: array
              description: '`PRIVATE` List of positions (professional experiences) this Profile held or is holding'
              items:
                $ref: '#/components/schemas/Position'
              x-whoz-permission: PRIVATE
            qualificationIds:
              type: array
              description: '`PRIVATE` Internal ids of the Qualifications related to this Profile'
              examples:
                - - 8177533c-ca28-11ec-9d64-0242ac120002
                  - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
              items:
                type: string
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether this Profile has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            resume:
              type: object
              title: Resume
              description: '`CONFIDENTIAL` Definition of the optional resume file attached to this Profile'
              allOf:
                - $ref: '#/components/schemas/Document'
              x-whoz-permission: CONFIDENTIAL
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal Id of the federation that this profile belongs to.'
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: UNCLASSIFIED
            talentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the associated Talent'
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: UNCLASSIFIED
            versionName:
              type: string
              description: '`PRIVATE` Name of this Profile version'
              examples:
                - Consulting version
              x-whoz-permission: PRIVATE
            createdBy:
              type: string
              description: '`PRIVATE` Internal id of the User that created this domain object'
              readOnly: true
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: PRIVATE
            createdDate:
              type: string
              description: '`PRIVATE` ISO date at which this domain object was created'
              format: date-time
              readOnly: true
              x-whoz-permission: PRIVATE
            id:
              type: string
              description: '`UNCLASSIFIED` Internal id of the domain object, stability in time not guaranteed'
              readOnly: true
              examples:
                - 603cb26702c5254bf093010f
              x-whoz-permission: UNCLASSIFIED
            lastModifiedBy:
              type: string
              description: '`PRIVATE` Internal id of the last User that modified this domain object'
              readOnly: true
              examples:
                - 5f92a3ae72e1a80d87bfbb76
              x-whoz-permission: PRIVATE
            lastModifiedDate:
              type: string
              description: '`PRIVATE` ISO date at which this domain object was modified last'
              format: date-time
              readOnly: true
              x-whoz-permission: PRIVATE
          required:
            - federationId
            - talentId
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Talent
    Aptitude:
      type: object
      title: Aptitude
      description: 'Represents an aptitude, which is a possessed skill or knowledge, with a proficiency and other metadata'
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: Internal id of the Aptitude
              readOnly: true
              examples:
                - 604156aaa6063e4da420deff
            cumulativeExperience:
              type: number
              description: 'Score based on the implementation of this skill during past work experience, training, diplomas, and so on.'
              examples:
                - 3
            visibility:
              type: string
              enum:
                - FAVORITE
                - REGULAR
                - HIDDEN
              description: 'Indicates how visible the Aptitude is on the Profile (highlighted, hidden…)'
              examples:
                - REGULAR
            profileId:
              type: string
              description: Internal id of the Profile the Aptitude belongs to
              readOnly: true
              examples:
                - 5041563569843e4da420deaa
        - $ref: '#/components/schemas/SkillReference'
      x-tags:
        - Talent
    SkillReference:
      type: object
      title: SkillReference
      description: Represents an reference to a skill
      properties:
        conceptId:
          type: string
          description: 'Internal id of the referenced concept, globally unique'
          examples:
            - 853bac87-b65f-459a-8085-a34c2be6aff4
        name:
          type: string
          description: Name of the referenced skill
          examples:
            - Agilité
        proficiency:
          type: number
          description: 'Expected proficiency on that skill, generally on a 5-levels scale'
          default: 0
          examples:
            - 3
        type:
          type: string
          enum:
            - ACTIVITY_AREA
            - BEHAVIORAL
            - BUSINESS_SOFTWARE
            - CROSS_FUNCTIONAL
            - DATABASE
            - FRAMEWORK
            - FUNCTIONAL
            - FUNDING
            - LANGUAGE
            - METHOD
            - MISSION
            - NORMS_AND_STANDARDS
            - OPERATING_SYSTEM
            - PLATFORM
            - PRODUCT
            - PROGRAMMING_LANGUAGE
            - PROTOCOL
            - TECHNICAL
            - TECHNOLOGY
            - TOOL
            - UNCLASSIFIED
          description: Type of the referenced skill
      required:
        - name
      x-tags:
        - Common
    Education:
      type: object
      title: Education
      description: Represents a degree or training or any learning event
      allOf:
        - type: object
          properties:
            aptitudeReferences:
              type: array
              description: '`PRIVATE` aptitudes that were exercised in this Education'
              items:
                $ref: '#/components/schemas/AptitudeReference'
              x-whoz-permission: PRIVATE
            degree:
              type: string
              description: '`PRIVATE` Name of the obtained degree, certification, etc.'
              examples:
                - Master of Transdisciplinary Innovation
              x-whoz-permission: PRIVATE
            description:
              type: string
              description: '`PRIVATE` Description of this Education'
              examples:
                - This curriculum gives the ability to…
              x-whoz-permission: PRIVATE
            endDate:
              type: string
              description: '`PRIVATE` Date at which this Education ended (degree''s delivery date)'
              format: date
              x-whoz-permission: PRIVATE
            id:
              type: string
              description: '`UNCLASSIFIED` Internal id of this Education'
              examples:
                - 62ea9a8d93acadb77afa0b32
              x-whoz-permission: UNCLASSIFIED
            isSecondary:
              type: boolean
              description: '`PRIVATE` Indicates whether this Education is of secondary importance'
              default: false
              x-whoz-permission: PRIVATE
            qualificationIds:
              type: array
              description: '`PRIVATE` Internal ids of the Qualifications related to this Education'
              examples:
                - - 8177533c-ca28-11ec-9d64-0242ac120002
                  - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
              items:
                type: string
              x-whoz-permission: PRIVATE
            school:
              type: string
              description: '`PRIVATE` Name of the institution where this Education took place'
              x-whoz-permission: PRIVATE
            startDate:
              type: string
              description: '`PRIVATE` Date at which this Education started'
              format: date
              x-whoz-permission: PRIVATE
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Talent
    Customizable:
      type: object
      title: Customizable
      description: Adds the ability to hold custom fields
      properties:
        customFields:
          type: object
          description: '`PRIVATE` Instantiation of custom fields for the given entity'
          examples:
            - some_field_key: Some value
              some_other_field_key: Another value
          x-whoz-permission: PRIVATE
      x-tags:
        - Common
    Address:
      type: object
      title: Address
      description: '`PRIVATE` Postal address / physical location'
      properties:
        city:
          type: string
          description: City of the location
          examples:
            - Lyon
        coordinates:
          type: object
          properties:
            lat:
              type: number
              description: Latitude of the location
              examples:
                - 45.764043
            lng:
              type: number
              description: Longitude of the location
              examples:
                - 4.8356589
        countryCode:
          $ref: '#/components/schemas/Country_Code'
        formattedAddress:
          type: string
          description: The formatted address as returned by geocoding
          examples:
            - 'Lyon, France'
        postalCode:
          type: string
          description: Postal code for the city of the location
          examples:
            - '69002'
        streetAddress1:
          type: string
          description: Street address of the location
          examples:
            - '1, rue de la République'
      x-tags:
        - Common
      x-whoz-permission: PRIVATE
    Country_Code:
      type: string
      title: Country Code
      description: ISO 3166-1 alpha-2 country code
      examples:
        - FR
      externalDocs:
        description: ISO 3166-1 country codes
        url: 'https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2'
      x-tags:
        - Common
    Position:
      type: object
      title: Position
      description: Represents a professional experience
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          x-whoz-permission: PRIVATE
        aptitudeReferences:
          type: array
          description: '`PRIVATE` aptitudes that were exercised in this Position'
          items:
            $ref: '#/components/schemas/AptitudeReference'
          x-whoz-permission: PRIVATE
        companyName:
          type: string
          description: Name of the company commissioning the Position
          examples:
            - SNCF
          x-whoz-permission: PRIVATE
        current:
          type: boolean
          description: '`PRIVATE` Whether this Position is currently held'
          default: false
          x-whoz-permission: PRIVATE
        customFields:
          type: object
          examples:
            - topSecret: 'false'
              codebaseSize: 150k lines
          x-whoz-permission: PRIVATE
        description:
          type: string
          description: '`PRIVATE` Description of the mission, job...'
          x-whoz-permission: PRIVATE
        employerName:
          type: string
          description: '`PRIVATE` Name of the company for which the Position was executed'
          examples:
            - Capgemini
          x-whoz-permission: PRIVATE
        endDate:
          type: string
          description: '`PRIVATE` Date at which the Position ended'
          format: date
          x-whoz-permission: PRIVATE
        id:
          type: string
          description: '`UNCLASSIFIED` Internal id of the Position'
          examples:
            - 5f92a3ae72e1a80d87bfbb76
          x-whoz-permission: UNCLASSIFIED
        isMission:
          type: boolean
          description: '`PRIVATE` Whether this Position was a mission for a consulting firm'
          default: false
          x-whoz-permission: PRIVATE
        missionContext:
          type: string
          description: '`PRIVATE` Context in which the mission was executed'
          x-whoz-permission: PRIVATE
        missionName:
          type: string
          description: '`PRIVATE` Name of the mission'
          examples:
            - Booking IS digital transformation
          x-whoz-permission: PRIVATE
        parentPositionId:
          type: string
          description: '`PRIVATE` Internal id of the related parent position if any. Only a task that is a type MISSION can have a parent. The parent must be of a type POSITION.'
          examples:
            - 638dfcd165ec415a3767dac2
          x-whoz-permission: PRIVATE
        projectId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the related project if any'
          examples:
            - 638dfcd165ec415a3767dac1
          x-whoz-permission: PRIVATE
        qualificationIds:
          type: array
          description: '`PRIVATE` Internal ids of the Qualifications related to this Position'
          examples:
            - - 8177533c-ca28-11ec-9d64-0242ac120002
              - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
          items:
            type: string
          x-whoz-permission: PRIVATE
        startDate:
          type: string
          description: '`PRIVATE` Date at which the Position started'
          format: date
          x-whoz-permission: PRIVATE
        title:
          type: string
          description: '`PRIVATE` Name of the Position'
          examples:
            - Tech lead
          x-whoz-permission: PRIVATE
      x-tags:
        - Talent
    Document:
      type: object
      title: Document
      description: A Document represents a file that has been uploaded to Whoz
      properties:
        analysis:
          type: string
          enum:
            - NONE
            - PENDING
            - DONE
          description: Indicates whether there is a pending analysis for this document in the backend
        contentType:
          type: string
          description: Mime type of the document
          examples:
            - application/msword
        name:
          type: string
          description: Name of the document for display purposes
          examples:
            - CV_John_DOE_2018-06-15.doc
        size:
          type: integer
          description: Size of the document in bytes
        uid:
          type: string
          description: Unique id of the document used to publicly share a link to download it
          format: uuid
          examples:
            - 01115bfd-5ff0-485a-b0aa-1bdb87e805f7
      x-tags:
        - Common
    Talent:
      type: object
      title: Talent
      description: |-
        **Functional Name**: Talent

        **Description**: A talent represents a person and their candidate profile. The talent has profiles with skills and availability that allow them to be associated with requests. 

        **Main Touchpoints**: 
        * [Qualification](./ab1e4feecfe51-qualification): A talent has one or more qualifications.

        **Organization Level**
        * [Workspace](./a136fe3b77f57-workspace): A talent has an operational situation for a given moment of time. Within this history, the talent has a defined role for a specific workspace. 
        * [Federation](./564f3fbf9b731-federation): A federation manages a talent. 
      allOf:
        - $ref: '#/components/schemas/Talent_own_properties'
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Identity'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Talent
    Talent_own_properties:
      type: object
      title: Talent own properties
      description: Specific properties of a Talent
      properties:
        address:
          $ref: '#/components/schemas/Address'
        aspirations:
          $ref: '#/components/schemas/TalentAspirations'
          x-whoz-permission: PRIVATE
        birthdate:
          type: string
          description: '`CONFIDENTIAL` Date of birth of this Talent'
          format: date
          x-whoz-permission: CONFIDENTIAL
        dailyHoursWorked:
          type: number
          description: '`PRIVATE` Number of hours the Talent works daily'
          examples:
            - 8
          x-whoz-permission: PRIVATE
        externalId:
          type: string
          description: '`CONFIDENTIAL` Identifier of this Talent in the customer''s external system'
          examples:
            - BGH67-78
          x-whoz-permission: CONFIDENTIAL
        federationId:
          type: string
          description: '`PRIVATE` Internal identifier of the federation into which this talent is managed'
          examples:
            - 62081df89fa1081851828961
          x-whoz-permission: PRIVATE
        freelyAssignable:
          type: boolean
          description: This property indicates that they don't require manager approval for assignment when true.
          default: false
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
          description: '`PRIVATE` Gender of the Talent'
          x-whoz-permission: PRIVATE
        history:
          type: array
          description: '`CONFIDENTIAL` Talent''s operational situation history'
          items:
            $ref: '#/components/schemas/TalentOperationalSituation'
          x-whoz-permission: CONFIDENTIAL
        initials:
          type: string
          description: '`PRIVATE` Initials used to identify the Talent in this workspace (may be a trigram such as JoD or JDO, a quadrigram…)'
          examples:
            - JDO
          x-whoz-permission: PRIVATE
        lastConnectionDate:
          type: string
          description: '`CONFIDENTIAL` Last date at which the potential related User accessed the federation.'
          format: date-time
          x-whoz-permission: CONFIDENTIAL
        lastInvitationDate:
          type: string
          description: '`CONFIDENTIAL` Last date at which an invitation email has been sent to the User''s email address'
          format: date-time
          x-whoz-permission: CONFIDENTIAL
        managerId:
          type: string
          description: '`PRIVATE` Internal id the manager of this Talent (will grant special read/write permissions to the manager on this Talent''s data)'
          examples:
            - 57b2c4f70f3c3a0001c237a8
          x-whoz-permission: PRIVATE
        mentorId:
          type: string
          description: '`PRIVATE` Internal id of the mentor (or career referent) of this Talent (will grant special read/write permissions to the manager on this Talent''s data)'
          examples:
            - 57718d797a0eb30001832699
          x-whoz-permission: PRIVATE
        metadata:
          $ref: '#/components/schemas/TalentMetadata'
        nationalities:
          type: array
          description: '`CONFIDENTIAL` List of nationalities held by this Talent (as ISO 3166-1 alpha-2 country code)'
          items:
            $ref: '#/components/schemas/Country_Code'
          x-whoz-permission: CONFIDENTIAL
        note:
          type: string
          description: '`SECRET` Free text used by HR to describe anything about this Talent'
          examples:
            - Recruited via LinkedIn
          x-whoz-permission: SECRET
        qualificationIds:
          type: array
          description: '`PRIVATE` Internal ids of the Qualifications possessed by this Talent'
          examples:
            - - 8177533c-ca28-11ec-9d64-0242ac120002
              - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
          items:
            type: string
          x-whoz-permission: PRIVATE
        recruitment:
          $ref: '#/components/schemas/Recruitment'
        removed:
          type: boolean
          description: '`UNCLASSIFIED` Indicates whether this Talent has been deleted (soft removal). This field is readonly, to delete a Talent, call the [delete endpoint](#operation/talentDelete)'
          readOnly: true
          default: false
          x-whoz-permission: UNCLASSIFIED
        staffable:
          type: boolean
          description: '`PRIVATE` Indicates whether this Talent should be included in staffing concerns (find talent, capacity planning, ARVE calculation, etc.)'
          default: false
          examples:
            - true
          x-whoz-permission: PRIVATE
        tags:
          type: array
          description: '`CONFIDENTIAL` List of string used to tag the Talent'
          examples:
            - - one tag
              - two tags
          items:
            type: string
          x-whoz-permission: CONFIDENTIAL
        timeEntryPreferredUnit:
          type: string
          enum:
            - DAY
            - HOUR
          description: '`PRIVATE` the unit in which the worklogs are displayed in timesheet of the Talent. In case of HOUR, you have to precise the `dailyHoursWorked`'
          default: DAY
          examples:
            - HOUR
          x-whoz-permission: PRIVATE
        timeZone:
          type: string
          description: '`PRIVATE` The time zone the talent is located in. Used to provide better matches in terms of working hours. See [Time Zones](./docs/reference/timezones.md) for the list of allowed values.'
          examples:
            - GMT
          x-whoz-permission: PRIVATE
        userId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the related User if any.'
          readOnly: true
          examples:
            - 622f2ac8a98b5d217b1ddc16
          x-whoz-permission: UNCLASSIFIED
        workingLifeEntryDate:
          type: string
          description: '`PRIVATE` Date at which the Talent started their career.'
          format: date
          x-whoz-permission: PRIVATE
        yearsOfExperience:
          type: integer
          description: '`PRIVATE` Number of years of experience of the Talent up to now.'
          x-whoz-permission: PRIVATE
      required:
        - history
      x-tags:
        - Talent
    TalentAspirations:
      type: object
      title: TalentAspirations
      description: '`PRIVATE` Data about the aspirations of a talent'
      properties:
        likedPositionTaskIds:
          type: array
          description: '`PRIVATE` Internal ids of the Position Tasks liked by this Talent'
          examples:
            - - 8177533c-ca28-11ec-9d64-0242ac120002
              - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
          items:
            type: string
          x-whoz-permission: PRIVATE
        likedTrainingIds:
          type: array
          description: '`PRIVATE` Internal ids of the Trainings liked by this Talent'
          examples:
            - - 8177533c-ca28-11ec-9d64-0242ac120002
              - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
          items:
            type: string
          x-whoz-permission: PRIVATE
        targetGradeId:
          type: string
          description: '`PRIVATE` Internal id of the Qualification corresponding to the target grade of this Talent'
          examples:
            - ac65a28c-b5e8-11ec-b909-0242ac120002
          x-whoz-permission: PRIVATE
        targetQualificationIds:
          type: array
          description: '`PRIVATE` Internal ids of the Qualifications liked by this Talent'
          examples:
            - - 8177533c-ca28-11ec-9d64-0242ac120002
              - 129b01ff-fa22-42cf-bbbc-57ef6b48b466
          items:
            type: string
          x-whoz-permission: PRIVATE
        targetRoleId:
          type: string
          description: '`PRIVATE` Internal id of the Qualification corresponding to the target role of this Talent'
          examples:
            - b2c3bc22-b5e8-11ec-b909-0242ac120002
          x-whoz-permission: PRIVATE
      x-tags:
        - Talent
    TalentOperationalSituation:
      type: object
      title: TalentOperationalSituation
      description: Operational situation of a Talent at a given time
      allOf:
        - $ref: '#/components/schemas/TalentOperationalSituation_own_properties'
        - $ref: '#/components/schemas/OperationalSituation'
      x-tags:
        - Talent
    TalentOperationalSituation_own_properties:
      type: object
      title: TalentOperationalSituation own properties
      description: Specific properties for the operational situation of a Talent at a given time
      properties:
        gradeId:
          type: string
          description: '`PRIVATE` Internal id of the Qualification corresponding to the grade of this Talent'
          examples:
            - ac65a28c-b5e8-11ec-b909-0242ac120002
          x-whoz-permission: PRIVATE
        roleId:
          type: string
          description: '`PRIVATE` Internal id of the Qualification corresponding to the role of this Talent'
          examples:
            - b2c3bc22-b5e8-11ec-b909-0242ac120002
          x-whoz-permission: PRIVATE
        scope:
          type: string
          enum:
            - ALUMNI
            - EMPLOYEE
            - EXTERNAL
            - POOL
          description: '`PRIVATE` Indicates whether the Talent is an employee (EMPLOYEE), an alumni (ALUMNI) an entry in the resume library (POOL) or a freelancer working for the company (EXTERNAL)'
          examples:
            - EMPLOYEE
          x-whoz-permission: PRIVATE
        unitCost:
          description: '`SECRET` Daily cost of the Talent'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
        unitRate:
          description: '`CONFIDENTIAL` Daily rate of the Talent on billable assignments'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: CONFIDENTIAL
        unitInternalRate:
          description: '`SECRET` Internal rate to bill when talent is assigned to a Task from another Workspace'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
      required:
        - scope
      x-tags:
        - Talent
    Amount:
      type: object
      title: Amount
      description: Represents an amount of money
      properties:
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          description: The currency code in which this amount is expressed
        value:
          type: number
          description: Numeric value of the amount
          examples:
            - 800.5
      required:
        - currencyCode
        - value
      x-tags:
        - Common
    CurrencyCode:
      type: string
      title: CurrencyCode
      description: 'The currency code in which an amount of money is expressed. The list of available currency code are defined by ISO 4217 - https://en.wikipedia.org/wiki/ISO_4217'
      examples:
        - EUR
      x-tags:
        - Common
    OperationalSituation:
      type: object
      title: OperationalSituation
      description: Holds historical data with its effective date about an entity's operational situation (often relevant to KPIs)
      properties:
        since:
          type: string
          description: '`UNCLASSIFIED` Date at which this OperationalSituation is effective for the entity. This date must be in the present from a UTC standpoint. When creating a talent or dossier, ensure that there is at least one date in the past.'
          format: date
          x-whoz-permission: UNCLASSIFIED
        orgUnit:
          type: string
          description: '`PRIVATE` Represents a sub division of the organisational unit that is referred to by the Workspace. This allows for local filtering of lists and dashboards (not for global reporting).'
          examples:
            - design
          x-whoz-permission: PRIVATE
        workspaceId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the Workspace the entity belongs to at the `since` date'
          examples:
            - 61c0633e62cb1ee7ff49dea8
          x-whoz-permission: UNCLASSIFIED
      required:
        - since
        - workspaceId
      x-tags:
        - Common
    TalentMetadata:
      type: object
      title: TalentMetadata
      description: '`PRIVATE` Metadata about the talent'
      properties:
        availableSinceDate:
          type: string
          description: '`PRIVATE` Date since the Talent is available, null if not available'
          format: date
          examples:
            - '2023-08-16'
          x-whoz-permission: PRIVATE
        firstDayAvailable:
          type: string
          description: '`PRIVATE` Date on which the Talent will be available, null if available'
          format: date
          examples:
            - '2023-11-06'
          x-whoz-permission: PRIVATE
      x-tags:
        - Talent
    Recruitment:
      type: object
      title: Recruitment
      description: Data about the recruitment process of a talent
      properties:
        availability:
          type: string
          description: '`SECRET` Date at which this Talent would be available for hire'
          x-whoz-permission: SECRET
        currentSalary:
          type: string
          description: '`SECRET` Current salary of this Talent'
          examples:
            - '27000'
          x-whoz-permission: SECRET
        firstAvailabilityDate:
          type: string
          description: '`SECRET` Date at which this Talent would be available for assignment'
          x-whoz-permission: SECRET
        recruiterId:
          type: string
          description: '`CONFIDENTIAL` Internal id of the Talent that recruited this Talent'
          examples:
            - 5e8dde7dcaf4ca7204c4fd56
          x-whoz-permission: CONFIDENTIAL
        source:
          type: string
          description: '`SECRET` Recruitment hiring source'
          examples:
            - LinkedIn
          x-whoz-permission: SECRET
        sourcerId:
          type: string
          description: '`CONFIDENTIAL` Internal id of the talent who sourced this candidate'
          examples:
            - 5e8dde7dcaf4ca7204c4fd56
          x-whoz-permission: CONFIDENTIAL
        stage:
          type: string
          enum:
            - OPEN
            - REJECTED
            - DECLINED
            - VALIDATED
          description: '`CONFIDENTIAL` Recruitment stage of the talent in the recruitment process'
          minLength: 1
          examples:
            - OPEN
          x-whoz-permission: CONFIDENTIAL
        targetSalary:
          type: string
          description: '`SECRET` Expected salary for this Talent'
          examples:
            - '32000'
          x-whoz-permission: SECRET
        targetScope:
          type: string
          enum:
            - EMPLOYEE
            - ALUMNI
            - EXTERNAL
            - POOL
          description: '`CONFIDENTIAL` Target scope for this talent'
          x-whoz-permission: CONFIDENTIAL
        travelTime:
          type: string
          description: '`SECRET` Commute time for this Talent'
          examples:
            - 30 minutes
          x-whoz-permission: SECRET
        terminationReason:
          type: string
          enum:
            - HARD_SKILL
            - MORALS
            - SALARY
            - OTHER_OFFER
            - CANDIDATE_DECLINE
            - NO_REPLY
          description: '`SECRET` Reason for the termination of the hiring process of this Talent'
          examples:
            - HARD_SKILL
          x-whoz-permission: SECRET
        terminationReasonNote:
          type: string
          description: '`SECRET` Comment on the the termination of the hiring process of this Talent'
          examples:
            - Not enough experience with Kotlin
          x-whoz-permission: SECRET
        stageDates:
          type: array
          description: '`SECRET` Dated history of changing stage'
          minItems: 1
          uniqueItems: true
          items:
            type: object
            properties:
              date:
                type: string
                minLength: 1
                examples:
                  - '2021-05-25'
              stage:
                type: string
                enum:
                  - OPEN
                  - REJECTED
                  - DECLINED
                  - VALIDATED
                examples:
                  - OPEN
            required:
              - date
              - stage
          x-whoz-permission: SECRET
        workflowStep:
          type: number
          description: '`CONFIDENTIAL` Index of the custom recruitment workflow step defined in FederationConfiguration'
          x-whoz-permission: CONFIDENTIAL
        workflowStepDates:
          type: array
          description: '`SECRET` Dated history of changing steps'
          minItems: 1
          uniqueItems: true
          items:
            type: object
            properties:
              date:
                type: string
                minLength: 1
                examples:
                  - '2021-05-25'
              workflowStep:
                type: number
                examples:
                  - 1
            required:
              - date
              - workflowStep
          x-whoz-permission: SECRET
      x-tags:
        - Talent
    Identity:
      type: object
      title: Identity
      description: Identification data for a person
      properties:
        emails:
          type: array
          description: '`PRIVATE`'
          items:
            type: object
            description: Representation of an email address
            properties:
              address:
                type: string
                description: Email address
                examples:
                  - john.doe@whoz.com
              main:
                type: boolean
                description: Indicates whether this is the main email address for the person (always true)
                examples:
                  - true
              validated:
                type: boolean
                description: Indicates whether this email has been validated (by clicking in an email for example)
                default: false
                examples:
                  - true
            required:
              - address
          x-whoz-permission: PRIVATE
        firstName:
          type: string
          description: '`PRIVATE` First name of this person'
          examples:
            - John
          x-whoz-permission: PRIVATE
        lastName:
          type: string
          description: '`PRIVATE` Last name of this person'
          examples:
            - Doe
          x-whoz-permission: PRIVATE
        phoneNumber:
          type: string
          description: '`PRIVATE` Phone number of this person'
          examples:
            - 06 05 03 02 01
          x-whoz-permission: PRIVATE
      required:
        - firstName
        - lastName
      x-tags:
        - Common
    managerId:
      type: string
      description: '`PRIVATE` Internal id the manager of this Talent (will grant special read/write permissions to the manager on this Talent''s data)'
      examples:
        - 57b2c4f70f3c3a0001c237a8
      x-whoz-permission: PRIVATE
    scope:
      type: string
      enum:
        - ALUMNI
        - EMPLOYEE
        - EXTERNAL
        - POOL
      description: '`PRIVATE` Indicates whether the Talent is an employee (EMPLOYEE), an alumni (ALUMNI) an entry in the resume library (POOL) or a freelancer working for the company (EXTERNAL)'
      examples:
        - EMPLOYEE
      x-whoz-permission: PRIVATE
    ListInputByEntityIds:
      type: object
      title: ListInputByEntityIds
      allOf:
        - type: object
          properties:
            entityIds:
              type: array
              description: List of internal identifiers of entities to fetch
              maxItems: 15000
              examples:
                - - 64776f06b163fc027b174127
                  - 64776f0efd59a732a6b64737
              items:
                type: string
          required:
            - entityIds
        - $ref: '#/components/schemas/BaseListInput'
    BaseListInput:
      type: object
      title: BaseListInput
      properties:
        federationId:
          type: string
          description: Internal identifier of the federation into with entities may be found
          examples:
            - 64776e47724489edc02c1f14
        withRemoved:
          type: boolean
          description: Whether to include removed entities or not
          default: false
        modifiedSince:
          type: string
          description: Match only entities updated after the given instant
          format: date-time
        next:
          type: string
          description: Opaque token used to fetch the "next" chunk of entities. This value is taken to a previous call that yielded a non-null `metadata.next` field.
          examples:
            - QW3HXqF1hkot1e6hJDIj4qHnw
      required:
        - federationId
    TalentListOutput:
      type: object
      title: TalentListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Talent'
        - $ref: '#/components/schemas/BaseApiListOutput'
    BaseApiListOutput:
      type: object
      title: BaseApiListOutput
      description: Base data structure for List APIs responses
      properties:
        metadata:
          $ref: '#/components/schemas/ApiOutputMetaData'
      x-tags:
        - BaseApi
    ApiOutputMetaData:
      type: object
      title: ApiOutputMetaData
      properties:
        next:
          type: string
          description: 'Opaque token to use as "next" parameter to fetch the next chunk of entities. As long as it is returned and not null, there are more entities to fetch.'
          examples:
            - QW3HXqF1hkot1e6hJDIj4qHnw
      x-tags:
        - BaseApi
    ListInputByExternalIds:
      type: object
      title: ListInputByExternalIds
      allOf:
        - type: object
          properties:
            externalIds:
              type: array
              description: List of external identifiers of entities to fetch
              examples:
                - - AB-123
                  - XY-456
              items:
                type: string
          required:
            - externalIds
        - $ref: '#/components/schemas/BaseListInput'
    ListInputByWorkspaceId:
      type: object
      title: ListInputByWorkspaceId
      allOf:
        - type: object
          properties:
            workspaceId:
              type: string
              description: Internal identifier of the workspace from which to list the entities
              examples:
                - 64776f5b6d5df11a9549e144
          required:
            - workspaceId
        - $ref: '#/components/schemas/BaseListInput'
    LightweightTalentListOutput:
      type: object
      title: LightweightTalentListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/LightweightTalent'
        - $ref: '#/components/schemas/BaseApiListOutput'
    LightweightTalent:
      type: object
      title: LightweightTalent
      description: 'Minimal version of the [Talent](./Talent.yaml) entity for large lists'
      allOf:
        - type: object
          properties:
            federationId:
              $ref: '#/components/schemas/federationId'
            history:
              type: array
              description: '`CONFIDENTIAL` Talent''s lightweight operational situation history containing the current situation'
              items:
                $ref: '#/components/schemas/LightweightTalentOperationalSituation'
              x-whoz-permission: CONFIDENTIAL
            managerId:
              $ref: '#/components/schemas/managerId'
            mentorId:
              $ref: '#/components/schemas/mentorId'
            recruitment:
              $ref: '#/components/schemas/LightweightRecruitment'
            staffable:
              $ref: '#/components/schemas/staffable'
            tags:
              $ref: '#/components/schemas/tags'
            userId:
              $ref: '#/components/schemas/userId'
        - $ref: '#/components/schemas/LightweightDomain'
        - $ref: '#/components/schemas/LightweightIdentity'
      x-tags:
        - Talent
    federationId:
      type: string
      description: '`PRIVATE` Internal identifier of the federation into which this talent is managed'
      examples:
        - 62081df89fa1081851828961
      x-whoz-permission: PRIVATE
    LightweightTalentOperationalSituation:
      type: object
      title: LightweightTalentOperationalSituation
      description: 'Minimal version of the [TalentOperationalSituation](./TalentOperationalSituation.yaml) entity for large lists'
      allOf:
        - type: object
          properties:
            scope:
              $ref: '#/components/schemas/scope'
        - $ref: '#/components/schemas/OperationalSituation'
      x-tags:
        - Talent
    mentorId:
      type: string
      description: '`PRIVATE` Internal id of the mentor (or career referent) of this Talent (will grant special read/write permissions to the manager on this Talent''s data)'
      examples:
        - 57718d797a0eb30001832699
      x-whoz-permission: PRIVATE
    LightweightRecruitment:
      type: object
      title: LightweightRecruitment
      description: 'Minimal version of the [Recruitment](./Recruitment.yaml) entity for large lists'
      properties:
        stage:
          $ref: '#/components/schemas/stage'
        stageDates:
          $ref: '#/components/schemas/stageDates'
        workflowStep:
          $ref: '#/components/schemas/workflowStep'
        workflowStepDates:
          $ref: '#/components/schemas/workflowStepDates'
      x-tags:
        - Talent
    stage:
      type: string
      enum:
        - OPEN
        - REJECTED
        - DECLINED
        - VALIDATED
      description: '`CONFIDENTIAL` Recruitment stage of the talent in the recruitment process'
      minLength: 1
      examples:
        - OPEN
      x-whoz-permission: CONFIDENTIAL
    stageDates:
      type: array
      description: '`SECRET` Dated history of changing stage'
      minItems: 1
      uniqueItems: true
      items:
        type: object
        properties:
          date:
            type: string
            minLength: 1
            examples:
              - '2021-05-25'
          stage:
            type: string
            enum:
              - OPEN
              - REJECTED
              - DECLINED
              - VALIDATED
            examples:
              - OPEN
        required:
          - date
          - stage
      x-whoz-permission: SECRET
    workflowStep:
      type: number
      description: '`CONFIDENTIAL` Index of the custom recruitment workflow step defined in FederationConfiguration'
      x-whoz-permission: CONFIDENTIAL
    workflowStepDates:
      type: array
      description: '`SECRET` Dated history of changing steps'
      minItems: 1
      uniqueItems: true
      items:
        type: object
        properties:
          date:
            type: string
            minLength: 1
            examples:
              - '2021-05-25'
          workflowStep:
            type: number
            examples:
              - 1
        required:
          - date
          - workflowStep
      x-whoz-permission: SECRET
    staffable:
      type: boolean
      description: '`PRIVATE` Indicates whether this Talent should be included in staffing concerns (find talent, capacity planning, ARVE calculation, etc.)'
      default: false
      examples:
        - true
      x-whoz-permission: PRIVATE
    tags:
      type: array
      description: '`CONFIDENTIAL` List of string used to tag the Talent'
      examples:
        - - one tag
          - two tags
      items:
        type: string
      x-whoz-permission: CONFIDENTIAL
    userId:
      type: string
      description: '`UNCLASSIFIED` Internal id of the related User if any.'
      readOnly: true
      examples:
        - 622f2ac8a98b5d217b1ddc16
      x-whoz-permission: UNCLASSIFIED
    LightweightDomain:
      type: object
      title: LightweightDomain
      description: 'Minimal version of the [Domain](./Domain.yaml) model for large lists'
      properties:
        externalId:
          $ref: '#/components/schemas/externalId'
        id:
          $ref: '#/components/schemas/id'
      x-tags:
        - Common
    externalId:
      type: string
      description: '`PRIVATE` External identifier of this domain object'
      examples:
        - ABC00123
      x-whoz-permission: PRIVATE
    id:
      type: string
      description: '`UNCLASSIFIED` Internal id of the domain object, stability in time not guaranteed'
      readOnly: true
      examples:
        - 603cb26702c5254bf093010f
      x-whoz-permission: UNCLASSIFIED
    LightweightIdentity:
      type: object
      title: LightweightIdentity
      description: 'Minimal version of the [Identity](./Identity.yaml) model for large lists'
      properties:
        firstName:
          $ref: '#/components/schemas/firstName'
        lastName:
          $ref: '#/components/schemas/lastName'
      x-tags:
        - Common
    firstName:
      type: string
      description: '`PRIVATE` First name of this person'
      examples:
        - John
      x-whoz-permission: PRIVATE
    lastName:
      type: string
      description: '`PRIVATE` Last name of this person'
      examples:
        - Doe
      x-whoz-permission: PRIVATE
    Activity:
      type: object
      title: Activity
      description: |-
        **Functional Names**: Action

        **Description**: An activity is an item in the activity stream of an object. It can be an action assigned to a talent, a note, or a document.

        **Main Touchpoints**: 
        * [Account](./fe5501ea75a53-account): You can associate an activity with an account.
        * [Dossier](./65fbe356c01f6-dossier): You can associate an activity with a dossier.
        * [Talent](./4b21183f6dc28-talent): You can specify that an activity concerns a talent (talentId). You can also designate a talent as an owner of the activity (ownerId). A talent also initiates the activity (initiatorId).
        * [Task](./e168d751db277-task): You can associate an activity with a task.

        **Organization Level**: 
        * [Workspace](./a136fe3b77f57-workspace): An activity occurs within a workspace. If a talent belongs to multiple workspaces, they can see all of their activities related to those workspaces.
      allOf:
        - type: object
          properties:
            accountId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Account the Activity is about'
              x-whoz-permission: UNCLASSIFIED
            attachments:
              type: array
              description: '`CONFIDENTIAL` List of files attached to the Activity'
              items:
                $ref: '#/components/schemas/Document'
              x-whoz-permission: CONFIDENTIAL
            completed:
              type: boolean
              description: '`PRIVATE` Status of the Activity'
              x-whoz-permission: PRIVATE
            contactId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Contact the Activity is about'
              x-whoz-permission: UNCLASSIFIED
            dossierId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Dossier the Activity is about'
            dueDate:
              type: string
              description: '`UNCLASSIFIED` Date the Activity is due'
              format: date
              x-whoz-permission: UNCLASSIFIED
            dueTime:
              type: string
              description: '`UNCLASSIFIED` Time on the date the Activity is due'
              format: time
              x-whoz-permission: UNCLASSIFIED
            initiatorId:
              type: string
              description: Internal id of the Member of the initiator of the Activity (creator)
              x-whoz-permission: UNCLASSIFIED
            links:
              type: array
              description: '`CONFIDENTIAL` Sharing link attached to the Activity'
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            talentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent the Activity is about'
              x-whoz-permission: UNCLASSIFIED
            notes:
              type: string
              description: '`CONFIDENTIAL` Notes about the Activity'
              x-whoz-permission: CONFIDENTIAL
            ownerId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent acting as owner of the Activity (assignee)'
              x-whoz-permission: UNCLASSIFIED
            pinned:
              type: boolean
              description: '`PRIVATE` Whether the Activity is pinned on top of its stream or not'
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Indicates whether this Activity has been deleted (soft removal). This field is readonly, to delete an Activity, call the [delete endpoint](#operation/activityDelete)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            tags:
              type: array
              description: '`CONFIDENTIAL` List of tags assigned to this Activity'
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            taskId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Task the Activity is about'
              x-whoz-permission: UNCLASSIFIED
            title:
              type: string
              description: '`CONFIDENTIAL` Title of the Activity'
              x-whoz-permission: CONFIDENTIAL
            type:
              type: string
              enum:
                - DEADLINE
                - EMAIL
                - INTERVIEW
                - PROPOSITION
                - MEETING
                - PHONE_CALL
                - TASK
                - NOTE
                - FILE
                - EVENT
              description: '`PRIVATE` Type of this Activity'
              x-whoz-permission: PRIVATE
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Identifier of the workspace'
              examples:
                - 603cb26702c5254bf093010f
              x-whoz-permission: UNCLASSIFIED
            id:
              $ref: '#/components/schemas/id'
            createdBy:
              $ref: '#/components/schemas/createdBy'
            createdDate:
              $ref: '#/components/schemas/createdDate'
            lastModifiedBy:
              $ref: '#/components/schemas/lastModifiedBy'
            lastModifiedDate:
              $ref: '#/components/schemas/lastModifiedDate'
          required:
            - initiatorId
            - ownerId
            - workspaceId
      x-tags:
        - Platform
    createdBy:
      type: string
      description: '`PRIVATE` Internal id of the User that created this domain object'
      readOnly: true
      examples:
        - 5f8578c7eef5f93dd0fd8f6e
      x-whoz-permission: PRIVATE
    createdDate:
      type: string
      description: '`PRIVATE` ISO date at which this domain object was created'
      format: date-time
      readOnly: true
      x-whoz-permission: PRIVATE
    lastModifiedBy:
      type: string
      description: '`PRIVATE` Internal id of the last User that modified this domain object'
      readOnly: true
      examples:
        - 5f92a3ae72e1a80d87bfbb76
      x-whoz-permission: PRIVATE
    lastModifiedDate:
      type: string
      description: '`PRIVATE` ISO date at which this domain object was modified last'
      format: date-time
      readOnly: true
      x-whoz-permission: PRIVATE
    ListInputByEntityIds_2:
      type: object
      title: ListInputByEntityIds
      description: '`PRIVATE` input to list entities by their ids.'
      properties:
        entityIds:
          type: array
          description: List of internal ids of entities to look for
          examples:
            - - 62156422eb824a88b1155eeb
              - 62156428d3c4be14493fb8e5
          items:
            type: string
        federationId:
          type: string
          description: Internal identifier of the federation
          examples:
            - 62081df89fa1081851828961
        modifiedSince:
          type: string
          description: Match only entities updated afer the given date
          format: date-time
        withRemoved:
          type: boolean
          description: Whether to include removed entities or not
      required:
        - entityIds
        - federationId
      x-tags:
        - Common
      x-whoz-permission: PRIVATE
    ActivityListOutput:
      type: object
      title: ActivityListOutput
      description: Output of list of activities
      allOf:
        - type: object
          properties:
            data:
              type: array
              description: returned activities
              items:
                type: array
                description: List of activities
                items:
                  $ref: '#/components/schemas/Activity'
        - $ref: '#/components/schemas/BaseApiListOutput'
      x-tags:
        - Platform
    ActivityListInputByFederationId:
      type: object
      title: ActivityListInputByFederationId
      description: '`PRIVATE` input to list activities by their federation id.'
      properties:
        federationId:
          type: string
          description: Internal identifier of the federation
          examples:
            - 62081df89fa1081851828961
        modifiedSince:
          type: string
          description: Match only entities updated afer the given date
          format: date-time
        withCompleted:
          type: boolean
          description: Whether to include completed activities or not
        withRemoved:
          type: boolean
          description: Whether to include removed entities or not
      required:
        - federationId
      x-tags:
        - Platform
      x-whoz-permission: PRIVATE
    ActivityListInputByLinkedEntityIds:
      type: object
      title: ActivityListInputByLinkedEntityIds
      description: '`PRIVATE` input to list activities by their linked entity ids.'
      properties:
        domainClass:
          type: string
          enum:
            - ACCOUNT
            - CONTACT
            - DOSSIER
            - TALENT
            - TALENT_OWNER
            - TASK
          description: Indicates the type of linked entities
          examples:
            - ACCOUNT
        linkedEntityIds:
          type: array
          description: List of internal ids of entities linked to activities to look for
          examples:
            - - 62156422eb824a88b1155eeb
              - 62156428d3c4be14493fb8e5
          items:
            type: string
        workspaceId:
          type: string
          description: Internal identifier of the workspace
          examples:
            - 62081df89fa1081851828961
      required:
        - domainClass
        - linkedEntityIds
        - workspaceId
      x-tags:
        - Platform
      x-whoz-permission: PRIVATE
    ListInputForTalentId:
      title: ListInputForTalentId
      allOf:
        - type: object
          properties:
            talentId:
              type: string
              description: Internal identifier of the talent to list the entities for
              examples:
                - 64776f5b6d5df11a9549e144
        - $ref: '#/components/schemas/BaseListInput'
    Federation:
      type: object
      title: Federation
      description: |-
        **Functional Names**: Federation

        **Description**: A federation represents an organization (a customer of Whoz) in Whoz. It can house one or more workspaces.
      allOf:
        - type: object
          properties:
            authenticationRealmId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the AuthenticationRealm (this configures SSO redirections).'
              examples:
                - 6209266bf7c59802449c5d04
              x-whoz-permission: UNCLASSIFIED
            currencyToEuroConversionRateMap:
              type: object
              description: '`PRIVATE` Custom conversion rates from currencies to Euros. If `null` or empty, there is a fallback on a Whoz-supplied one when reading the federation.'
              additionalProperties:
                type: number
              examples:
                - CHF: 0.97
                  GBP: 1.17
                  INR: 0.012
                  USD: 0.93
              x-whoz-permission: PRIVATE
            customFields:
              type: array
              description: '`PRIVATE` Definitions for custom fields to extend Whoz data model.'
              items:
                $ref: '#/components/schemas/CustomFieldDefinition'
              x-whoz-permission: PRIVATE
            lostReasonCategories:
              type: array
              description: '`PRIVATE` List of the lost reasons available for this Federation'
              items:
                $ref: '#/components/schemas/Lost_Reason'
              x-whoz-permission: PRIVATE
            modules:
              type: array
              description: '`PRIVATE` The list of activated Whoz modules for this Federation'
              items:
                type: string
              x-whoz-permission: PRIVATE
            name:
              type: string
              description: '`PRIVATE` Name of the Federation'
              examples:
                - Acme Corp.
              x-whoz-permission: PRIVATE
            status:
              type: string
              enum:
                - ACTIVE
                - DEMO
                - INACTIVE
                - TRIAL
                - ARCHIVED
              description: '`PRIVATE` Status of the Federation, linked to the billing status of the customer and only modifiable by Whoz'
              readOnly: true
              x-whoz-permission: PRIVATE
          required:
            - name
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Platform
    CustomFieldDefinition:
      type: object
      title: CustomFieldDefinition
      description: Defines a custom field
      properties:
        entityType:
          type: string
          enum:
            - ACCOUNT
            - BUSINESS_CREDENTIAL
            - DOSSIER
            - EDUCATION
            - OPEN_POSITION
            - POSITION
            - PROFILE
            - PROJECT
            - TALENT
            - TASK
            - WORKSPACE
          description: Type of the target entity
          format: enum
        key:
          type: string
          description: The field key
          examples:
            - fieldName
        labels:
          type: array
          description: '`PRIVATE` Labels of the custom field expressed in various languages'
          minItems: 1
          items:
            $ref: '#/components/schemas/Translation'
          x-whoz-permission: PRIVATE
      required:
        - key
      x-tags:
        - Platform
    Translation:
      type: object
      title: Translation
      description: Holds a text along with the language it is expressed into
      properties:
        text:
          type: string
          description: Text to display in this language
          examples:
            - Cette Translation est en Français
        language:
          type: string
          description: Language into which the text is expressed
          allOf:
            - $ref: '#/components/schemas/Language_Code'
      required:
        - text
        - language
      x-tags:
        - Common
    Language_Code:
      type: string
      title: Language Code
      description: ISO 639-2 language code
      examples:
        - fr
      x-tags:
        - Common
    Lost_Reason:
      type: object
      title: Lost Reason
      description: The lost reasons that can be used for example on a Dossier or a Task
      allOf:
        - type: object
          properties:
            name:
              type: array
              description: '`PRIVATE` Names of this lost reason expressed in various languages'
              minItems: 1
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            value:
              type: string
              enum:
                - BUDGET_TOO_LOW
                - COMPETITOR_CHOSEN
                - NO_TALENT_AVAILABLE
                - UNFIT_TALENTS
                - OPPORTUNITY_CANCELLED
                - OPPORTUNITY_RISK_TOO_HIGH
                - UNDEFINED_REASON
              description: '`PRIVATE` The value of the lost reason which will be used when setting a lost reason on an object'
              examples:
                - BUDGET_TOO_LOW
              x-whoz-permission: PRIVATE
          required:
            - name
            - value
      x-tags:
        - Referential
    FunctionalityEffectiveConfiguration:
      type: object
      title: FunctionalityEffectiveConfiguration
      description: 'Represents the set of effective functionality configurations that apply to federations, workspaces and users. These have been computed using the stored FunctionalityConfiguration for the associated objects, but also applying the set of logic and dependence rules in order to provide an effective view of the configuration.'
      properties:
        id:
          $ref: '#/components/schemas/id'
        configurationValues:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationValue'
          x-whoz-permission: UNCLASSIFIED
        createdBy:
          $ref: '#/components/schemas/createdBy'
        createdDate:
          $ref: '#/components/schemas/createdDate'
        effectiveConfigurationValues:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/EffectiveConfigurationValue'
          x-whoz-permission: UNCLASSIFIED
        federationId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the federation'
          readOnly: true
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
        lastModifiedBy:
          $ref: '#/components/schemas/lastModifiedBy'
        lastModifiedDate:
          $ref: '#/components/schemas/lastModifiedDate'
        userId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the user'
          readOnly: true
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
        workspaceId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the workspace'
          readOnly: true
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
      required:
        - id
        - configurationValues
        - effectiveConfigurationValues
      x-tags:
        - Platform
    ConfigurationValue:
      type: object
      title: ConfigurationValue
      description: '`UNCLASSIFIED` Represents the value stored for a certain functionality.'
      properties:
        functionalityCode:
          type: string
          description: |
            Code that represents the functionality. Possible values are defined in  <a href="https://docs.whoz.com/docs/what-is-the-impact-of-each-module-and-feature">Reference: Module and Feature Impacts</a>.
          x-whoz-permission: UNCLASSIFIED
        overridable:
          type: boolean
          description: 'Indicates whether this configuration value can be overridden at lower levels of the hierarchy (workspaces, or users)'
          x-whoz-permission: UNCLASSIFIED
        value:
          type: boolean
          description: Indicates whether the functionality is enabled or not
          x-whoz-permission: UNCLASSIFIED
      x-tags:
        - Platform
    EffectiveConfigurationValue:
      type: object
      title: EffectiveConfigurationValue
      description: '`UNCLASSIFIED` Represents a computed effective value for a certain functionality, including the reason why this value is provided.'
      properties:
        functionalityCode:
          type: string
          description: Code that represents the functionality
          x-whoz-permission: UNCLASSIFIED
        functionalityType:
          type: string
          enum:
            - MODULE
            - FEATURE
          description: Indicates the type of this functionality
          x-whoz-permission: UNCLASSIFIED
        overridable:
          type: boolean
          description: 'Indicates whether this configuration value can be overridden at lower levels of the hierarchy (workspaces, or users)'
          x-whoz-permission: UNCLASSIFIED
        value:
          type: boolean
          description: Indicates whether the functionality is enabled or not
          x-whoz-permission: UNCLASSIFIED
        valueOrigin:
          type: string
          enum:
            - REQUIRED
            - LACK_DEPENDENCIES
            - FORCED_BY_FEDERATION
            - PROPOSED_BY_FEDERATION
            - FORCED_BY_WORKSPACE
            - PROPOSED_BY_WORKSPACE
            - CONFIGURED
            - NOT_CONFIGURED
          description: Indicates the reason why a configuration has a certain value.
          x-whoz-permission: UNCLASSIFIED
        valueOriginEditable:
          type: boolean
          description: 'Indicates whether this value is editable for the federation, workspace or user.'
          x-whoz-permission: UNCLASSIFIED
        valueOriginDetail:
          type: array
          description: 'Provides details regarding the reason why a configuration has a certain value. For instance, it will indicate the list of missing dependencies in case the functionality is disabled for this reason.'
          items:
            type: string
          x-whoz-permission: UNCLASSIFIED
        dependsOn:
          type: array
          description: Codes of the modules that are prerequisites for enabling this functionality. Only present when functionalityType is `MODULE`
          items:
            type: string
          x-whoz-permission: UNCLASSIFIED
        featureRequiredRole:
          type: string
          description: Required role for this functionality as defined in the AirTable. Only present when functionalityType is `FEATURE`
          x-whoz-permission: UNCLASSIFIED
        featureParentModuleCode:
          type: string
          description: Code of the parent module of this functionality. Only present when functionalityType is `FEATURE`
          x-whoz-permission: UNCLASSIFIED
      x-tags:
        - Platform
    FunctionalityConfiguration:
      type: object
      title: FunctionalityConfiguration
      description: |
        Represents the set of functionality configurations that have been stored for a federation, a workspace, or a user. See  <a href="https://docs.whoz.com/docs/how-to-manage-modules-and-features-in-whoz">Manage Modules and Features</a>  and  <a href="https://docs.whoz.com/docs/what-is-the-impact-of-each-module-and-feature">Reference: Module and Feature Impacts</a>  for possible values.
      properties:
        id:
          $ref: '#/components/schemas/id'
        configurationValues:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationValue'
          x-whoz-permission: UNCLASSIFIED
        createdBy:
          $ref: '#/components/schemas/createdBy'
        createdDate:
          $ref: '#/components/schemas/createdDate'
        federationId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the federation'
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
        lastModifiedBy:
          $ref: '#/components/schemas/lastModifiedBy'
        lastModifiedDate:
          $ref: '#/components/schemas/lastModifiedDate'
        userId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the user'
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
        workspaceId:
          type: string
          description: '`UNCLASSIFIED` Identifier of the workspace'
          examples:
            - 603cb26702c5254bf093010f
          x-whoz-permission: UNCLASSIFIED
      required:
        - id
        - configurationValues
      x-tags:
        - Platform
    OrgStructureDimension:
      type: object
      title: OrgStructureDimension
      description: |-
        **Functional Name**: Organization Structure Dimension

        **Description**: Dimensions are used in Whoz to help you define your company's organizational structure. The dimension is the name of the primary container that includes all the different levels and sub-levels of structure. Examples: Geographies, Locations, Offices, Business Units


        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): Dimensions are configured for a federation and apply across the whole organization. You can then associate a workspace with a dimension to report on a specific scope in the Performance Center.
      allOf:
        - type: object
          properties:
            federationId:
              type: string
              description: '`PRIVATE` Internal identifier of the federation this OrgStructureDimension belongsTo'
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: PRIVATE
            name:
              type: array
              description: '`PRIVATE` name of the OrgStructureDimension (eg. Geography, Market)'
              examples:
                - - text: Geography
                    language: en
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Indicates whether this OrgStructureDimension has been deleted (soft removal). This field is readonly, to delete an OrgStructureDimension, call the [delete endpoint](#operation/orgStructureDimensionDelete)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - name
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Platform
    OrgStructureItem:
      type: object
      title: OrgStructureItem
      description: |
        **Functional Name**: Nodes

        **Description**: Org structure items are used to define the different levels of organizational structure required by your company. You can have items under other items to represent sub-divisions within the organization. All items under a dimension are contained exclusively within that dimension. Example: France, Germany, Gas, Electricity

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): Org structure items are configured for a federation and apply across the whole organization. You can then associate a workspace with an item to report on a specific scope in the Performance Center. 
      allOf:
        - type: object
          properties:
            endDate:
              type: string
              description: '`Private` Date after which this OrgStructureItem is "archived". Must be greater or equal to startDate.'
              format: date
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the federation this OrgStructureItem belongsTo'
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: UNCLASSIFIED
            name:
              type: array
              description: '`PRIVATE` Name of the OrgStructureItem'
              examples:
                - - text: HealthCare
                    language: en
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            orgStructureDimensionId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the dimension this OrgStructureItem belongs to'
              examples:
                - 621552c378296e30a5753e5c
              x-whoz-permission: UNCLASSIFIED
            parentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the parent of this item in its org structure tree. This is `null` for root items.'
              examples:
                - 62081e07196c80c9cb2c4091
              x-whoz-permission: UNCLASSIFIED
            startDate:
              type: string
              description: '`Private` Date before which this OrgStructureItem is "draft"'
              format: date
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Indicates whether this OrgStructureItem has been deleted (soft removal). This field is readonly, to delete an OrgStructureItem, call the [delete endpoint](#operation/orgStructureItemDelete)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - name
            - orgStructureDimensionId
            - startDate
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Platform
    User:
      type: object
      title: User
      description: |-
        **Functional Name**: User

        **Description**: A user represents a person who can log into Whoz, might be linked to talents if they represent the same person, and might have access permissions to federations and workspaces through their role.

        **Main Touchpoints**: 
        * [Talent](./4b21183f6dc28-talent): A user can be linked to a talent if they represent the same person.

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A user is connected to talents or assigned roles for a given federation.
        * [Workspace](./a136fe3b77f57-workspace): A user can be assigned roles for a given workspace.
      allOf:
        - type: object
          properties:
            connectedTalents:
              type: array
              description: '`CONFIDENTIAL` List of internal identifiers of Talents the User relates to on the given Federations (max 1 talent per Workspace).'
              readOnly: true
              items:
                type: object
                properties:
                  federationId:
                    type: string
                    description: Internal id of the Federation where the User has a related Talent
                    examples:
                      - 6217f6c5484c845f8a0a2949
                  talentId:
                    description: Internal id of the Talent relating to the User
                    examples:
                      - 6217f6c5484c845f8a0a2949
              x-whoz-permission: CONFIDENTIAL
            federationRoles:
              type: array
              description: |-
                `CONFIDENTIAL` List of roles the User has on the given Federations (max 1 role per Workspace).
                This field is "create-only" and can only be changed via the set-federation-role operation.
              readOnly: true
              items:
                type: object
                properties:
                  federationId:
                    type: string
                    description: Internal id of the Federation where the User is granted the role
                    examples:
                      - 6217f6c5484c845f8a0a2949
                  role:
                    $ref: '#/components/schemas/UserFederationRole'
              x-whoz-permission: CONFIDENTIAL
            id:
              $ref: '#/components/schemas/id'
            language:
              type: string
              description: '`CONFIDENTIAL` Preferred language for this User (interface language, date format, also used for communications). This is a ISO 3166-1 tag.'
              examples:
                - en-US
              x-whoz-permission: CONFIDENTIAL
            username:
              type: string
              description: '`CONFIDENTIAL` The username given by Whoz to this User. Whoz currently uses an email address as the username. This field is "create only" and can only be changed via the change-username operation.'
              readOnly: true
              examples:
                - john.doe@acme.com
              x-whoz-permission: CONFIDENTIAL
            workspaceRoles:
              type: array
              description: |-
                `CONFIDENTIAL` List of roles the User has on the given Workspaces (max 1 role per Workspace).
                This field is "create-only" and can only be changed via the set-workspace-role operation.
              readOnly: true
              items:
                type: object
                properties:
                  workspaceId:
                    type: string
                    description: Internal id of the Workspace where the User is granted the role
                    examples:
                      - 6217f6c5484c845f8a0a2949
                  role:
                    $ref: '#/components/schemas/UserWorkspaceRole'
              x-whoz-permission: CONFIDENTIAL
      x-tags:
        - Platform
    UserFederationRole:
      type: string
      enum:
        - NONE
        - MEMBER
        - ADMIN
      title: UserFederationRole
      description: Role a User may have on a Federation (grants permissions)
      x-tags:
        - Platform
    UserWorkspaceRole:
      type: string
      enum:
        - NONE
        - RESTRICTED
        - COLLABORATOR
        - STANDARD
        - ADVANCED
        - ADMIN
      title: UserWorkspaceRole
      description: Role a User may have on a Workspace (grants permissions)
      x-tags:
        - Platform
    Workspace:
      title: Workspace
      description: |-
        **Functional Names**: Workspace

        **Description**: A workspace represents an organizational unit in your [Federation](/models/platform/Federation.yaml).
      allOf:
        - type: object
          properties:
            address:
              $ref: '#/components/schemas/Address'
              description: '`PRIVATE` General location where the resources included in this Workspace are.'
              x-whoz-permission: PRIVATE
            allowedWorkspacesForJobBoard:
              type: array
              description: '`PRIVATE`  Determines how to filter tasks (talent requests) and positions (open positions) for Job Boards on this workspace. Specify which origin workspaces to accept and publish from.'
              items:
                type: string
              x-whoz-permission: PRIVATE
            assignmentWorkflowConfiguration:
              $ref: '#/components/schemas/WorkspaceWorkflowConfiguration'
              description: |-
                `PRIVATE` Workspace configuration for personas defined at talent level with granted rights to assign talent.

                These rights are granted in addition to standard authorizations: federation admin, talent workspace power user and request owner upon authorization.
              x-whoz-permission: PRIVATE
            color:
              type: string
              enum:
                - astronaut
                - burgundy
                - cinzo
                - dandelion
                - desert
                - grass
                - jade
                - lagoon
                - linen
                - persimmon
                - rose
                - sinbad
                - snow
                - strawberry
              description: '`PRIVATE` Color theme to use for this Workspace in the Whoz web app.'
              x-whoz-permission: PRIVATE
            currencyCode:
              $ref: '#/components/schemas/CurrencyCode'
              description: '`PRIVATE` Currency in which all amounts are expressed in this workspace'
              x-whoz-permission: PRIVATE
            defaultResumeTemplateId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the default resume template for this Workspace'
              examples:
                - 60896e370a460d527d0a3235
              x-whoz-permission: UNCLASSIFIED
            endDate:
              type: string
              description: '`PRIVATE` Date after which this Workspace is "archived"'
              format: date
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Federation this Workspace belongs to. This field is only settable at creation time and cannot be changed.'
              examples:
                - 6209228d5d9b393d8976e949
              x-whoz-permission: UNCLASSIFIED
            goals:
              type: object
              description: '`CONFIDENTIAL` Monthly values of the goals set for this workspace'
              properties:
                arve:
                  type: array
                  items:
                    $ref: '#/components/schemas/MonthlyWorkspaceGoal'
                commercialMargin:
                  type: array
                  items:
                    $ref: '#/components/schemas/YearlyWorkspaceGoal'
                globalMargin:
                  type: array
                  items:
                    $ref: '#/components/schemas/YearlyWorkspaceGoal'
                headcount:
                  type: array
                  items:
                    $ref: '#/components/schemas/MonthlyWorkspaceGoal'
                revenue:
                  type: array
                  items:
                    $ref: '#/components/schemas/MonthlyWorkspaceGoal'
                vacation:
                  type: array
                  items:
                    $ref: '#/components/schemas/MonthlyWorkspaceGoal'
              x-whoz-permission: CONFIDENTIAL
            history:
              type: array
              items:
                type: object
                properties:
                  since:
                    type: string
                    description: '`UNCLASSIFIED` Date at which this OperationalSituation is effective for the Talent'
                    format: date
                    x-whoz-permission: UNCLASSIFIED
                  rateCardId:
                    type: string
                    description: '`UNCLASSIFIED` Internal id of the associated RateCard'
                    examples:
                      - 62750dbdf40908d804a378bd
                    x-whoz-permission: UNCLASSIFIED
                  orgStructureItemIds:
                    type: array
                    description: '`PRIVATE` The list of references a workspace has to [OrgStructureItems](/models/platform/OrgStructureItem.yaml) compose its coordinates in the federation organizational structure, this is what makes up an Operational Unit in Whoz.'
                    items:
                      type: string
                      title: OrgStructureItemId
                      description: Internal identifier of an OrgStructureItem this Workspace relates to. This is mostly used for analytics purposes. There should be at most one by organizational structure dimension.
                      examples:
                        - 62081b7be7db365ca43ab2b3
                    x-whoz-permission: PRIVATE
                required:
                  - since
            name:
              type: string
              description: '`PRIVATE` Name of the Workspace'
              examples:
                - Acme - Utilities
              x-whoz-permission: PRIVATE
            newUi:
              type: boolean
              description: '`PRIVATE` Indicates whether the Users in this Workspace see the new UI features before GA.'
              default: false
              x-whoz-permission: PRIVATE
            pitch:
              type: string
              description: '`PRIVATE` Description of this Workspace'
              examples:
                - Paris digital innovation business unit
              x-whoz-permission: PRIVATE
            publicHolidays:
              type: array
              description: '`PRIVATE` Dates of public holidays'
              examples:
                - - '2021-12-25'
                  - '2022-01-01'
              items:
                type: string
              x-whoz-permission: PRIVATE
            recruitmentWorkflow:
              type: array
              description: '`CONFIDENTIAL` The ordered steps of a recruitment workflow'
              examples:
                - - qualification
                  - interview
                  - proposal
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            salesWorkflow:
              type: array
              description: '`CONFIDENTIAL` The ordered steps of a sale workflow'
              examples:
                - - qualification
                  - negotiation
                  - proposal
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            secondaryStaffingManagerIds:
              type: array
              description: '`UNCLASSIFIED` Secondary contacts for this Workspace'
              items:
                type: string
              x-whoz-permission: UNCLASSIFIED
            staffingManagerId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent who is the staffing manager (i.e. main contact for staffing) for this Workspace'
              examples:
                - 6209266bf7c59802449c5d04
              x-whoz-permission: UNCLASSIFIED
            staffingWorkfow:
              type: array
              description: '`CONFIDENTIAL` The ordered steps of a staffing workflow'
              examples:
                - - backlog
                  - shortlist
                  - arbitration
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            staffingWorkflowConfiguration:
              $ref: '#/components/schemas/WorkspaceWorkflowConfiguration'
              description: |-
                `PRIVATE` Workspace configuration for personas defined at talent level with granted rights to manage candidate.

                These rights are granted in addition to standard authorizations: federation admin, talent workspace power user and request owner upon authorization.
              x-whoz-permission: PRIVATE
            startDate:
              type: string
              description: '`PRIVATE` Date before which this Workspace is "draft"'
              format: date
              x-whoz-permission: PRIVATE
            tags:
              type: array
              description: '`CONFIDENTIAL` List of tags assigned to this Workspace'
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            template:
              type: boolean
              description: '`PRIVATE` Indicates whether this workspace is a "real" operational unit or a template to be instantiated into operational units'
              x-whoz-permission: PRIVATE
            website:
              type: string
              description: '`PRIVATE` URL to the Workspace company website'
              x-whoz-permission: PRIVATE
          required:
            - federationId
            - name
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Platform
    WorkspaceWorkflowConfiguration:
      type: object
      properties:
        managementRole:
          type: string
          enum:
            - MANAGER
            - MANAGER_AND_MENTOR
            - NONE
          description: 'Which personas, defined at talent level, should be granted rights to the workflow'
          default: MANAGER_AND_MENTOR
          examples:
            - MANAGER
    MonthlyWorkspaceGoal:
      type: object
      title: MonthlyWorkspaceGoal
      properties:
        month:
          type: string
          description: Month for which this goal applies
          examples:
            - 2022-08
        value:
          type: number
          description: Value for this goal on this month
          examples:
            - 150
      x-tags:
        - Common
    YearlyWorkspaceGoal:
      type: object
      title: YearlyWorkspaceGoal
      properties:
        year:
          type: number
          description: Year for which this goal applies
          examples:
            - 2022
        value:
          type: number
          description: Value for this goal on this year
          examples:
            - 2150
      x-tags:
        - Common
    AccountListOutput:
      type: object
      title: AccountListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Account'
        - $ref: '#/components/schemas/BaseApiListOutput'
    Account:
      type: object
      title: Account
      description: |-
        **Functional Name**: Account 

        **Description**: Accounts represent the legal entities with which your company maintains business relationships, with the goal of monitoring and reporting on them. Examples: Customers, competitors, partners. See [Create an Account](https://docs.whoz.com/docs/what-is-an-account).

        **Main Touchpoints**:
        * [Talent](./4b21183f6dc28-talent): Define the talent who acts as the owner of the account.

        **Organization Level**
        * [Workspace](./a136fe3b77f57-workspace): Local accounts can be restricted to one or more workspaces. Global accounts are visible in all workspaces.
        * [Federation](./564f3fbf9b731-federation): The account is owned by a federation.
      allOf:
        - type: object
          properties:
            alias:
              type: string
              description: '`PRIVATE` Alias or mnemonic for this Account'
              examples:
                - BYTEL
              x-whoz-permission: PRIVATE
            companyRegistrationNumber:
              type: string
              description: '`CONFIDENTIAL` Registration number (eg. SIRET) of the company this account refers to'
              examples:
                - 397 480 930 03498
              x-whoz-permission: CONFIDENTIAL
            description:
              type: string
              description: '`CONFIDENTIAL` Notes about this account'
              examples:
                - This is the description for this Account
              x-whoz-permission: CONFIDENTIAL
            name:
              type: string
              description: '`PRIVATE` Name of the Account'
              examples:
                - Bouygues Telecom
              x-whoz-permission: PRIVATE
            ownerId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent that acts as the owner of this Account'
              examples:
                - 57718d797a0eb30001832699
              x-whoz-permission: UNCLASSIFIED
            parentAccountId:
              type: string
              description: '`PRIVATE` Internal id of the parent Account'
              examples:
                - 630c84dffd563cf57b5f342e
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether this Account has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            tags:
              type: array
              description: '`CONFIDENTIAL` Any tag to categorize the Accounts in the Workspace'
              examples:
                - - telecom
                  - key account
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            type:
              type: string
              enum:
                - CUSTOMER
                - COMPETITOR
                - FEDERATION
                - INTERNAL
                - PARTNER
              description: '`CONFIDENTIAL` Type of Account'
              examples:
                - CUSTOMER
              x-whoz-permission: CONFIDENTIAL
            website:
              type: string
              description: '`PRIVATE` Website of the Account, used to display its logo'
              examples:
                - 'https://www.bouyguestelecom.fr'
              x-whoz-permission: PRIVATE
          required:
            - name
            - ownerId
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/GlobalizableEntity'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    GlobalizableEntity:
      type: object
      title: GlobalizableEntity
      description: Adds the ability to be shared globally in a Federation or specifically to a given list of Workspaces
      properties:
        global:
          type: boolean
          description: '`PRIVATE` Indicates whether this entity is globally visible within the federation (`true`) or only in its list of workspaceIds (`false`)'
          x-whoz-permission: PRIVATE
        federationId:
          type: string
          description: '`PRIVATE` Internal id of the Federation into which this entity is managed'
          examples:
            - 58369bd44932a500014ee497
          x-whoz-permission: PRIVATE
        workspaceIds:
          type: array
          description: '`PRIVATE` List of internal ids of Workspaces where this entity is visible when it is not `global`'
          examples:
            - - 62156422eb824a88b1155eeb
              - 62156428d3c4be14493fb8e5
          items:
            type: string
          x-whoz-permission: PRIVATE
      x-tags:
        - Common
    Contact:
      type: object
      title: Contact
      description: |-
        **Functional name**: Contact

        **Description**: Contacts represent individuals provided as a business contact within the company.  Examples: Prospects, customers, employees, business partners.

        **Main Touchpoints**:
        * [Account](./fe5501ea75a53-account): Associate a contact to an account.

        **Organization Level**:
        * [Workspace](./a136fe3b77f57-workspace): The contact belongs to a workspace.
      allOf:
        - type: object
          properties:
            accountId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Account this contact is linked to'
              examples:
                - 59b6862fcc39260001761628
              x-whoz-permission: UNCLASSIFIED
            address:
              $ref: '#/components/schemas/Address'
              description: '`CONFIDENTIAL` Location of this Contact'
              x-whoz-permission: CONFIDENTIAL
            goodToKnow:
              type: string
              description: '`CONFIDENTIAL` Notes about this contact'
              examples:
                - Ne travaille pas le vendredi
              x-whoz-permission: CONFIDENTIAL
            languages:
              type: array
              description: '`CONFIDENTIAL` Languages spoken by the contact'
              items:
                type: string
                examples:
                  - français
              x-whoz-permission: CONFIDENTIAL
            links:
              type: array
              description: '`CONFIDENTIAL` URL pointing to web resources to compliment this entity'
              examples:
                - - 'https://linkedin.com/in/jdoe'
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            positionTitle:
              type: string
              description: Current position description
              examples:
                - Project manager
            referentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent that acts as referent for this contact (creator of the contact)'
              examples:
                - 57718d797a0eb30001832699
              x-whoz-permission: UNCLASSIFIED
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether this contact has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            tags:
              type: array
              description: '`CONFIDENTIAL` Any tag to categorize the contacts of this workspace'
              examples:
                - - One tag
                  - Two tags
              items:
                type: string
              x-whoz-permission: CONFIDENTIAL
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Id of the Workspace this Contact belongs to'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
          required:
            - referentId
            - workspaceId
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Identity'
      x-tags:
        - Business
    Dossier:
      type: object
      title: Dossier
      description: |-
        **Functional Names**: Deal, opportunity

        **Description**:  A dossier represents a business or sales opportunity or lead. 
        The opportunity can be either:
        * An open opportunity, if it is qualified or in the process of being qualified (Stage = OPEN)
        * A lost opportunity (Stage = CLOSED_LOST)
        * A deal, if it is won (Stage = CLOSED_WON)


        **Main Touchpoints**:  
        * [Account](./fe5501ea75a53-account): Associate a dossier to an account to report on potential and won business.
        * [Project](./b387fc665661b-project): Associate a dossier to a project to group together one or more dossiers to provide a consolidated vision and facilitate their operational follow-up. 

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A dossier belongs to a federation, but is only visible to the workspaces it is managed in or delegated to.
        * [Workspace](./a136fe3b77f57-workspace): A workspace is responsible for managing a dossier. You can delegate a dossier to a talent from another workspace.
      allOf:
        - $ref: '#/components/schemas/Dossier_own_properties'
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    Dossier_own_properties:
      type: object
      title: Dossier own properties
      description: Specific properties of a dossier
      properties:
        accountId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the Account to which this Dossier is linked'
          examples:
            - 59b6862fcc39260001761628
          x-whoz-permission: UNCLASSIFIED
        amount:
          description: '`SECRET` Amount budgeted by the customer for this Dossier'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
        billingType:
          type: string
          enum:
            - FIXED_PRICE
            - TIME_AND_MATERIAL
          description: '`CONFIDENTIAL` Billing type for this Dossier'
          x-whoz-permission: CONFIDENTIAL
        closeDate:
          type: string
          description: '`CONFIDENTIAL` Expected close date for the sale'
          format: date
          x-whoz-permission: CONFIDENTIAL
        endDate:
          type: string
          description: '`CONFIDENTIAL` latest end date of the Tasks in this Dossier'
          format: date
          readOnly: true
          x-whoz-permission: CONFIDENTIAL
        expectedSkills:
          type: array
          items:
            $ref: '#/components/schemas/ExpectedSkill'
        federationId:
          type: string
          description: '`UNCLASSIFIED` Internal identifier of the Federation this Dossier belongs to'
          examples:
            - 62ecbc240c2afb6c3f6dcc33
          x-whoz-permission: UNCLASSIFIED
        geographicalAreas:
          type: array
          description: '`CONFIDENTIAL` List of geographical area iso country code related to the Dossier'
          items:
            $ref: '#/components/schemas/Country_Code'
          x-whoz-permission: CONFIDENTIAL
        history:
          type: array
          description: '`CONFIDENTIAL` Operational situation history of this Dossier'
          items:
            $ref: '#/components/schemas/OperationalSituation'
          x-whoz-permission: CONFIDENTIAL
        lostReason:
          type: string
          description: '`CONFIDENTIAL` Explanation about why this opportunity has been lost'
          examples:
            - Insufficient budget
          x-whoz-permission: CONFIDENTIAL
        lostReasonCategory:
          type: string
          enum:
            - BUDGET_TOO_LOW
            - COMPETITOR_CHOSEN
            - NO_TALENT_AVAILABLE
            - OPPORTUNITY_CANCELLED
            - OPPORTUNITY_RISK_TOO_HIGH
            - UNDEFINED_REASON
            - UNFIT_TALENTS
          description: '`CONFIDENTIAL` Category of lost reason (allows for breaking down analytics). Required for lost opportunity'
          examples:
            - BUDGET_TOO_LOW
          x-whoz-permission: CONFIDENTIAL
        managersIds:
          type: array
          description: '`CONFIDENTIAL` Internal ids of the Talents acting as delegated managers'
          examples:
            - - 5be59f3e5512aa0001336c29
              - 5c0671275512aa0001c3adad
          items:
            type: string
          x-whoz-permission: CONFIDENTIAL
        materialsBilledAmount:
          type: object
          description: '`CONFIDENTIAL` Cost of materials re-billed to the customer'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: CONFIDENTIAL
        materialsCosts:
          type: object
          description: '`CONFIDENTIAL` Cost of materials for this Dossier'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: CONFIDENTIAL
        name:
          type: string
          description: '`PRIVATE` Name of the Dossier'
          examples:
            - Digital transformation at Bytel
          x-whoz-permission: PRIVATE
        nextStep:
          type: string
          description: '`CONFIDENTIAL` Free text about the next steps to take for the sale to go forward'
          examples:
            - Appeler le sponsor le 17/03
          x-whoz-permission: CONFIDENTIAL
        ownerId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the Talent acting as owner of this Dossier'
          examples:
            - 57718d797a0eb30001832699
          x-whoz-permission: UNCLASSIFIED
        projectId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the project this Dossier will be linked to follow up its revenue'
          examples:
            - 57b2c4f70f3c3a0001c237a8
          x-whoz-permission: UNCLASSIFIED
        probability:
          type: number
          description: '`CONFIDENTIAL` Estimated win probability, between 0 and 1'
          minimum: 0
          maximum: 1
          examples:
            - 0.2
          x-whoz-permission: CONFIDENTIAL
        removed:
          type: boolean
          description: '`UNCLASSIFIED` Indicates whether this Dossier has been deleted (soft deletion). This field is readonly, to delete a Dossier, call the [delete endpoint](#operation/dossierDelete)'
          readOnly: true
          default: false
          x-whoz-permission: UNCLASSIFIED
        salesWorkflowStep:
          type: integer
          description: '`CONFIDENTIAL` When the Dossier is at OPEN stage, this indicates the position in the sales workflow. The available salesworkflow steps are configured in the WorkspaceConfiguration and referenced by their 0 based index.'
          default: 0
          examples:
            - 2
          x-whoz-permission: CONFIDENTIAL
        stage:
          type: string
          enum:
            - OPEN
            - CLOSED_WON
            - CLOSED_LOST
          description: '`PRIVATE` Sale stage of this Dossier. A Dossier may be OPEN or CLOSED_LOST, in which cases it is an opportunity or CLOSED_WON in which case it is a deal.'
          examples:
            - OPEN
          x-whoz-permission: PRIVATE
        startDate:
          type: string
          description: '`CONFIDENTIAL` earliest start date of the Tasks in this Dossier'
          format: date
          readOnly: true
          x-whoz-permission: CONFIDENTIAL
        state:
          type: string
          enum:
            - UNDEFINED
            - SECURED
            - UNCERTAIN
            - SUSPENDED
            - CANCELLED
          description: '`CONFIDENTIAL` State of the Dossier, always UNDEFINED for opportunities. A deal can be SECURED if it is sustainable, UNCERTAIN if the continuation is not guaranteed, SUSPENDED if current affectations are postponed and CANCELLED mean that current affectations must be stopped.'
          examples:
            - UNDEFINED
          x-whoz-permission: CONFIDENTIAL
        status:
          type: string
          enum:
            - DONE
            - IN_PROGRESS
          description: '`CONFIDENTIAL` Status of the Dossier, can be DONE when the deal is completed or the opportunity is lost, or IN_PROGRESS for an ongoing opportunity or deal.'
          examples:
            - DONE
          x-whoz-permission: CONFIDENTIAL
        tags:
          type: array
          description: '`CONFIDENTIAL` Any tag to categorize the Dossiers of this workspace'
          examples:
            - - one tag
              - two tags
          items:
            type: string
          x-whoz-permission: CONFIDENTIAL
        valuationMethod:
          type: string
          enum:
            - TASK_DAILY_RATE
            - TOTAL_COST_CONTRIBUTION
          description: Valuation method related to billing type. May be TASK_DAILY_RATE or TOTAL_COST_CONTRIBUTION. If billing type is TIME_AND_MATERIAL then valuation method must be TASK_DAILY_RATE.
          examples:
            - TASK_DAILY_RATE
          x-whoz-permission: CONFIDENTIAL
      required:
        - history
      x-tags:
        - Business
    ExpectedSkill:
      type: object
      title: ExpectedSkill
      description: Represents an expected skill
      allOf:
        - type: object
          properties:
            requirement:
              type: string
              enum:
                - MANDATORY
                - OPTIONAL
              description: Determines whether or not that skill is mandatory for the Task
              default: MANDATORY
              examples:
                - MANDATORY
            xps:
              type: number
              description: 'Expected XPS (score based on the implementation of this skill during past work experience, training, diplomas, and so on) level for potential Talents'
        - $ref: '#/components/schemas/SkillReference'
      x-tags:
        - Allocation
    projectId:
      type: string
      description: '`UNCLASSIFIED` Internal id of the project this Dossier will be linked to follow up its revenue'
      examples:
        - 57b2c4f70f3c3a0001c237a8
      x-whoz-permission: UNCLASSIFIED
    closeDate:
      type: string
      description: '`CONFIDENTIAL` Expected close date for the sale'
      format: date
      x-whoz-permission: CONFIDENTIAL
    lostReason:
      type: string
      description: '`CONFIDENTIAL` Explanation about why this opportunity has been lost'
      examples:
        - Insufficient budget
      x-whoz-permission: CONFIDENTIAL
    lostReasonCategory:
      type: string
      enum:
        - BUDGET_TOO_LOW
        - COMPETITOR_CHOSEN
        - NO_TALENT_AVAILABLE
        - OPPORTUNITY_CANCELLED
        - OPPORTUNITY_RISK_TOO_HIGH
        - UNDEFINED_REASON
        - UNFIT_TALENTS
      description: '`CONFIDENTIAL` Category of lost reason (allows for breaking down analytics). Required for lost opportunity'
      examples:
        - BUDGET_TOO_LOW
      x-whoz-permission: CONFIDENTIAL
    DossierListOutput:
      type: object
      title: DossierListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Dossier'
        - $ref: '#/components/schemas/BaseApiListOutput'
    ListInputByProjectIds:
      type: object
      title: ListInputByProjectIds
      allOf:
        - type: object
          properties:
            projectIds:
              type: array
              description: List of internal identifiers of projects the entities belong to
              examples:
                - - 64776f06b163fc027b174127
                  - 64776f0efd59a732a6b64737
              items:
                type: string
          required:
            - projectIds
        - $ref: '#/components/schemas/BaseListInput'
    Project:
      type: object
      title: Project
      description: |
        **Functional Name**: Project

        **Description**: A project groups together one or more dossiers to provide a consolidated vision.

        **Main Touchpoints**: 
        * [Account](./fe5501ea75a53-account): Associate a project with an account to track business opportunities.

        **Organization**
        * [Workspace](./a136fe3b77f57-workspace): A project belongs to a workspace.
        * [Federation](./564f3fbf9b731-federation): A project also belongs to a federation.
      allOf:
        - type: object
          properties:
            accountId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Account related to this Project'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
            category:
              type: string
              description: '`CONFIDENTIAL` Project category'
              examples:
                - Bank
              x-whoz-permission: CONFIDENTIAL
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the Federation this Project belongs to'
              examples:
                - 62ecbc240c2afb6c3f6dcc33
              x-whoz-permission: UNCLASSIFIED
            goodToKnow:
              type: string
              description: '`SECRET` Good to know info about the Project'
              examples:
                - Should be for the next quarter
              x-whoz-permission: SECRET
            name:
              type: string
              description: '`PRIVATE` Name of the Project'
              examples:
                - Your Project Name
              x-whoz-permission: PRIVATE
            ownerId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the Talent acting as owner of this Project'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
            partialView:
              type: boolean
              description: '`PRIVATE` Indicates whether the connected user has only access to a partial view of Dossiers related to the Project'
              examples:
                - false
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether this Project has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            status:
              type: string
              enum:
                - ONGOING
                - CLOSED
              description: '`CONFIDENTIAL` Status of the Project'
              default: ONGOING
              x-whoz-permission: CONFIDENTIAL
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Id of the Workspace this Project belongs to'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - ownerId
            - workspaceId
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    ProjectListOutput:
      type: object
      title: ProjectListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Project'
        - $ref: '#/components/schemas/BaseApiListOutput'
    Task_input:
      type: object
      title: Task input
      description: Input properties for Task
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: Location where the Task will be done.
        assigneeId:
          type: string
          description: Internal id of the Talent assigned to this Task when it is IN_PROGRESS or DONE
          readOnly: true
          examples:
            - 58369bd44932a500014ee497
        billable:
          type: boolean
          description: Whether this Task is billable to a client
        budgetedWorkload:
          type: object
          description: Budgeted workload of the Task
          allOf:
            - $ref: '#/components/schemas/Workload'
        canceledOn:
          type: string
          description: Date on which the Task was canceled
          format: date
        candidates:
          type: array
          description: Data about the pre-selected Talents for this Task. To change this data use the setCandidate operation.
          readOnly: true
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/TaskCandidate'
        code:
          type: string
          description: Generated identifier code that can be used as an external reference in third party Information System
          examples:
            - A5BDF3
        committed:
          type: object
          description: Task committed data
          allOf:
            - $ref: '#/components/schemas/TaskRecord'
        description:
          type: string
          description: Description of this Task
          examples:
            - Description of this Task's main activities and/or requirements
        dossierId:
          type: string
          description: Internal id of the Dossier to which this Task belongs
          examples:
            - 63ff0906634c00ae643be3fd
        endDate:
          type: string
          description: Date at which this Task ends
          format: date
        expectedSkills:
          type: array
          description: Skills expected from the Talent to perform the Task
          items:
            $ref: '#/components/schemas/ExpectedSkill'
        federationId:
          type: string
          description: Internal id of the Federation this Task belongs to
          examples:
            - 63ff08d850c47a977f9ce54c
        lostReasonCategory:
          type: string
          enum:
            - BUDGET_TOO_LOW
            - COMPETITOR_CHOSEN
            - NO_TALENT_AVAILABLE
            - OPPORTUNITY_CANCELLED
            - OPPORTUNITY_RISK_TOO_HIGH
            - UNDEFINED_REASON
            - UNFIT_TALENTS
          description: The reason that the task was cancelled
          examples:
            - BUDGET_TOO_LOW
        name:
          type: string
          description: Name of the Task
          examples:
            - Name of this Task
        ownerId:
          type: string
          description: Internal id of the Talent acting as owner of the Task
          examples:
            - 63ff09a53c9782c8ca44cac1
        plannedWorkloads:
          type: array
          description: Planned workloads for this Task
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/PlannedWorkload'
        positionSpecification:
          type: object
          description: Specification of the position. Only present if type is `POSITION`
          allOf:
            - $ref: '#/components/schemas/PositionSpecification'
        postingIndicator:
          type: string
          description: External posting indicator to use for this Task
        priority:
          type: string
          enum:
            - P1_HIGHEST
            - P2_HIGH
            - P3_NORMAL
            - P4_LOW
            - P5_LOWEST
          description: Priority of this Task
        purchaseOrder:
          type: string
          description: External purchase order linked to this Task
          examples:
            - PO_12345
        qualificationIds:
          type: array
          description: 'Concept ids of the qualifications (represent the roles, grades, certifications, etc) the ideal Talent for this Task should have'
          examples:
            - - 4894ed12-b5e8-11ec-b909-0242ac120002
          items:
            type: string
        remoteable:
          type: boolean
          description: Whether this Task is achievable remotely
        removed:
          type: boolean
          description: Whether this Task has been deleted (soft deletion)
          readOnly: true
          default: false
        requestOriginId:
          type: string
          description: The internal identifier of the Task that led to the creation of this Task (for example a multi-FTE talent request that led to several assignments).
          examples:
            - 6406415fb870cec36904aa2f
        staffingWorkflowStepDates:
          type: array
          description: Data about the staffing workflow history.
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/WorkflowStepDate'
        startDate:
          type: string
          description: Date at which this Task starts
          format: date
        status:
          type: string
          description: Status of the Task
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/TaskStatus'
        tags:
          type: array
          description: List of string used to tag the Task
          examples:
            - - one tag
              - two tags
        templateCandidate:
          type: object
          description: Description of the ideal Talent to perform the Task
          allOf:
            - $ref: '#/components/schemas/TemplateCandidate'
        type:
          type: string
          description: Type of the Task
          default: MISSION
          allOf:
            - $ref: '#/components/schemas/TaskType'
        unitCost:
          type: object
          description: Unit cost of the Task
          allOf:
            - $ref: '#/components/schemas/Amount'
        unitInternalRate:
          type: object
          description: Unit rate at which the Task is billed internally in case of cross staffing
          allOf:
            - $ref: '#/components/schemas/Amount'
        unitRate:
          type: object
          description: Unit rate of the Task
          allOf:
            - $ref: '#/components/schemas/Amount'
        workspaceId:
          type: string
          description: Internal id of the Workspace into which this Task is managed
          examples:
            - 58369bd44932a500014ee497
      required:
        - federationId
        - ownerId
        - startDate
        - workspaceId
      x-tags:
        - Allocation
    Workload:
      type: object
      title: Workload
      description: Represents a workload expressed in a unit of time
      properties:
        value:
          type: number
          description: Numeric value of the Workload
          examples:
            - 0.5
        timescale:
          const: DAY
          description: Timescale in which the value is expressed. Always DAY for now.
          examples:
            - DAY
      required:
        - value
        - timescale
      x-tags:
        - Allocation
    TaskCandidate:
      type: object
      title: TaskCandidate
      description: Data about a Talent pre-selected for a Task (mainly in use when it is in REQUEST status)
      properties:
        bookedAllocationProbabilityLevel:
          type: string
          enum:
            - MEDIUM
            - HIGH
          description: 'For booked candidates only. Indicates the probability that the booked candidate is assigned to the task. Example: Medium = 60% High = 90%'
          examples:
            - HIGH
        candidateStatus:
          type: string
          enum:
            - ASSIGNED
            - BOOKED
            - NONE
            - NOT_SELECTED
            - PRE_SELECTED
            - SUGGESTED
          description: The status of the candidate in relationship to the task.
          examples:
            - BOOKED
        managerValidationStatus:
          type: string
          enum:
            - ASKED
            - REFUSED
            - TO_ASK
            - VALIDATED
          description: The status of whether the manager has validated the assignment of the talent to the task.
          examples:
            - ASKED
        selectionType:
          type: string
          enum:
            - BEST_CHOICE
            - DISCARDED
            - NONE
            - SELECTED
          description: 'Optionally indicates whether the candidate is selected, marked as a best choice, or not selected.'
          examples:
            - SELECTED
        talentId:
          type: string
          description: Internal id of the corresponding Talent
          examples:
            - 63ff09343cbbdc36a404d531
        rejectionReason:
          type: string
          enum:
            - CANDIDATE_NOT_INTERESTED
            - CERTIFICATION_ISSUE
            - CLEARANCE_ISSUE
            - CLIENT_REJECTED
            - COST_ISSUE
            - GRADE_MISMATCH
            - LANGUAGE_PROFICIENCY
            - LOCATION_ISSUE
            - NO_LONGER_AVAILABLE
            - OTHER_CANDIDATE_SELECTED
            - SKILL_MISMATCH
            - TIME_ZONE_ISSUE
            - VISA_ISSUE
          description: Only available when you activate the Talent rejections reason feature. Indicates the reason for not continuing with the talent in the staffing process.
          examples:
            - CANDIDATE_NOT_INTERESTED
      required:
        - talentId
      x-tags:
        - Allocation
    TaskRecord:
      type: object
      title: TaskRecord
      description: Represents the task data at the given time
      allOf:
        - type: object
          properties:
            budgetedWorkload:
              type: object
              description: Budgeted workload of the Task when it is recorded
              allOf:
                - $ref: '#/components/schemas/Workload'
            endDate:
              type: string
              description: Date at which this Task ends when it is recorded. Required for tasks that are the type `MISSION`
              format: date
            plannedWorkloads:
              type: array
              description: Planned workloads for this Task when it is recorded
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PlannedWorkload'
            startDate:
              type: string
              description: Date at which this Task starts when it is recorded
              format: date
            recordedBy:
              type: string
              description: Internal id of the User that created the record
              readOnly: true
            recordedDate:
              type: string
              description: Date at which the record has been created
              format: date
              readOnly: true
          required:
            - budgetedWorkload
            - startDate
      x-tags:
        - Allocation
    PlannedWorkload:
      type: object
      title: PlannedWorkload
      description: Represent a Workload planned in a period of time
      properties:
        workload:
          type: object
          description: Workload involved in this period of time
          allOf:
            - $ref: '#/components/schemas/Workload'
        startDate:
          type: string
          description: Date at which this period start
          format: date
        spreadOver:
          type: string
          enum:
            - WEEKS
            - MONTHS
          description: Granularity of the period of time
      required:
        - workload
        - startDate
        - spreadOver
      x-tags:
        - Allocation
    PositionSpecification:
      type: object
      title: PositionSpecification
      description: Information describing a position
      properties:
        contractType:
          type: string
          enum:
            - ASSIGNMENT
            - FIXED_TERM
            - INTERNSHIP
            - PERMANENT
            - SERVICE_AGREEMENT
            - WORK_STUDY
          description: Type of contract of this position
          examples:
            - PERMANENT
        fteNumber:
          type: number
          description: 'Number of Full-Time Equivalent Job for this position, value between 0 and 1'
          minimum: 0
          maximum: 1
          default: 1
          examples:
            - 0.5
        language:
          type: string
          description: Language(s) used for communication while occupying this position
          examples:
            - en-US
        publishingDate:
          type: string
          description: Date at which this position is published
          format: date
          examples:
            - '2023-01-01'
      x-tags:
        - Allocation
    WorkflowStepDate:
      type: object
      title: WorkflowStepDate
      description: Element of the staffing workflow history
      allOf:
        - type: object
          properties:
            dateTime:
              type: string
              title: date of the staffing workflow
              format: date-time
            workflowStep:
              type: number
              title: step of the current element
              default: 0
              examples:
                - 3
      x-tags:
        - Allocation
    TaskStatus:
      type: string
      enum:
        - REQUEST
        - CANCELLED
        - IN_PROGRESS
        - DONE
      title: TaskStatus
      description: Status of the Task
      x-tags:
        - Allocation
    TemplateCandidate:
      type: object
      title: TemplateCandidate
      description: Description of the ideal Talent to perform the Task
      properties:
        geographicalAreas:
          type: array
          description: Countries in which the Talent is expected to have worked
          items:
            $ref: '#/components/schemas/Country_Code'
        scopes:
          type: array
          description: Allowed scope of the Talent who may perform the Task. Indicates whether the Task is open for recruitment and/or subcontracting.
          examples:
            - - EMPLOYEE
          items:
            $ref: '#/components/schemas/scope'
        tags:
          description: List of tags the Talent should bear.
          allOf:
            - $ref: '#/components/schemas/tags'
        yearsOfExperience:
          $ref: '#/components/schemas/yearsOfExperience'
      x-tags:
        - Allocation
    yearsOfExperience:
      type: integer
      description: '`PRIVATE` Number of years of experience of the Talent up to now.'
      x-whoz-permission: PRIVATE
    TaskType:
      type: string
      enum:
        - MISSION
        - MISSION_EXTENSION
        - MISSION_PRESALES
        - MISSION_REPLACEMENT
        - MISSION_SHADOWING
        - MISSION_SPLIT
        - POSITION
      title: TaskType
      description: Type of the Task
      x-tags:
        - Allocation
    Task:
      type: object
      title: Task
      description: |
        **Functional Names:** Talent request, assignment, open position

        **Description:** A task represents the job, skills, experience, and other operation requirements for a specific amount of work to be done by a talent. Functionally, this can be a talent request, an assignment, or an open position.

        Set the task type to MISSION to define:
        A talent request for an assignment which has not been filled yet (status = REQUEST)
        An assignment, which is a temporary position of a talent (status = IN_PROGRESS)


        Set the task type to POSITION to define an open position. You can define:
        An open position which hasn't been filled (status = REQUEST)
        A filled position (status = IN_PROGRESS)


        **Main Touchpoints:**
        * [Talent](./4b21183f6dc28-talent): You can select, book, or assign a talent on a task to associate who will do the represented work (candidates or assigneeId). You can also suggest a talent as a candidate for the task (candidates). You can designate a talent as the owner to manage the task (ownerId).
        * [Dossier](./65fbe356c01f6-dossier): Associate a dossier to a talent to define the budget envelope and the contracting method.
        * [Skill](./2cc451ed12f92-skill): Define which skills are required for the task.
        * [Qualification](./ab1e4feecfe51-qualification): Define which qualifications are required for the task.

        **Organization Level**
        * [Workspace](./a136fe3b77f57-workspace): A workspace is in charge of managing the task, and a task can be shared with multiple workspaces.
        * [Federation](./564f3fbf9b731-federation): A task belongs to a federation, but is only visible to the workspaces it belongs to or is shared with.
      allOf:
        - $ref: '#/components/schemas/Task_own_properties'
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Allocation
    Task_own_properties:
      type: object
      title: Task own properties
      description: Specitfic properties of a Task
      properties:
        address:
          $ref: '#/components/schemas/Address'
          description: '`PRIVATE` Location where the Task will be done.'
          x-whoz-permission: PRIVATE
        assigneeId:
          type: string
          description: '`PRIVATE` Internal id of the Talent assigned to this Task when it is IN_PROGRESS or DONE'
          readOnly: true
          examples:
            - 58369bd44932a500014ee497
          x-whoz-permission: PRIVATE
        billable:
          type: boolean
          description: '`PRIVATE` Whether this Task is billable to a client'
          x-whoz-permission: PRIVATE
        budgetedWorkload:
          type: object
          description: '`PRIVATE` Budgeted workload of the Task'
          allOf:
            - $ref: '#/components/schemas/Workload'
          x-whoz-permission: PRIVATE
        canceledOn:
          type: string
          description: '`CONFIDENTIAL` Date on which the Task was canceled'
          format: date
          x-whoz-permission: CONFIDENTIAL
        candidates:
          type: array
          description: '`CONFIDENTIAL` Data about the pre-selected Talents for this Task. To change this data use the setCandidate operation.'
          readOnly: true
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/TaskCandidate'
          x-whoz-permission: CONFIDENTIAL
        code:
          type: string
          description: '`UNCLASSIFIED` Generated identifier code that can be used as an external reference in third party Information System'
          examples:
            - A5BDF3
          x-whoz-permission: UNCLASSIFIED
        committed:
          type: object
          description: '`CONFIDENTIAL` Task committed data'
          allOf:
            - $ref: '#/components/schemas/TaskRecord'
          x-whoz-permission: CONFIDENTIAL
        description:
          type: string
          description: '`PRIVATE` Description of this Task'
          examples:
            - Description of this Task's main activities and/or requirements
          x-whoz-permission: PRIVATE
        dossierId:
          type: string
          description: '`PRIVATE` Internal id of the Dossier to which this Task belongs'
          examples:
            - 63ff0906634c00ae643be3fd
          x-whoz-permission: PRIVATE
        endDate:
          type: string
          description: '`PRIVATE` Date at which this Task ends'
          format: date
          x-whoz-permission: PRIVATE
        expectedSkills:
          type: array
          description: '`PRIVATE` Skills expected from the Talent to perform the Task'
          items:
            $ref: '#/components/schemas/ExpectedSkill'
          x-whoz-permission: PRIVATE
        federationId:
          type: string
          description: '`UNCLASSIFIED` Internal id of the Federation this Task belongs to'
          examples:
            - 63ff08d850c47a977f9ce54c
          x-whoz-permission: UNCLASSIFIED
        lostReasonCategory:
          type: string
          enum:
            - BUDGET_TOO_LOW
            - COMPETITOR_CHOSEN
            - NO_TALENT_AVAILABLE
            - OPPORTUNITY_CANCELLED
            - OPPORTUNITY_RISK_TOO_HIGH
            - UNDEFINED_REASON
            - UNFIT_TALENTS
          description: '`CONFIDENTIAL` The reason that the task was cancelled'
          examples:
            - BUDGET_TOO_LOW
          x-whoz-permission: CONFIDENTIAL
        name:
          type: string
          description: '`PRIVATE` Name of the Task'
          examples:
            - Name of this Task
          x-whoz-permission: PRIVATE
        ownerId:
          type: string
          description: '`PRIVATE` Internal id of the Talent acting as owner of the Task'
          examples:
            - 63ff09a53c9782c8ca44cac1
          x-whoz-permission: PRIVATE
        plannedWorkloads:
          type: array
          description: '`PRIVATE` Planned workloads for this Task'
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/PlannedWorkload'
          x-whoz-permission: PRIVATE
        positionSpecification:
          type: object
          description: '`PRIVATE` Specification of the position. Only present if type is `POSITION`'
          allOf:
            - $ref: '#/components/schemas/PositionSpecification'
          x-whoz-permission: PRIVATE
        postingIndicator:
          type: string
          description: '`CONFIDENTIAL` External posting indicator to use for this Task'
          x-whoz-permission: CONFIDENTIAL
        priority:
          type: string
          enum:
            - P1_HIGHEST
            - P2_HIGH
            - P3_NORMAL
            - P4_LOW
            - P5_LOWEST
          description: '`PRIVATE` Priority of this Task'
          x-whoz-permission: PRIVATE
        purchaseOrder:
          type: string
          description: '`CONFIDENTIAL` External purchase order linked to this Task'
          examples:
            - PO_12345
          x-whoz-permission: CONFIDENTIAL
        qualificationIds:
          type: array
          description: '`PRIVATE` Concept ids of the qualifications (represent the roles, grades, certifications, etc) the ideal Talent for this Task should have'
          examples:
            - - 4894ed12-b5e8-11ec-b909-0242ac120002
          items:
            type: string
          x-whoz-permission: PRIVATE
        remoteable:
          type: boolean
          description: '`PRIVATE` Whether this Task is achievable remotely'
          x-whoz-permission: PRIVATE
        removed:
          type: boolean
          description: '`UNCLASSIFIED` Whether this Task has been deleted (soft deletion)'
          readOnly: true
          default: false
          x-whoz-permission: UNCLASSIFIED
        requestOriginId:
          type: string
          description: '`PRIVATE` The internal identifier of the Task that led to the creation of this Task (for example a multi-FTE talent request that led to several assignments).'
          examples:
            - 6406415fb870cec36904aa2f
          x-whoz-permission: PRIVATE
        revisedBy:
          type: string
          description: '`CONFIDENTIAL` Internal id of the User that has revised (budgetedWorkload, plannedWorkloads, startDate or endDate) the task'
          readOnly: true
          examples:
            - 5f8578c7eef5f93dd0fd8f6e
          x-whoz-permission: CONFIDENTIAL
        revisedDate:
          type: string
          description: '`CONFIDENTIAL` Date at which the Task has been revised (budgetedWorkload, plannedWorkloads, startDate or endDate)'
          format: date
          readOnly: true
          x-whoz-permission: CONFIDENTIAL
        snapshotAtAssignment:
          type: object
          description: '`CONFIDENTIAL` Task snapshot data when it is started'
          allOf:
            - $ref: '#/components/schemas/TaskRecord'
          x-whoz-permission: CONFIDENTIAL
        snapshotAtCreation:
          type: object
          description: '`CONFIDENTIAL` Task snapshot data when it is created'
          allOf:
            - $ref: '#/components/schemas/TaskRecord'
          x-whoz-permission: CONFIDENTIAL
        staffingWorkflowStepDates:
          type: array
          description: '`PRIVATE` Data about the staffing workflow history.'
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/WorkflowStepDate'
          x-whoz-permission: PRIVATE
        startDate:
          type: string
          description: '`PRIVATE` Date at which this Task starts'
          format: date
          x-deprecated: true
          x-whoz-permission: PRIVATE
        status:
          type: string
          description: '`PRIVATE` Status of the Task'
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/TaskStatus'
          x-whoz-permission: PRIVATE
        tags:
          type: array
          description: '`CONFIDENTIAL` List of string used to tag the Task'
          examples:
            - - one tag
              - two tags
          x-whoz-permission: CONFIDENTIAL
        templateCandidate:
          type: object
          description: '`PRIVATE` Description of the ideal Talent to perform the Task'
          allOf:
            - $ref: '#/components/schemas/TemplateCandidate'
          x-whoz-permission: PRIVATE
        type:
          type: string
          description: '`PRIVATE` Type of the Task'
          default: MISSION
          allOf:
            - $ref: '#/components/schemas/TaskType'
          x-whoz-permission: PRIVATE
        unitCost:
          type: object
          description: '`SECRET` Unit cost of the Task'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
        unitInternalRate:
          type: object
          description: '`SECRET` Unit rate at which the Task is billed internally in case of cross staffing'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
        unitRate:
          type: object
          description: '`SECRET` Unit rate of the Task'
          allOf:
            - $ref: '#/components/schemas/Amount'
          x-whoz-permission: SECRET
        workspaceId:
          type: string
          description: '`PRIVATE` Internal id of the Workspace into which this Task is managed'
          examples:
            - 58369bd44932a500014ee497
          x-whoz-permission: PRIVATE
      required:
        - federationId
        - ownerId
        - startDate
        - workspaceId
      x-tags:
        - Allocation
    ListInputByAssigneeOrCandidate:
      type: object
      title: ListInputByAssigneeOrCandidate
      allOf:
        - $ref: '#/components/schemas/BaseListInput'
        - type: object
          properties:
            assigneeIds:
              type: array
              description: List of assignee id of task to fetch
              examples:
                - - 64776f06b163fc027b174127
                  - 64776f0efd59a732a6b64737
              items:
                type: string
            candidateIds:
              type: array
              description: List of candidates id of task to fetch
              examples:
                - - 64776f06b163fc027b174127
                  - 64776f0efd59a732a6b64737
              items:
                type: string
            candidateStatuses:
              type: array
              enum:
                - PRE_SELECTED
                - SUGGESTED
                - BOOKED
                - NOT_SELECTED
                - ASSIGNED
                - NONE
              description: List of statuses of searched candidate
              examples:
                - - PRE_SELECTED
                  - ASSIGNED
              items:
                type: string
            startDate:
              type: string
              description: minimum startDate of the task
              format: date
            endDate:
              type: string
              description: maximum endDate of the task
              format: date
          required:
            - startDate
            - endDate
    TaskListOutput:
      type: object
      title: TaskListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Task'
        - $ref: '#/components/schemas/BaseApiListOutput'
    TaskListInputByDossierIds:
      title: TaskListInputByDossierIds
      allOf:
        - type: object
          properties:
            dossierIds:
              type: array
              description: List of internal identifiers of the Dossiers to list tasks from
              examples:
                - - 636b9a7aaedb7b7b62f66808
                  - 64776e47724489edc02c1f14
                  - 64776f0efd59a732a6b64737
              items:
                type: string
            federationId:
              type: string
              description: The internal identifier of the federation where entities may be located
              examples:
                - 64776e47724489edc02c1f14
            modifiedSince:
              type: string
              description: Match only entities updated after the given instant
              format: date-time
            withRemoved:
              type: boolean
              description: Whether to include removed entities or not
              default: false
            workspaceId:
              type: string
              description: The internal identifier of the workspace from which the entities will be listed
              examples:
                - 64776f0efd59a732a6b64737
          required:
            - dossierIds
            - federationId
            - workspaceId
        - $ref: '#/components/schemas/BaseListInput'
    TaskListInputByWorkspaceId:
      title: TaskListInputByWorkspaceId
      allOf:
        - type: object
          properties:
            types:
              type: string
              description: Type of task to filter
              allOf:
                - $ref: '#/components/schemas/TaskType'
            statuses:
              type: string
              description: Status of task to filter
              allOf:
                - $ref: '#/components/schemas/TaskStatus'
        - $ref: '#/components/schemas/ListInputByWorkspaceId'
    TaskCancelInput:
      type: object
      title: TaskCancelInput
      allOf:
        - type: object
          properties:
            lostReasonCategory:
              type: string
              enum:
                - BUDGET_TOO_LOW
                - COMPETITOR_CHOSEN
                - NO_TALENT_AVAILABLE
                - OPPORTUNITY_CANCELLED
                - OPPORTUNITY_RISK_TOO_HIGH
                - UNDEFINED_REASON
                - UNFIT_TALENTS
              description: The reason that the task was cancelled
              examples:
                - BUDGET_TOO_LOW
    TaskLeadInput:
      type: object
      title: TaskLeadInput
      allOf:
        - type: object
          properties:
            talentId:
              type: string
              description: Internal id of the corresponding Talent
              examples:
                - 63ff09343cbbdc36a404d531
          required:
            - talentId
    endDate:
      type: string
      description: '`PRIVATE` Date at which this Task ends'
      format: date
      x-whoz-permission: PRIVATE
    startDate:
      type: string
      description: '`PRIVATE` Date at which this Task starts'
      format: date
      x-deprecated: true
      x-whoz-permission: PRIVATE
    TaskSplitInput:
      type: object
      title: TaskSplitInput
      allOf:
        - type: object
          properties:
            taskId:
              type: string
              description: id of the task to split
              examples:
                - 603cb26702c5254bf093010f
            splitDate:
              type: string
              description: date of the split
              format: date
          required:
            - taskId
    TaskSplitOutput:
      type: object
      title: TaskSplitOutput
      description: |
        An object containing the updated and the created assignement on a split.
      allOf:
        - type: object
          properties:
            updatedAssignment:
              type: object
              description: The updated assignment
              allOf:
                - $ref: '#/components/schemas/Task'
            createdAssignment:
              type: object
              description: The created assignment
              allOf:
                - $ref: '#/components/schemas/Task'
          required:
            - updatedAssignment
            - createdAssignment
      x-tags:
        - Allocation
    Worklog:
      type: object
      title: Worklog
      description: |-
        **Functional Name**: Time entry

        **Description**: A worklog represents a recording of the talent's activities and time for a specific day. Examples: Not worked, sick leave, billable time.

        **Main Touchpoints**: 
        *  [Task](./e168d751db277-task): The associated task when the worklog is related to a specific task.

        **Organization Level**
        *  [Talent](./4b21183f6dc28-talent): A worklog always belongs to a talent.
        * [Workspace](./a136fe3b77f57-workspace): A worklog can be associated with a workspace when the talent's work is associated with another workspace, such as in the case of cross-staffing.
      properties:
        createdBy:
          $ref: '#/components/schemas/createdBy'
        createdDate:
          $ref: '#/components/schemas/createdDate'
        id:
          $ref: '#/components/schemas/id'
        lastModifiedBy:
          $ref: '#/components/schemas/lastModifiedBy'
        lastModifiedDate:
          $ref: '#/components/schemas/lastModifiedDate'
      allOf:
        - $ref: '#/components/schemas/Worklog_own_properties'
      x-tags:
        - Allocation
    Worklog_own_properties:
      type: object
      title: Worklog own properties
      description: Specific properties of a worklog
      properties:
        customType:
          type: integer
          description: |-
            For BUSY activity types, you can specify an additional level of granularity, by indicating the custom activity type defined in federation. Example: Recruitment
            Note that only default custom types are available for now.
            See [WorklogCustomType](./d4e884ea7c128-worklog-custom-type)
          minimum: 3
          maximum: 8
          examples:
            - 3
        date:
          type: string
          description: '`CONFIDENTIAL` The date at which the work was done'
          format: date
          x-whoz-permission: CONFIDENTIAL
        talentId:
          type: string
          description: '`CONFIDENTIAL` Internal id of the Talent that produced the work'
          examples:
            - 5f8578c7eef5f93dd0fd8f6e
          x-whoz-permission: CONFIDENTIAL
        taskId:
          type: string
          description: '`CONFIDENTIAL` The taskId associated with this Worklog (mandatory, if type is TASK). Required if type is TASK'
          examples:
            - 507f191e810c19729de860ea
          x-whoz-permission: CONFIDENTIAL
        type:
          type: string
          enum:
            - BUSY
            - BUSY_BILLABLE
            - COMPENSATORY_TIME
            - COMPENSATORY_TIME_COMPANY
            - COMPENSATORY_TIME_RECOVERY
            - EXCEPTIONAL_ABSENCE_CHILD_CUSTODY
            - EXCEPTIONAL_ABSENCE_PARTIAL_UNEMPLOYMENT
            - OTHER_ABSENCE
            - OUT_OF_WORK
            - SICK_LEAVE
            - SICK_LEAVE_HALF_TIME_THERAPEUTIC
            - SICK_LEAVE_WORK_ACCIDENT
            - TASK
            - TRAINING
            - TRAINING_ALTERNATELY
            - VACATION
            - VACATION_FUNERAL
            - VACATION_MATERNITY
            - VACATION_OTHER
            - VACATION_PARENTAL
            - VACATION_PATERNITY
            - VACATION_UNPAID
            - VACATION_WEDDING
          description: '`CONFIDENTIAL` Type of this worklog'
          examples:
            - TASK
          x-whoz-permission: CONFIDENTIAL
        workload:
          type: number
          description: '`CONFIDENTIAL` Number (decimal) of day (may be more than 1 in case of overload) of the worklog for this date on this task for this person. If workload is null or value is 0, the associated worklog will be deleted from timesheet'
          examples:
            - 0.5
          x-whoz-permission: CONFIDENTIAL
        workspaceId:
          type: string
          description: '`CONFIDENTIAL` internal id of the workspace. Necessary to log BUSY_BILLABLE work on a workspace.'
          examples:
            - 6246fc03d9aa947b87cbf18c
          x-whoz-permission: CONFIDENTIAL
      required:
        - date
        - talentId
        - type
      x-tags:
        - Allocation
    workload:
      type: number
      description: '`CONFIDENTIAL` Number (decimal) of day (may be more than 1 in case of overload) of the worklog for this date on this task for this person. If workload is null or value is 0, the associated worklog will be deleted from timesheet'
      examples:
        - 0.5
      x-whoz-permission: CONFIDENTIAL
    talentId:
      type: string
      description: '`CONFIDENTIAL` Internal id of the Talent that produced the work'
      examples:
        - 5f8578c7eef5f93dd0fd8f6e
      x-whoz-permission: CONFIDENTIAL
    taskId:
      type: string
      description: '`CONFIDENTIAL` The taskId associated with this Worklog (mandatory, if type is TASK). Required if type is TASK'
      examples:
        - 507f191e810c19729de860ea
      x-whoz-permission: CONFIDENTIAL
    type:
      type: string
      enum:
        - BUSY
        - BUSY_BILLABLE
        - COMPENSATORY_TIME
        - COMPENSATORY_TIME_COMPANY
        - COMPENSATORY_TIME_RECOVERY
        - EXCEPTIONAL_ABSENCE_CHILD_CUSTODY
        - EXCEPTIONAL_ABSENCE_PARTIAL_UNEMPLOYMENT
        - OTHER_ABSENCE
        - OUT_OF_WORK
        - SICK_LEAVE
        - SICK_LEAVE_HALF_TIME_THERAPEUTIC
        - SICK_LEAVE_WORK_ACCIDENT
        - TASK
        - TRAINING
        - TRAINING_ALTERNATELY
        - VACATION
        - VACATION_FUNERAL
        - VACATION_MATERNITY
        - VACATION_OTHER
        - VACATION_PARENTAL
        - VACATION_PATERNITY
        - VACATION_UNPAID
        - VACATION_WEDDING
      description: '`CONFIDENTIAL` Type of this worklog'
      examples:
        - TASK
      x-whoz-permission: CONFIDENTIAL
    PostingIndicator:
      type: object
      title: PostingIndicator
      description: |-
        **Functional Names**: Posting indicator

        **Description**: Represents a posting indicator that you can associate with a task.

        **Main Touchpoints**: 

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A posting indicator is defined at the federation level.
      allOf:
        - type: object
          properties:
            description:
              type: string
              description: '`PRIVATE` Free text to further describe this PostingIndicator'
              examples:
                - Anything else
            endDate:
              type: string
              description: '`PRIVATE` Date after which this PostingIndicator should not be used'
              format: date
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`PRIVATE` Internal identifier of the federation into which this PostingIndicator is managed'
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: PRIVATE
            name:
              type: string
              description: '`PRIVATE` Name of the project this PostingIndicator refers to'
              examples:
                - Acme digital transformation - change management
              x-whoz-permission: PRIVATE
            startDate:
              type: string
              description: '`PRIVATE` Date before which this PostingIndicator should not be used'
              format: date
              x-whoz-permission: PRIVATE
          required:
            - federationId
            - name
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Referential
    Qualification:
      type: object
      title: Qualification
      description: |-
        **Functional Name**: Qualification

        **Description**: A qualification represents a set of skills and an expected level of mastery. A qualification can be part of a larger skills framework, with a tree structure with parent qualifications. Searching for a talent or talent request based by qualification automatically broadens the search to skills related to the parent qualification.


        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): Company-specific qualifications belong to a federation. Qualifications that are part of the global Whoz PSO, are available to all federations.  However, in the application, you can define rates for pairs of qualifications (Example: Role and grade) that are specific to a workspace.
      allOf:
        - type: object
          properties:
            expectedSkills:
              type: array
              description: '`PRIVATE` Mandatory and optional skills for this Qualification'
              items:
                $ref: '#/components/schemas/ExpectedSkill'
              x-whoz-permission: PRIVATE
            qualificationCategoryId:
              type: string
              description: '`UNCLASSIFIED` Concept id of the QualificationCategory this Qualification refers to'
              examples:
                - 70715fdc-09d8-435c-b80f-b0a00119d9ab
              x-whoz-permission: UNCLASSIFIED
          required:
            - qualificationCategoryId
        - $ref: '#/components/schemas/Concept'
      x-tags:
        - Referential
    Concept:
      type: object
      title: Concept
      description: Abstract Concept of the ontology
      allOf:
        - type: object
          properties:
            description:
              type: array
              description: '`PRIVATE` Descriptions of this Concept expressed in various languages'
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            externalId:
              type: string
              description: '`PRIVATE` External identifier of this Concept'
              examples:
                - ABC00123
              x-whoz-permission: PRIVATE
            hiddenTerms:
              type: array
              description: '`PRIVATE` Alternate hidden names of this Concept expressed in various languages. These are never shown to the User but still serve indexation / lookup purposes.'
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            id:
              type: string
              description: '`UNCLASSIFIED` Stable UUID of this Concept'
              examples:
                - 5bb75ca3-c8f2-4c85-8ba5-b21c004bcbb4
              x-whoz-permission: UNCLASSIFIED
            name:
              type: array
              description: '`PRIVATE` Names of this Concept expressed in various languages'
              minItems: 1
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
            parentExternalId:
              type: string
              description: '`PRIVATE` External id of the parent Concept'
              x-whoz-permission: PRIVATE
            parentId:
              type: string
              description: '`UNCLASSIFIED` UUID of the parent Concept'
              x-whoz-permission: UNCLASSIFIED
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the federation this Concept is defined in. Null when it is a global Whoz PSO concept.'
              examples:
                - 6219db813c119dcaf9456514
              x-whoz-permission: UNCLASSIFIED
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Indicates whether this concept is removed (soft deleted)'
              readOnly: true
              examples:
                - false
              x-whoz-permission: UNCLASSIFIED
            terms:
              type: array
              description: '`PRIVATE` Alternate names of this Concept expressed in various languages'
              items:
                $ref: '#/components/schemas/Translation'
              x-whoz-permission: PRIVATE
      x-tags:
        - Referential
    QualificationCategory:
      type: object
      title: QualificationCategory
      description: |-
        **Functional Name**: Qualification category

        **Description**: Indicates the type of qualification. Examples: Profession, specialty, product, certification, visa.

        **Organization Level**:
        * [Federation](./564f3fbf9b731-federation): Company-specific qualifications belong to a federation. Qualifications that are part of the global Whoz PSO, are available to all federations.
      allOf:
        - type: object
          properties:
            rootCategory:
              type: string
              enum:
                - CERTIFICATION
                - EDUCATION
                - GRADE
                - HABILITATION
                - OTHER
                - ROLE
              description: '`PRIVATE` Root category that this QualificationCategory derives'
              x-whoz-permission: PRIVATE
          required:
            - rootCategory
        - $ref: '#/components/schemas/Concept'
      x-tags:
        - Referential
    RateCard:
      type: object
      title: RateCard
      description: |-
        **Functional Name**: Rate card

        **Description**: A rate card contains the daily costs, daily rates and internal re-invoicing rates (IRR) relevant to the roles and grades listed by your organization.

        **Organization Level**:
        * [Federation](./564f3fbf9b731-federation): A rate card belongs to a federation. However, in the application, you can define rates for pairs of qualifications (Example: Role and grade) that are specific to a workspace.
      allOf:
        - type: object
          properties:
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the federation this RateCard belongsTo'
              examples:
                - 62081df89fa1081851828961
              x-whoz-permission: UNCLASSIFIED
            name:
              type: string
              description: Name of the RateCard to better identify it
              examples:
                - 2021 standard rates for France
            items:
              type: array
              items:
                $ref: '#/components/schemas/RateCardItem'
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Indicates whether this RateCard has been deleted (soft removal). This field is readonly, to delete a RateCard, call the [delete endpoint](#operation/rateCardDelete)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - name
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Referential
    RateCardItem:
      type: object
      title: RateCardItem
      description: Instantiate a grade and/or role couple for a Workspace with its unit rate and cost
      properties:
        gradeId:
          type: string
          description: Internal Qualification id of the corresponding grade
          examples:
            - 3f623e98-b5e8-11ec-b909-0242ac120002
        roleId:
          type: string
          description: Internal Qualification id of the corresponding role
          examples:
            - 3f623e98-b5e8-11ec-b909-0242ac120002
        unitCost:
          description: Standard unit cost for these Qualifications in this Workspace
          allOf:
            - $ref: '#/components/schemas/Amount'
        unitRate:
          description: Standard unit rate at which these Qualifications are sold in this Workspace
          allOf:
            - $ref: '#/components/schemas/Amount'
        unitInternalRate:
          description: Internal unit rate at which these Qualifications are sold in this Workspace
          allOf:
            - $ref: '#/components/schemas/Amount'
      x-tags:
        - Referential
    Skill:
      type: object
      title: Skill
      description: |-
        **Functional Name**: Skill

        **Description**: A skill is the learned ability to perform an action with a determined result and with good execution. Also, often completed within a given amount of time.

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A company-defined skill belongs to a federation. When the skill is part of the Whoz PSO it belongs to all federations.
      allOf:
        - type: object
          properties:
            sameAsConceptId:
              type: string
              description: '`UNCLASSIFIED` ConceptId of the PSO concept that represents the same thing'
              examples:
                - 1c0a15d2-3bbd-4e9c-8296-4c30d294f23f
              x-whoz-permission: UNCLASSIFIED
        - $ref: '#/components/schemas/Concept'
      x-tags:
        - Referential
    Learning_object:
      type: object
      title: Learning object
      description: |
        **Functional Name**: Learning object, previously known as training.

        **Description**: A learning object is a form of training that a talent can undertake to close a skill gap.

        **Main Touchpoints**

        **Organization Level**
        * [Federation](./564f3fbf9b731-federation): A federation manages a learning object.
        * [Workspace](./a136fe3b77f57-workspace): You can define which workspaces can view a local learning object. Global learning objects are visible in all workspaces.
      allOf:
        - type: object
          properties:
            audience:
              type: array
              description: Represent minimal skills of who can pretend to this audience
              items:
                $ref: '#/components/schemas/ExpectedSkill'
            duration:
              description: Duration of this learning object session
              allOf:
                - $ref: '#/components/schemas/Workload'
            language:
              type: string
              description: language of this learning object
              examples:
                - fr
            objectives:
              type: array
              description: What's target have this learning object
              items:
                type: string
            price:
              description: Price of this learning object session
              allOf:
                - $ref: '#/components/schemas/Amount'
            program:
              type: array
              description: List of step that  form the program of this learning object
              items:
                type: string
            preRequisites:
              type: array
              description: List of prerequisites for this learning object
              examples:
                - - Have followed the previous course…
              items:
                type: string
            skills:
              type: array
              description: List of skills obtained through this learning object
              items:
                $ref: '#/components/schemas/ExpectedSkill'
            source:
              type: string
              description: Source platform of this learning object
            title:
              type: string
              description: Title have explanations describing the learning object
            type:
              type: string
              enum:
                - LECTURE
                - DEMONSTRATION
                - OBSERVATION
                - GAME
                - EXERCISE
                - CASE_STUDY
                - SIMULATION
                - ACTION_PLAN
                - DISCOVERY
                - INVERTED_CLASS
                - INTERACTIVE_CLASS
                - SHORT_FILM
                - MOOCS
                - INDIVIDUAL_COACHING
                - CO_DEVELOPMENT
                - SERIOUS_GAME
                - DIALOG_CIRCLE
                - E_LEARNING
                - DOCUMENTATION
                - TUTORIAL
                - BLENDED_LEARNING
                - CLASSROOM
                - GROUP_COACHING
              description: 'type of this learning object (e-learning, course…)'
              examples:
                - LECTURE
            url:
              type: string
              description: Source url for this learning object
        - $ref: '#/components/schemas/GlobalizableEntity'
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Referential
    BillingItem:
      title: BillingItem
      description: |-
        **Functional Name**: Financial item

        **Description**: A billing item can represent either of these financial elements for a dossier or task:
        * Revenue recognition (Type = TURNOVER_RECOGNITION)
        * Billing item (Type = BILLING)

        **Main Touchpoints**:
        * [Dossier](./65fbe356c01f6-dossier): The dossier for which the financial item is related.
        * [Posting Indicator](./dnc2cbrt8s1uu-posting-indicator): The posting indicator used to track the billing item.
        * [Task](./e168d751db277-task): The task for which the financial item is related.

        **Organization Level**:
        * [Workspace](./a136fe3b77f57-workspace): A billing item is owned by a workspace.
      allOf:
        - type: object
          properties:
            amount:
              description: |
                `SECRET` The total amount for this billing item. If not provided, it is computed from the quantity and the unitCost.
              allOf:
                - $ref: '#/components/schemas/Amount'
              x-whoz-permission: SECRET
            dossierId:
              type: string
              description: |
                `UNCLASSIFIED` Id of the dossier to which this task belongs. Can only be set when creating the billing item.
              x-whoz-permission: UNCLASSIFIED
            id:
              type: string
              description: '`UNCLASSIFIED` Id of the billing item'
              examples:
                - 5c35ed045512aa0001c17370
              x-whoz-permission: UNCLASSIFIED
            note:
              type:
                - string
                - 'null'
              description: '`SECRET` Notes about this billing item.'
              x-whoz-permission: SECRET
            postingIndicator:
              type:
                - string
                - 'null'
              description: '`SECRET` External posting indicator.'
              x-whoz-permission: SECRET
            purchaseOrder:
              type:
                - string
                - 'null'
              description: '`SECRET` External purchase order reference.'
              x-whoz-permission: SECRET
            quantity:
              type: number
              description: |
                `SECRET` Quantity (decimal) of the item sold in this billing item, used to compute the amount.
              examples:
                - 0.5
              x-whoz-permission: SECRET
            removed:
              type: boolean
              description: |
                `UNCLASSIFIED` Indicates whether this billing item has been deleted (soft deletion).
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            status:
              type: string
              enum:
                - DRAFT
                - VALIDATED
                - TRANSMITTING
                - TRANSMITTED
              description: |
                `SECRET` Status of the billing item. Default value is DRAFT. Read-only. Controlled by the /validate, /unvalidate, and /mark-transmitted endpoints.
              readOnly: true
              examples:
                - DONE
              x-whoz-permission: SECRET
            taskId:
              type:
                - string
                - 'null'
              description: '`UNCLASSIFIED` Unique id of the task linked to this billing item.'
              x-whoz-permission: UNCLASSIFIED
            taskMonth:
              type: string
              description: |
                `SECRET` Date, expressed as a month and a year, of this task in this billing item.
              format: date
              examples:
                - 2020-01
              x-whoz-permission: SECRET
            title:
              type:
                - string
                - 'null'
              description: '`SECRET` Title of the billing item.'
              x-whoz-permission: SECRET
            type:
              type: string
              enum:
                - BILLING
                - TURNOVER_RECOGNITION
              description: |
                `UNCLASSIFIED` Billing item type. It can be turnover recognition or billing.
              x-whoz-permission: UNCLASSIFIED
            unitCost:
              description: |
                `SECRET` Amount of one item for this billing item, used to compute the amount field.
              allOf:
                - $ref: '#/components/schemas/Amount'
              x-whoz-permission: SECRET
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Id of the workspace of the billing item.'
              examples:
                - 58369bd44932a500014ee497
              x-whoz-permission: UNCLASSIFIED
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Tracking
    Timesheet:
      title: Timesheet
      description: |-
        **Functional Name**: Timesheet

        **Description**: The timesheet enables you to manage the time tracking validation process for a given talent and a given month. A timesheet can have several statuses:
        * DRAFT
        * SUBMITTED 
        * VALIDATED
        Once the timesheet is validated or submitted you can no longer modify worklogs for this talent for the given time period of the timesheet.


        **Organization Level**
        * [Talent](./4b21183f6dc28-talent): A timesheet belongs to a talent.
      allOf:
        - type: object
          properties:
            endDate:
              type: string
              description: '`UNCLASSIFIED` End date of this Timesheet (Last date of the month)'
              format: date
              examples:
                - '2019-02-28'
              x-whoz-permission: UNCLASSIFIED
            month:
              type: string
              description: '`UNCLASSIFIED` Month of this Timesheet (format is yyyy-MM)'
              examples:
                - 2019-02
              x-whoz-permission: UNCLASSIFIED
            talentId:
              type: string
              description: '`UNCLASSIFIED` Internal id of the associated Talent'
              examples:
                - 5f8578c7eef5f93dd0fd8f6e
              x-whoz-permission: UNCLASSIFIED
            status:
              type: string
              enum:
                - DRAFT
                - SUBMITTED
                - VALIDATED
              title: '`CONFIDENTIAL` Status of the validation of the Timesheet'
              x-whoz-permission: CONFIDENTIAL
            startDate:
              type: string
              description: '`UNCLASSIFIED` Start date of this Timesheet (first date of the month)'
              format: date
              examples:
                - '2019-02-01'
              x-whoz-permission: UNCLASSIFIED
        - $ref: '#/components/schemas/Domain'
      x-tags:
        - Tracking
    Business_credential_input:
      type: object
      title: Business credential input
      description: Payload to send to create a business credential of a project including adetailed context and the technical and cross-functional skills and methods highlighted during the project.
      allOf:
        - type: object
          properties:
            context:
              type: string
              description: '`PRIVATE` Context of the project.'
              examples:
                - Your Business credential context
              x-whoz-permission: PRIVATE
            expectedSkills:
              type: array
              description: '`PRIVATE` Skills expected from the Talent to perform the Task.'
              items:
                $ref: '#/components/schemas/ExpectedSkill'
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the Federation the referenced Project belongs to.'
              examples:
                - 62ecbc240c2afb6c3f6dcc33
              x-whoz-permission: UNCLASSIFIED
            language:
              type: string
              description: Language the business credential is written in.
              allOf:
                - $ref: '#/components/schemas/Language_Code'
              x-whoz-permission: PRIVATE
            projectId:
              type: string
              description: '`PRIVATE` Internal identifier of the Project this Business Credential belongs to'
              examples:
                - 62ecbc240c2afb6c3f6dcc33
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether the referenced Project has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            title:
              type: string
              description: '`PRIVATE` The title of the business credential.'
              examples:
                - Your Business credential title
              x-whoz-permission: PRIVATE
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Id of the Workspace the referenced Project belongs to.'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - language
            - title
            - workspaceId
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    Business_credential:
      type: object
      title: Business credential
      description: |-
        **Functional Name**: Business credential

        **Description**: Business credentials promote your organization’s expertise and past experience on project completion. A business credential includes the detailed context, technical, cross-functional skills and methods highlighted during the project.

        **Main Touchpoints**
        * [Project](./b387fc665661b-project): A business credential applies to a project.
      allOf:
        - type: object
          properties:
            context:
              type: string
              description: '`PRIVATE` Context of the referenced project.'
              examples:
                - Your Business credential context
              x-whoz-permission: PRIVATE
            expectedSkills:
              type: array
              description: '`PRIVATE` Skills expected from the Talent to perform the Task.'
              items:
                $ref: '#/components/schemas/ExpectedSkill'
              x-whoz-permission: PRIVATE
            federationId:
              type: string
              description: '`UNCLASSIFIED` Internal identifier of the Federation the referenced Project belongs to.'
              examples:
                - 62ecbc240c2afb6c3f6dcc33
              x-whoz-permission: UNCLASSIFIED
            language:
              type: string
              description: Language that the business credential is written in.
              allOf:
                - $ref: '#/components/schemas/Language_Code'
              x-whoz-permission: PRIVATE
            projectId:
              type: string
              description: '`PRIVATE` Internal identifier of the Project this Business Credential belongs to'
              examples:
                - 62ecbc240c2afb6c3f6dcc33
              x-whoz-permission: PRIVATE
            removed:
              type: boolean
              description: '`UNCLASSIFIED` Whether the referenced Project has been deleted (soft deletion)'
              readOnly: true
              default: false
              x-whoz-permission: UNCLASSIFIED
            title:
              type: string
              description: '`PRIVATE` Title of the business credential.'
              examples:
                - Your Business credential title
              x-whoz-permission: PRIVATE
            workspaceId:
              type: string
              description: '`UNCLASSIFIED` Id of the Workspace the Project belongs to.'
              examples:
                - 57b2c4f70f3c3a0001c237a8
              x-whoz-permission: UNCLASSIFIED
          required:
            - federationId
            - language
            - title
            - workspaceId
        - $ref: '#/components/schemas/Domain'
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    Business_credential_update_input:
      type: object
      title: Business credential update input
      description: Payload to send to update a business credential of a project including the detailed context and technical and cross-functional skills and methods highlighted during the project.
      allOf:
        - type: object
          properties:
            context:
              type: string
              description: Context of the project.
              examples:
                - Your Business credential context
            expectedSkills:
              type: array
              description: Skills expected from the Talent to perform the Task.
              items:
                $ref: '#/components/schemas/ExpectedSkill'
            language:
              type: string
              description: Language of the business credential.
              allOf:
                - $ref: '#/components/schemas/Language_Code'
            title:
              type: string
              description: Title of the business credential.
              examples:
                - Your Business credential title
          required:
            - language
            - title
        - $ref: '#/components/schemas/Customizable'
      x-tags:
        - Business
    BusinessCredentialListOutput:
      type: object
      title: BusinessCredentialListOutput
      allOf:
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Business_credential'
        - $ref: '#/components/schemas/BaseApiListOutput'
    Errors:
      type: object
      title: Errors
      description: Details about the errors encountered
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: object
            title: Error
            properties:
              status:
                type: string
                description: Final status
              code:
                type: string
                description: Error code
              title:
                type: string
                description: Summary of what happened
              detail:
                type: string
                description: Details about what happened
            required:
              - status
              - code
              - title
              - detail
      x-tags:
        - Common
        - API
security:
  - BearerToken: []
